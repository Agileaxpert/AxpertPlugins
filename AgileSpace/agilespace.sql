--
-- PostgreSQL database dump
--

-- Dumped from database version 14.17
-- Dumped by pg_dump version 14.17

-- Started on 2025-09-18 19:00:36

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- TOC entry 6 (class 2615 OID 2004610)
-- Name: agilespacefresh; Type: SCHEMA; Schema: -; Owner: agilespacefresh
--

CREATE SCHEMA agilespacefresh;


ALTER SCHEMA agilespacefresh OWNER TO agilespacefresh;

--
-- TOC entry 748 (class 1255 OID 2004611)
-- Name: add_months(date, integer); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.add_months(start date, months integer) RETURNS date
    LANGUAGE sql IMMUTABLE
    AS $$
  SELECT (start + (months || ' months')::INTERVAL)::DATE
$$;


ALTER FUNCTION agilespacefresh.add_months(start date, months integer) OWNER TO agilespace;

--
-- TOC entry 766 (class 1255 OID 2004612)
-- Name: add_time_values(text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.add_time_values(time_list text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
    total_seconds INT := 0;
    time_value TEXT;
    hours INT;
    minutes INT;
    seconds INT;
    time_array TEXT[];
    parts TEXT[];
BEGIN
    time_array := string_to_array(time_list, ',');

    FOREACH time_value IN ARRAY time_array LOOP
        parts := string_to_array(time_value, ':');

        hours := COALESCE(NULLIF(parts[1], ''), '0')::INT;
        minutes := COALESCE(NULLIF(parts[2], ''), '0')::INT;
        seconds := COALESCE(NULLIF(parts[3], ''), '0')::INT;

        total_seconds := total_seconds + (hours * 3600) + (minutes * 60) + seconds;
    END LOOP;

    RETURN LPAD((total_seconds / 3600)::TEXT, 2, '0') || ':' ||
           LPAD(((total_seconds % 3600) / 60)::TEXT, 2, '0') || ':' ||
           LPAD((total_seconds % 60)::TEXT, 2, '0');
END;
$$;


ALTER FUNCTION agilespacefresh.add_time_values(time_list text) OWNER TO agilespace;

--
-- TOC entry 767 (class 1255 OID 2004613)
-- Name: append_username_to_users(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.append_username_to_users() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Append the username to the comma-separated list
    NEW.fld1 := (
        CASE 
            WHEN NEW.fld1 IS NULL THEN
                NEW.fld1 -- Assuming the username is already included in the NEW row
            ELSE
                NEW.fld1 || ',' || NEW.users
        END
    );

    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.append_username_to_users() OWNER TO agilespace;

--
-- TOC entry 768 (class 1255 OID 2004614)
-- Name: append_users(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.append_users() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Append the username to the comma-separated list
    NEW.users := (
        CASE 
            WHEN NEW.users IS NULL THEN
                NEW.users
            ELSE
                NEW.users || ',' || NEW.users
        END
    );
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.append_users() OWNER TO agilespace;

--
-- TOC entry 769 (class 1255 OID 2004615)
-- Name: append_viewbyusers(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.append_viewbyusers() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Append the username to the comma-separated list
    NEW.users := (
        CASE 
            WHEN NEW.users IS NULL THEN
                NEW.users
            ELSE
                NEW.users || ',' || NEW.users
        END
    );
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.append_viewbyusers() OWNER TO agilespace;

--
-- TOC entry 770 (class 1255 OID 2004616)
-- Name: assign_taskname(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.assign_taskname() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Only generate a new task name if taskname is NULL or empty
    IF NEW.taskname IS NULL OR NEW.taskname = '' THEN
        NEW.taskname := 'Task-' || NEXTVAL('taskname_seq');
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.assign_taskname() OWNER TO agilespace;

--
-- TOC entry 772 (class 1255 OID 2004617)
-- Name: axp_pr_page_creation(character varying, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.axp_pr_page_creation(pname character varying, pcaption character varying, ppagetype character varying, pparentname character varying, paction character varying, props character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare 
   pparent    VARCHAR (50);
   pordno     NUMERIC (15);
   plevelno   NUMERIC (15);
   psysdate   VARCHAR (30);

BEGIN

    IF LOWER (paction) <> 'delete' THEN
      --Page Creation before or after

      SELECT parent, ordno, levelno INTO pparent, pordno, plevelno
        FROM (SELECT parent,CASE WHEN LOWER (paction) = 'before' THEN ordno ELSE ordno + 1 END ordno, levelno
                FROM axp_vw_menulist
               WHERE name = pparentname AND TYPE = 'p'
              UNION ALL
               SELECT a.name,MAX (b.ordno) + 1 AS ordno,a.levelno + 1 AS levelno
                  FROM axp_vw_menulist a, axp_vw_menulist b
                 WHERE a.name = pparentname AND b.menupath LIKE replace(a.menupath,'\','\\') || '%'  AND a.TYPE = 'h'
              GROUP BY a.name, a.levelno) a;

      psysdate := TRIM (TO_CHAR (SYSDATE(), 'dd/mm/yyyy hh24:mi:ss'));

      UPDATE axpages SET ordno = ordno + 1 WHERE ordno >= pordno;

      INSERT INTO axpages (name,caption,blobno,visible,TYPE,parent,props,ordno,levelno,pagetype,createdon,
							updatedon,importedon)
           VALUES (pname,pcaption,1,'T','p',pparent,props,pordno,plevelno,ppagetype,psysdate,psysdate,psysdate);

     
   ELSE
      --Page Deleting
      SELECT ordno INTO pordno FROM axp_vw_menulist WHERE name = pname AND TYPE = 'p';

      DELETE FROM axpages WHERE name = pname; 

      UPDATE axpages SET ordno = ordno - 1 WHERE ordno >= pordno and pordno>0 ;

	

   END IF;

END;
$$;


ALTER FUNCTION agilespacefresh.axp_pr_page_creation(pname character varying, pcaption character varying, ppagetype character varying, pparentname character varying, paction character varying, props character varying) OWNER TO agilespace;

--
-- TOC entry 773 (class 1255 OID 2004618)
-- Name: axp_sch_axgs000001(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.axp_sch_axgs000001() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
begin 
if tg_op='INSERT'  then 

insert  into axp_appsearch_data_v2 (hltype,structname,searchtext,params,docid) values('tstruct','Taskm',new.taskid,'~taskid='||new.taskid,'AXGS000001');

else if  tg_op='UPDATE'   then

insert  into axp_appsearch_data_v2 (hltype,structname,searchtext,params,docid) values('tstruct','Taskm',new.taskid,'~taskid='||new.taskid,'AXGS000001');

else  delete  FROM axp_appsearch_data_v2 where hltype='tstruct' and params='~taskid='||old.taskid;

 end if;

 end if;
return new;
exception

      when unique_violation then

UPDATE axp_appsearch_data_v2
        SET searchtext = NEW.taskid, params = '~taskid=' || NEW.taskid
        WHERE hltype = 'tstruct' AND docid = 'AXGS000001';

        RETURN NEW;
   when others then 

return new;

 end ;  
 $$;


ALTER FUNCTION agilespacefresh.axp_sch_axgs000001() OWNER TO agilespace;

--
-- TOC entry 784 (class 1255 OID 2004619)
-- Name: axp_tr_search_appsearch(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.axp_tr_search_appsearch() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
    if TG_OP = 'INSERT' or TG_OP = 'UPDATE' then
    if  new.periodically ='T' or new.srctable is  null or new.srcfield is  null then
if TG_OP = 'INSERT'   then
insert  into axp_appsearch_data_period (hltype,structname,searchtext,params,docid) values(new.hltype,new.structname, case when new.periodically ='T' then new.searchtext else  new.caption end ,new.params,new.docid);
else if TG_OP = 'UPDATE'  then
insert  into axp_appsearch_data_period (hltype,structname,searchtext,params,docid) values(old.hltype,old.structname, case when old.periodically ='T' then old.searchtext else  old.caption end ,old.params,old.docid);
end if;
  end if;
  
  END IF;
  end if;
 
if TG_OP = 'DELETE'  then
   delete from axp_appsearch_data_period where docid = old.docid;
    execute 'drop trigger IF EXISTS axp_sch_'||old.docid|| ' ON '||OLD.srctable||';';
     execute 'DROP FUNCTION IF EXISTS '||'axp_sch_'||old.docid||';';
end if;
 
  RETURN NEW;
exception
      when unique_violation then
      update axp_appsearch_data_period set  hltype= new.hltype , structname = new.structname,searchtext = case when new.periodically ='T' then new.searchtext else  new.caption end  ,params=new.params where docid= new.docid;
         RETURN NEW;
    END;
$$;


ALTER FUNCTION agilespacefresh.axp_tr_search_appsearch() OWNER TO agilespace;

--
-- TOC entry 785 (class 1255 OID 2004620)
-- Name: calculate_working_hours(timestamp without time zone, timestamp without time zone); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.calculate_working_hours(start_time timestamp without time zone, end_time timestamp without time zone) RETURNS interval
    LANGUAGE plpgsql
    AS $$
DECLARE
    total_time INTERVAL := '0 minutes';
    current_date DATE;
    start_of_day TIMESTAMP;
    end_of_day TIMESTAMP;
    work_start TIME := '09:30:00';
    work_end TIME := '18:30:00';
BEGIN
    FOR current_date IN SELECT generate_series(DATE(start_time), DATE(end_time), INTERVAL '1 day')
    LOOP
        -- Skip weekends (Sunday = 0, Saturday = 6)
        IF EXTRACT(DOW FROM current_date) NOT IN (0, 6) THEN
            start_of_day := current_date + work_start::INTERVAL;
            end_of_day := current_date + work_end::INTERVAL;
            -- Adjust start_time to the beginning of the workday if it's before 9:30 AM
            IF start_time < start_of_day THEN
                start_time := start_of_day;
            END IF;
            -- Adjust end_time to the end of the workday if it's after 6:30 PM
            IF end_time > end_of_day THEN
                end_time := end_of_day;
            END IF;
            -- Add valid working time for that day
            IF start_time <= end_time THEN
                total_time := total_time + (end_time - start_time);
            END IF;
        END IF;
    END LOOP;

    RETURN total_time;
END;
$$;


ALTER FUNCTION agilespacefresh.calculate_working_hours(start_time timestamp without time zone, end_time timestamp without time zone) OWNER TO agilespace;

--
-- TOC entry 786 (class 1255 OID 2004621)
-- Name: count_dcs(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.count_dcs(p_transid character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$ 
declare 
    l_result varchar(15);
begin
select string_agg(b.name,', ' order by stransid) dcs into l_result
  from axpdef_dc b
  where b.stransid =p_transid  ;
    return l_result;
end; $$;


ALTER FUNCTION agilespacefresh.count_dcs(p_transid character varying) OWNER TO agilespace;

--
-- TOC entry 787 (class 1255 OID 2004622)
-- Name: datediff(character varying, timestamp without time zone, timestamp without time zone); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.datediff(units character varying, start_t timestamp without time zone, end_t timestamp without time zone) RETURNS integer
    LANGUAGE plpgsql
    AS $$
DECLARE
diff_interval INTERVAL; 
diff INT = 0;
years_diff INT = 0;
BEGIN
IF units IN ('yy', 'yyyy', 'year', 'mm', 'm', 'month') THEN
years_diff = DATE_PART('year', end_t) - DATE_PART('year', start_t);
IF units IN ('yy', 'yyyy', 'year') THEN
RETURN years_diff;
ELSE
RETURN years_diff * 12 + (DATE_PART('month', end_t) - DATE_PART('month', start_t)); 
END IF;
END IF;
diff_interval = end_t - start_t;
diff = diff + DATE_PART('day', diff_interval);
IF units IN ('wk', 'ww', 'week') THEN
diff = diff/7;
RETURN diff;
END IF;
IF units IN ('dd', 'd', 'day') THEN
RETURN diff;
END IF;
diff = diff * 24 + DATE_PART('hour', diff_interval); 
IF units IN ('hh', 'hour') THEN
RETURN diff;
END IF;
diff = diff * 60 + DATE_PART('minute', diff_interval);
IF units IN ('mi', 'n', 'minute') THEN
 RETURN diff;
END IF;
diff = diff * 60 + DATE_PART('second', diff_interval);
RETURN diff;
END;
$$;


ALTER FUNCTION agilespacefresh.datediff(units character varying, start_t timestamp without time zone, end_t timestamp without time zone) OWNER TO agilespace;

--
-- TOC entry 788 (class 1255 OID 2004623)
-- Name: delete_from_vw_pegv2_alltasks(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.delete_from_vw_pegv2_alltasks() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Replace with logic to delete from the underlying table(s)
    DELETE FROM underlying_table
    WHERE taskid='1813990000000';  -- Replace with appropriate condition for your table
    RETURN OLD;
END;
$$;


ALTER FUNCTION agilespacefresh.delete_from_vw_pegv2_alltasks() OWNER TO agilespace;

--
-- TOC entry 789 (class 1255 OID 2004624)
-- Name: execute_sql_list(text, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.execute_sql_list(sql_list text, sql_separator character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    query text;
BEGIN
    query := replace(sql_list, sql_separator, E';\n');
    IF query IS NOT NULL AND query <> '' THEN
        EXECUTE query;
    END IF;
END;
$$;


ALTER FUNCTION agilespacefresh.execute_sql_list(sql_list text, sql_separator character varying) OWNER TO agilespace;

--
-- TOC entry 790 (class 1255 OID 2004625)
-- Name: fn_auto_close_tasks(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_auto_close_tasks() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Check if the task is completed and 2 days have passed
    IF NEW.status = 'Completed' THEN
        -- Auto-close if not updated within 2 days
        UPDATE taskf_hdr
        SET status = 'Closed'
        WHERE taskname = NEW.taskname
        AND status = 'Completed'
        AND completiondate <= CURRENT_DATE - INTERVAL '2 days';
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.fn_auto_close_tasks() OWNER TO agilespace;

--
-- TOC entry 791 (class 1255 OID 2004626)
-- Name: fn_ax_homebuild_master(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_ax_homebuild_master() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare 
v_sid numeric(15);

	BEGIN
	select nextval('ax_homebuild_master_seq') into v_sid ; 

        IF (TG_OP = 'INSERT') THEN 
		
		NEW.HOMEBUILD_ID = v_sid;
		
		return new;
	end if;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_ax_homebuild_master() OWNER TO agilespace;

--
-- TOC entry 792 (class 1255 OID 2004627)
-- Name: fn_ax_layoutdesign(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_ax_layoutdesign() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
	declare 
	v_sid numeric(15);
    
    BEGIN

        -- Work out the increment/decrement amount(s).
        IF (TG_OP = 'INSERT') THEN 
		
		select nextval('ax_layoutdesign_seq') into v_sid; 
		
		NEW.DESIGN_ID = v_sid;
		
		return new;
	end if;
		
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_ax_layoutdesign() OWNER TO agilespace;

--
-- TOC entry 793 (class 1255 OID 2004628)
-- Name: fn_ax_layoutdesign_saved(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_ax_layoutdesign_saved() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
	declare 
	v_sid numeric(15);
    
    BEGIN

        -- Work out the increment/decrement amount(s).
        IF (TG_OP = 'INSERT') THEN 
		
		select nextval('ax_layoutdesign_saved_seq') into v_sid; 
		
		NEW.DESIGN_ID = v_sid;
		
		return new;
	end if;
		
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_ax_layoutdesign_saved() OWNER TO agilespace;

--
-- TOC entry 794 (class 1255 OID 2004629)
-- Name: fn_ax_notify(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_ax_notify() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare 
v_sid numeric(15);

	BEGIN
		select nextval('ax_notify_seq') into v_sid ; 

        IF (TG_OP = 'INSERT') THEN 
		
		NEW.NOTIFICATION_ID = v_sid;
		
		return new;
	end if;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_ax_notify() OWNER TO agilespace;

--
-- TOC entry 774 (class 1255 OID 2004630)
-- Name: fn_ax_page_saved(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_ax_page_saved() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare 
v_sid numeric(15);

	BEGIN
		select nextval('ax_page_saved_seq') into v_sid ; 

        IF (TG_OP = 'INSERT') THEN 
		
		NEW.PAGE_ID = v_sid;
		
		return new;
	end if;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_ax_page_saved() OWNER TO agilespace;

--
-- TOC entry 775 (class 1255 OID 2004631)
-- Name: fn_ax_page_templates(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_ax_page_templates() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare 
v_sid numeric(15);

	BEGIN
		select nextval('ax_page_template_seq') into v_sid ; 

        IF (TG_OP = 'INSERT') THEN 
		
		NEW.TEMPLATE_ID = v_sid;
		
		return new;
	end if;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_ax_page_templates() OWNER TO agilespace;

--
-- TOC entry 776 (class 1255 OID 2004632)
-- Name: fn_ax_pages(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_ax_pages() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare 
v_sid numeric(15);

	BEGIN
		select nextval('ax_pages_seq') into v_sid ; 

        IF (TG_OP = 'INSERT') THEN 
		
		NEW.PAGE_ID = v_sid;
		
		return new;
	end if;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_ax_pages() OWNER TO agilespace;

--
-- TOC entry 777 (class 1255 OID 2004633)
-- Name: fn_ax_widget(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_ax_widget() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare 
v_sid numeric(15);

	BEGIN
	select nextval('ax_widg_seq') into v_sid ; 

        IF (TG_OP = 'INSERT') THEN 
		
		NEW.widget_id = v_sid;
		
		return new;
	end if;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_ax_widget() OWNER TO agilespace;

--
-- TOC entry 778 (class 1255 OID 2004634)
-- Name: fn_ax_widget_published(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_ax_widget_published() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare 
v_sid numeric(15);

	BEGIN
		select nextval('ax_widget_publish_seq') into v_sid ; 

        IF (TG_OP = 'INSERT') THEN 
		
		NEW.WIDGET_ID = v_sid;
		
		return new;
	end if;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_ax_widget_published() OWNER TO agilespace;

--
-- TOC entry 779 (class 1255 OID 2004635)
-- Name: fn_ax_widget_saved(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_ax_widget_saved() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare 
v_sid numeric(15);

	BEGIN
		select nextval('ax_widget_saved_seq') into v_sid ; 

        IF (TG_OP = 'INSERT') THEN 
		
		NEW.WIDGET_ID = v_sid;
		
		return new;
	end if;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_ax_widget_saved() OWNER TO agilespace;

--
-- TOC entry 780 (class 1255 OID 2004636)
-- Name: fn_axactivetasks(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axactivetasks() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare 
v_grpname varchar[] DEFAULT  ARRAY[]::varchar[];
usercount int;
v_assignmodecnd int;
v_defusers varchar;
v_datagrpusers varchar;
v_usergrpuser varchar;
v_initiator_usergrps varchar;
v_processonwer_cnt int;
v_sqlstmt refcursor;
rec record;
begin
/* assigntoflg=
 * 1 - Reporting manager
 * 2 - Assign to Actor
 * 3 - Assign to Role
 * 4 - From form field
 * 6 - Skip level
 */
/*processownerflg
 * 1 - Actor
 * 2 - Role
 */	
/*allowsendflg
 * 1 - None
 * 2 - Any user
 * 3 - Users in this process
 * 4 - Actor
 * */	
	

	
----------------------------Assign to Reporting Manager & Form fields when touser is null | Redirect to Process owners	
if new.assigntoflg in('1','4','6') and new.touser is null and new.grouped is null then            
		
	select count(*) into v_processonwer_cnt
	from axuserlevelgroups c
	where c.usergroup = new.processowner		
	and ((c.startdate is not null and current_date  >= c.startdate) or (c.startdate is null)) 
	and ((c.enddate is not null and current_date  <= c.enddate) or (c.enddate is null));

	if v_processonwer_cnt > 0 then	
	insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,
	keyvalue,transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,
	displayicon,displaytitle,displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,
	useridentificationfilter,useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,
	assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
	approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,allowsend,
	allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,pownerflg,autoapprove,isoptional,
	Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
	select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
	new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.username,new.priorindex,new.priortaskname,new.corpdimension,
	new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,
	new.displaybuttons,new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,	new.useridentificationfilter,
	new.useridentificationfilter_of,new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,
	new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,new.processownerflg,new.pownerfilter,
	new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,
	new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,new.returnable,
	new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,new.initonbehalf,'T',
	new.autoapprove,new.isoptional,new.Reminderstartdate,new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
	from axuserlevelgroups c
	where c.usergroup = new.processowner		
	and ((c.startdate is not null and current_date  >= c.startdate) or (c.startdate is null)) 
	and ((c.enddate is not null and current_date  <= c.enddate) or (c.enddate is null));
	else
	---Redirect to default role when no users exists in process owner
	insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,
	keyvalue,transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,
	displayicon,displaytitle,displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,
	useridentificationfilter,useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,
	assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
	approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,allowsend,
	allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,pownerflg,autoapprove,isoptional,
	Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
	select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
	new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.username,new.priorindex,new.priortaskname,new.corpdimension,
	new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,
	new.displaybuttons,new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,	new.useridentificationfilter,
	new.useridentificationfilter_of,new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,
	new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,new.processownerflg,new.pownerfilter,
	new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,
	new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,new.returnable,
	new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,new.initonbehalf,'T',
	new.autoapprove,new.isoptional,new.Reminderstartdate,new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
	from axuserlevelgroups c
	where c.usergroup = 'default'		
	and ((c.startdate is not null and current_date  >= c.startdate) or (c.startdate is null)) 
	and ((c.enddate is not null and current_date  <= c.enddate) or (c.enddate is null));
	end if;
								
end if;	
	
	
-----------------------Assign to Reporting Manager & Form fields & User exists  - Redirect to delegated users
if new.assigntoflg in('1','4','6') and new.touser is not null and new.grouped ='T' then	

	insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,keyvalue,
	transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,displayicon,displaytitle,
	displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,useridentificationfilter,
	useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,assigntoactor,actorfilter,recordid,processownerflg,
	pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,approvalcomments,rejectcomments,returncomments,escalation,reminder,
	displaymcontent,groupwithpriorindex,delegation,returnable,allowsend,allowsendflg,sendtoactor,initiator_approval,
	usebusinessdatelogic,initonbehalf,autoapprove,isoptional,Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 								
	select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,new.execonapprove,
	new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.tousername,new.priorindex,new.priortaskname,new.corpdimension,new.orgdimension,new.department,
	new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,new.displaybuttons,new.groupfield,new.groupvalue,
	new.priorusername,new.initiator,new.mapfieldvalue,new.useridentificationfilter,new.useridentificationfilter_of,new.mapfield_group,new.mapfield,'T',
	new.indexno,new.subindexno,new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,new.processownerflg,new.pownerfilter,
	new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,new.approvalcomments,new.rejectcomments,
	new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,'T',new.returnable,new.allowsend,new.allowsendflg,
	new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,new.initonbehalf,new.autoapprove,
	new.isoptional,new.Reminderstartdate,new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata			
	from axprocessdef_delegation c 
	where c.fromusername = new.touser				
	and current_date  >= c.fromdate
	and current_date  <= c.todate;

end if;
	


------------------------------- Assign to Actor
if new.assigntoflg ='2' then 
	
	select coalesce(assignmodecnd,0) assignmodecnd,defusername,case when array_length(string_to_array(defusername,','),1) is null then 0 else  array_length(string_to_array(defusername,','),1) end usercount
	into v_assignmodecnd,v_defusers ,usercount
	from axpdef_peg_actor a
	where a.actorname=new.assigntoactor; 


	if v_assignmodecnd = 1 then --------Default user
	
		if usercount > 0 then
		insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,
		keyvalue,transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,displayicon,
		displaytitle,displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,
		useridentificationfilter,useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,assigntoactor,
		actorfilter,recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,approvalcomments,
		rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,allowsend,allowsendflg,sendtoactor,
		initiator_approval,usebusinessdatelogic,initonbehalf,actor_default_users,autoapprove,isoptional,
		Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
		select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
		new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,regexp_split_to_table(v_defusers,','),new.priorindex,new.priortaskname,
		new.corpdimension,new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,
		new.displaycontent,new.displaybuttons,new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,
		new.useridentificationfilter,new.useridentificationfilter_of,new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,
		new.processowner,new.assigntoflg,new.assigntoactor,	new.actorfilter,new.recordid,new.processownerflg,new.pownerfilter,new.approvereasons,
		new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,new.approvalcomments,new.rejectcomments,new.returncomments,
		new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,new.returnable,new.allowsend,new.allowsendflg,new.sendtoactor,
		new.initiator_approval,new.usebusinessdatelogic,new.initonbehalf,'T' ,new.autoapprove,
		new.isoptional,new.Reminderstartdate,new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
		from dual;
	
	
	
		---------Delegation(Default users)
		insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,keyvalue,
		transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,displayicon,displaytitle,
		displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,useridentificationfilter,
		useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,assigntoactor,actorfilter,
		recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,approvalcomments,
		rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,delegation,returnable,allowsend,allowsendflg,
		sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,autoapprove,isoptional,
		Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
		select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,
		new.keyfield,new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.tousername,new.priorindex,new.priortaskname,
		new.corpdimension,new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,
		new.displaycontent,new.displaybuttons,new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,
		new.useridentificationfilter,new.useridentificationfilter_of,new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,
		new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,new.processownerflg,new.pownerfilter,
		new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,new.approvalcomments,
		new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,'T',new.returnable,
		new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,new.initonbehalf,new.autoapprove,
		new.isoptional,new.Reminderstartdate,new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
		from 
		(select regexp_split_to_table(v_defusers,',') fuser)a,axprocessdef_delegation c 
		where a.fuser = c.fromusername				
		and current_date  >= c.fromdate
		and current_date  <= c.todate;	
		else
		------------Redirect to process owner	
		select count(*) into v_processonwer_cnt
		from axuserlevelgroups c
		where c.usergroup = new.processowner		
		and ((c.startdate is not null and current_date  >= c.startdate) or (c.startdate is null)) 
		and ((c.enddate is not null and current_date  <= c.enddate) or (c.enddate is null));
	
		if v_processonwer_cnt > 0 then			
		insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,
		keyvalue,transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,
		displayicon,displaytitle,displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,
		useridentificationfilter,useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,
		assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
		approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,allowsend,
		allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,pownerflg,autoapprove,
		isoptional,Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
		select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
		new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.username,new.priorindex,new.priortaskname,new.corpdimension,
		new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,
		new.displaybuttons,new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,	new.useridentificationfilter,
		new.useridentificationfilter_of,new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,
		new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,new.processownerflg,new.pownerfilter,
		new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,
		new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,new.returnable,
		new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,new.initonbehalf,'T',
		new.autoapprove,new.isoptional,new.Reminderstartdate,new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
		from axuserlevelgroups c
		where c.usergroup = new.processowner		
		and ((c.startdate is not null and current_date  >= c.startdate) or (c.startdate is null)) 
		and ((c.enddate is not null and current_date  <= c.enddate) or (c.enddate is null));
		else----Redirect to default role if users are not exists in process owner
		insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,
		keyvalue,transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,
		displayicon,displaytitle,displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,
		useridentificationfilter,useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,
		assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
		approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,allowsend,
		allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,pownerflg,autoapprove,
		isoptional,Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
		select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
		new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.username,new.priorindex,new.priortaskname,new.corpdimension,
		new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,
		new.displaybuttons,new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,	new.useridentificationfilter,
		new.useridentificationfilter_of,new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,
		new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,new.processownerflg,new.pownerfilter,
		new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,
		new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,new.returnable,
		new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,new.initonbehalf,'T',
		new.autoapprove,new.isoptional,new.Reminderstartdate,new.Escalationstartdate,
		new.reminderjsondata,new.escalationjsondata
		from axuserlevelgroups c
		where c.usergroup = 'default'		
		and ((c.startdate is not null and current_date  >= c.startdate) or (c.startdate is null)) 
		and ((c.enddate is not null and current_date  <= c.enddate) or (c.enddate is null));
		end if;
			
		--------------Delegation(Process owner)
		insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,keyvalue,
		transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,displayicon,displaytitle,
		displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,useridentificationfilter,useridentificationfilter_of,
		mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,
		approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,approvalcomments,rejectcomments,returncomments,escalation,
		reminder,displaymcontent,groupwithpriorindex,delegation,returnable,allowsend,allowsendflg,sendtoactor,initiator_approval,
		usebusinessdatelogic,initonbehalf,autoapprove,isoptional,Reminderstartdate,
		Escalationstartdate,reminderjsondata,escalationjsondata) 								
		select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
		new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.tousername,new.priorindex,new.priortaskname,new.corpdimension,
		new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,new.displaybuttons,
		new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,new.useridentificationfilter,new.useridentificationfilter_of,
		new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,
		new.processownerflg,new.pownerfilter,new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,
		new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,'T',
		new.returnable,new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,
		new.initonbehalf,new.autoapprove,new.isoptional,new.Reminderstartdate,
		new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
		from axuserlevelgroups a,axprocessdef_delegation c 
		where a.usergroup = new.processowner
		and a.username = c.fromusername
		and current_date  >= c.fromdate
		and current_date  <= c.todate					 		
		and ((a.startdate is not null and current_date  >= a.startdate) or (a.startdate is null)) 
		and ((a.enddate is not null and current_date  <= a.enddate) or (a.enddate is null));
		
		end if;
	elseif v_assignmodecnd = 2 then -----------User group
			
		select distinct string_agg(usergroupname,',') into  v_initiator_usergrps 
		from axpdef_peg_usergroups where username = case when length(new.initonbehalf)>1 then new.initonbehalf else  new.initiator end
		and active='T'
		and effectivefrom <= current_date;
		
		----------- Check approval users are assigned for the initiator's group
		select string_agg(concat(usergroupname,'~~',unames),'|~') ,count(*) into v_usergrpuser,usercount
		from (select distinct b.usergroupname, b.ugrpusername unames
		from axpdef_peg_actor a
		join axpdef_peg_actorusergrp b on a.axpdef_peg_actorid=b.axpdef_peg_actorid
		where a.actorname = new.assigntoactor 
		and b.usergroupname in (select regexp_split_to_table(v_initiator_usergrps,','))
		order by 1 )a;
		
			
			--------- if approval users are assinged in process users
			if usercount > 0 then 
			
				open v_sqlstmt for 
				select  split_part(unnest(string_to_array(v_usergrpuser,'|~')),'~~',1) ugrpname,
				split_part(unnest(string_to_array(v_usergrpuser,'|~')),'~~',2) ugrpusers;
			
				fetch next from v_sqlstmt into rec;
			
				while found 		
    			loop 	
			
				insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,keyvalue,
				transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,displayicon,displaytitle,
				displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,useridentificationfilter,
				useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,assigntoactor,actorfilter,recordid,
				processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,approvalcomments,rejectcomments,
				returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,
				allowsend,allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,actor_user_groups,
				autoapprove,isoptional,Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
				select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
				new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,regexp_split_to_table(rec.ugrpusers,','),new.priorindex,new.priortaskname,
				new.corpdimension,new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,
				new.displaybuttons,new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,new.useridentificationfilter,
				new.useridentificationfilter_of,new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,new.processowner,new.assigntoflg,new.assigntoactor,
				new.actorfilter,new.recordid,new.processownerflg,new.pownerfilter,new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,
				new.rejectreasons,new.defregtext,new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,
				new.groupwithpriorindex,new.returnable,new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,
				new.initonbehalf,rec.ugrpname,new.autoapprove,new.isoptional,new.Reminderstartdate,
				new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
				from dual;
			
				 fetch next from v_sqlstmt into rec;
		   		    
    			end loop;	
			
				---------Delegation(usergroup users)
				insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,keyvalue,
				transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,displayicon,displaytitle,
				displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,useridentificationfilter,
				useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,assigntoactor,actorfilter,
				recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,approvalcomments,
				rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,delegation,returnable,allowsend,allowsendflg,
				sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,autoapprove,isoptional,
				Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
				select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,
				new.keyfield,new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.tousername,new.priorindex,new.priortaskname,
				new.corpdimension,new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,
				new.displaycontent,new.displaybuttons,new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,
				new.useridentificationfilter,new.useridentificationfilter_of,new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,
				new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,new.processownerflg,new.pownerfilter,
				new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,new.approvalcomments,
				new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,'T',new.returnable,
				new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,new.initonbehalf,
				new.autoapprove,new.isoptional,new.Reminderstartdate,new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
				from 
				(select regexp_split_to_table(v_usergrpuser,',') fuser)a,axprocessdef_delegation c 
				where a.fuser = c.fromusername				
				and current_date  >= c.fromdate
				and current_date  <= c.todate;
				
			else ------------------------ if approval users are not assinged in process users,Redirect to process owner	
				select count(*) into v_processonwer_cnt
				from axuserlevelgroups c
				where c.usergroup = new.processowner		
				and ((c.startdate is not null and current_date  >= c.startdate) or (c.startdate is null)) 
				and ((c.enddate is not null and current_date  <= c.enddate) or (c.enddate is null));
	
				if v_processonwer_cnt > 0 then				
				insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,
				keyvalue,transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,
				displayicon,displaytitle,displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,
				useridentificationfilter,useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,
				assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
				approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,allowsend,
				allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,pownerflg,autoapprove,
				isoptional,Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
				select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
				new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.username,new.priorindex,new.priortaskname,new.corpdimension,
				new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,
				new.displaybuttons,new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,	new.useridentificationfilter,
				new.useridentificationfilter_of,new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,
				new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,new.processownerflg,new.pownerfilter,
				new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,
				new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,new.returnable,
				new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,
				new.initonbehalf,'T',new.autoapprove,new.isoptional,new.Reminderstartdate,
				new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
				from axuserlevelgroups c
				where c.usergroup = new.processowner		
				and ((c.startdate is not null and current_date  >= c.startdate) or (c.startdate is null)) 
				and ((c.enddate is not null and current_date  <= c.enddate) or (c.enddate is null));
				else
				---Redirect to default role when no users exists in process owner
				insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,
				keyvalue,transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,
				displayicon,displaytitle,displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,
				useridentificationfilter,useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,
				assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
				approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,allowsend,
				allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,pownerflg,
				autoapprove,isoptional,Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
				select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
				new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.username,new.priorindex,new.priortaskname,new.corpdimension,
				new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,
				new.displaybuttons,new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,	new.useridentificationfilter,
				new.useridentificationfilter_of,new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,
				new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,new.processownerflg,new.pownerfilter,
				new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,
				new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,new.returnable,
				new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,
				new.initonbehalf,'T',new.autoapprove,new.isoptional,new.Reminderstartdate,
				new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
				from axuserlevelgroups c
				where c.usergroup = 'default'		
				and ((c.startdate is not null and current_date  >= c.startdate) or (c.startdate is null)) 
				and ((c.enddate is not null and current_date  <= c.enddate) or (c.enddate is null));
				end if;
				--------------Delegation(Process owner)
				insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,keyvalue,
				transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,displayicon,displaytitle,
				displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,useridentificationfilter,useridentificationfilter_of,
				mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,
				approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,approvalcomments,rejectcomments,returncomments,escalation,
				reminder,displaymcontent,groupwithpriorindex,delegation,returnable,allowsend,allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic
				,initonbehalf,autoapprove,isoptional,Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 								
				select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
				new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.tousername,new.priorindex,new.priortaskname,new.corpdimension,
				new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,new.displaybuttons,
				new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,new.useridentificationfilter,new.useridentificationfilter_of,
				new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,
				new.processownerflg,new.pownerfilter,new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,
				new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,'T',
				new.returnable,new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,
				new.initonbehalf,new.autoapprove,new.isoptional,new.Reminderstartdate,new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
				from axuserlevelgroups a,axprocessdef_delegation c 
				where a.usergroup = new.processowner
				and a.username = c.fromusername
				and current_date  >= c.fromdate
				and current_date  <= c.todate					 		
				and ((a.startdate is not null and current_date  >= a.startdate) or (a.startdate is null)) 
				and ((a.enddate is not null and current_date  <= a.enddate) or (a.enddate is null));	
				
			end if;
			
			
	elseif v_assignmodecnd = 3 then 	---- Data groups

		select fn_peg_assigntoactor(new.assigntoactor,new.actorfilter) into v_datagrpusers ;		

			if v_datagrpusers != '0' then
				open v_sqlstmt for 
				select split_part(unnest(string_to_array(v_datagrpusers,'|~')),'~~',1) dgrpname,
				split_part(unnest(string_to_array(v_datagrpusers,'|~')),'~~',2) dgrpusers;
			
				fetch next from v_sqlstmt into rec;
			
				while found 		
    			loop 					
    				
    			insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,keyvalue,
				transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,displayicon,displaytitle,
				displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,useridentificationfilter,
				useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,assigntoactor,actorfilter,recordid,
				processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,approvalcomments,rejectcomments,
				returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,
				allowsend,allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,actor_data_grp,
				autoapprove,isoptional,Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
				select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
				new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,regexp_split_to_table(rec.dgrpusers,','),new.priorindex,new.priortaskname,
				new.corpdimension,new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,
				new.displaybuttons,new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,new.useridentificationfilter,
				new.useridentificationfilter_of,new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,new.processowner,new.assigntoflg,new.assigntoactor,
				new.actorfilter,new.recordid,new.processownerflg,new.pownerfilter,new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,
				new.rejectreasons,new.defregtext,new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,
				new.groupwithpriorindex,new.returnable,new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,new.initonbehalf,
				rec.dgrpname,new.autoapprove,new.isoptional,new.Reminderstartdate,
				new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
				from dual;	
			
     			fetch next from v_sqlstmt into rec;		   		    
    			end loop;	
			
    		    						
				---------Delegation(data group users)
				insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,keyvalue,
				transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,displayicon,displaytitle,
				displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,useridentificationfilter,
				useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,assigntoactor,actorfilter,
				recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,approvalcomments,
				rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,delegation,returnable,allowsend,allowsendflg,
				sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,autoapprove,isoptional,
				Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
				select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
				new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.tousername,new.priorindex,new.priortaskname,new.corpdimension,new.orgdimension,
				new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,new.displaybuttons,new.groupfield,
				new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,new.useridentificationfilter,new.useridentificationfilter_of,new.mapfield_group,
				new.mapfield,'T',new.indexno,new.subindexno,new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,new.processownerflg,
				new.pownerfilter,new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,new.approvalcomments,
				new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,'T',new.returnable,
				new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,
				new.initonbehalf,new.autoapprove,new.isoptional,new.Reminderstartdate,
				new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
				from 
				(select regexp_split_to_table(v_datagrpusers,',') fuser)a,axprocessdef_delegation c 
				where a.fuser = c.fromusername				
				and current_date  >= c.fromdate
				and current_date  <= c.todate;			
			else		
				----------Redirect to process owner
				select count(*) into v_processonwer_cnt
				from axuserlevelgroups c
				where c.usergroup = new.processowner		
				and ((c.startdate is not null and current_date  >= c.startdate) or (c.startdate is null)) 
				and ((c.enddate is not null and current_date  <= c.enddate) or (c.enddate is null));
	
				if v_processonwer_cnt > 0 then					
				insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,keyvalue,
				transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,displayicon,displaytitle,
				displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,useridentificationfilter,useridentificationfilter_of,
				mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,
				approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,approvalcomments,rejectcomments,returncomments,escalation,
				reminder,displaymcontent,groupwithpriorindex,returnable,allowsend,allowsendflg,sendtoactor,initiator_approval,
				usebusinessdatelogic,initonbehalf,pownerflg,autoapprove,isoptional,
				Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
				select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
				new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.username,new.priorindex,new.priortaskname,new.corpdimension,
				new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,new.displaybuttons,
				new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,new.useridentificationfilter,new.useridentificationfilter_of,
				new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,
				new.processownerflg,new.pownerfilter,new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,
				new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,
				new.returnable,new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,
				new.initonbehalf,'T',new.autoapprove,new.isoptional,new.Reminderstartdate,
				new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
				from axuserlevelgroups c
				where c.usergroup = new.processowner		
				and ((c.startdate is not null and current_date  >= c.startdate) or (c.startdate is null)) 
				and ((c.enddate is not null and current_date  <= c.enddate) or (c.enddate is null));
				else	
				---Redirect to default role when no users exists in process owner
				insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,
				keyvalue,transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,
				displayicon,displaytitle,displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,
				useridentificationfilter,useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,
				assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
				approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,allowsend,
				allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,pownerflg,
				autoapprove,isoptional,Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
				select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
				new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.username,new.priorindex,new.priortaskname,new.corpdimension,
				new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,
				new.displaybuttons,new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,	new.useridentificationfilter,
				new.useridentificationfilter_of,new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,
				new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,new.processownerflg,new.pownerfilter,
				new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,
				new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,new.returnable,
				new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,
				new.initonbehalf,'T',new.autoapprove,new.isoptional,new.Reminderstartdate,
				new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
				from axuserlevelgroups c
				where c.usergroup = 'default'		
				and ((c.startdate is not null and current_date  >= c.startdate) or (c.startdate is null)) 
				and ((c.enddate is not null and current_date  <= c.enddate) or (c.enddate is null));
				end if;						
						
				--------------Delegation(Process owner | Role)
				insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,keyvalue,
				transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,displayicon,displaytitle,
				displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,useridentificationfilter,useridentificationfilter_of,
				mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,
				approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,approvalcomments,rejectcomments,returncomments,escalation,
				reminder,displaymcontent,groupwithpriorindex,delegation,returnable,allowsend,allowsendflg,sendtoactor,initiator_approval,
				usebusinessdatelogic,initonbehalf,autoapprove,isoptional,Reminderstartdate,
				Escalationstartdate,reminderjsondata,escalationjsondata) 								
				select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
				new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.tousername,new.priorindex,new.priortaskname,new.corpdimension,
				new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,new.displaybuttons,
				new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,new.useridentificationfilter,new.useridentificationfilter_of,
				new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,
				new.processownerflg,new.pownerfilter,new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,
				new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,'T',
				new.returnable,new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,
				new.usebusinessdatelogic,new.initonbehalf,new.autoapprove,new.isoptional,
				new.Reminderstartdate,new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
				from axuserlevelgroups a,axprocessdef_delegation c 
				where a.usergroup = new.processowner
				and a.username = c.fromusername
				and current_date  >= c.fromdate
				and current_date  <= c.todate					 		
				and ((a.startdate is not null and current_date  >= a.startdate) or (a.startdate is null)) 
				and ((a.enddate is not null and current_date  <= a.enddate) or (a.enddate is null));	
												
				end if;	
			
			elseif v_assignmodecnd = 0 then ----'When Assign users data is not entered'
				----------Redirect to process owner
				select count(*) into v_processonwer_cnt
				from axuserlevelgroups c
				where c.usergroup = new.processowner		
				and ((c.startdate is not null and current_date  >= c.startdate) or (c.startdate is null)) 
				and ((c.enddate is not null and current_date  <= c.enddate) or (c.enddate is null));
	
				if v_processonwer_cnt > 0 then					
				insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,keyvalue,
				transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,displayicon,displaytitle,
				displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,useridentificationfilter,useridentificationfilter_of,
				mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,
				approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,approvalcomments,rejectcomments,returncomments,escalation,
				reminder,displaymcontent,groupwithpriorindex,returnable,allowsend,allowsendflg,sendtoactor,initiator_approval,
				usebusinessdatelogic,initonbehalf,pownerflg,autoapprove,isoptional,
				Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
				select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
				new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.username,new.priorindex,new.priortaskname,new.corpdimension,
				new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,new.displaybuttons,
				new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,new.useridentificationfilter,new.useridentificationfilter_of,
				new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,
				new.processownerflg,new.pownerfilter,new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,
				new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,
				new.returnable,new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,
				new.initonbehalf,'T',new.autoapprove,new.isoptional,new.Reminderstartdate,
				new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
				from axuserlevelgroups c
				where c.usergroup = new.processowner		
				and ((c.startdate is not null and current_date  >= c.startdate) or (c.startdate is null)) 
				and ((c.enddate is not null and current_date  <= c.enddate) or (c.enddate is null));
			
				--------------Delegation(Process owner | Role)
				insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,keyvalue,
				transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,displayicon,displaytitle,
				displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,useridentificationfilter,useridentificationfilter_of,
				mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,
				approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,approvalcomments,rejectcomments,returncomments,escalation,
				reminder,displaymcontent,groupwithpriorindex,delegation,returnable,allowsend,allowsendflg,sendtoactor,initiator_approval,
				usebusinessdatelogic,initonbehalf,autoapprove,isoptional,Reminderstartdate,
				Escalationstartdate,reminderjsondata,escalationjsondata) 								
				select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
				new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.tousername,new.priorindex,new.priortaskname,new.corpdimension,
				new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,new.displaybuttons,
				new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,new.useridentificationfilter,new.useridentificationfilter_of,
				new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,
				new.processownerflg,new.pownerfilter,new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,
				new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,'T',
				new.returnable,new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,
				new.initonbehalf,new.autoapprove,new.isoptional,new.Reminderstartdate,
				new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
				from axuserlevelgroups a,axprocessdef_delegation c 
				where a.usergroup = new.processowner
				and a.username = c.fromusername
				and current_date  >= c.fromdate
				and current_date  <= c.todate					 		
				and ((a.startdate is not null and current_date  >= a.startdate) or (a.startdate is null)) 
				and ((a.enddate is not null and current_date  <= a.enddate) or (a.enddate is null));	
												
			
				else	
				---Redirect to default role when no users exists in process owner
				insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,
				keyvalue,transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,
				displayicon,displaytitle,displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,
				useridentificationfilter,useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,
				assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
				approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,allowsend,
				allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,pownerflg,
				autoapprove,isoptional,Reminderstartdate,Escalationstartdate,reminderjsondata,escalationjsondata) 
				select new.eventdatetime,new.taskid,new.processname,new.tasktype,new.taskname,new.taskdescription,new.assigntorole,new.transid,new.keyfield,
				new.execonapprove,new.keyvalue,new.transdata,new.fromrole,new.fromuser,c.username,new.priorindex,new.priortaskname,new.corpdimension,
				new.orgdimension,new.department,new.grade,new.datavalue,new.displayicon,new.displaytitle,new.displaysubtitle,new.displaycontent,
				new.displaybuttons,new.groupfield,new.groupvalue,new.priorusername,new.initiator,new.mapfieldvalue,	new.useridentificationfilter,
				new.useridentificationfilter_of,new.mapfield_group,new.mapfield,'T',new.indexno,new.subindexno,
				new.processowner,new.assigntoflg,new.assigntoactor,new.actorfilter,new.recordid,new.processownerflg,new.pownerfilter,
				new.approvereasons,new.defapptext,new.returnreasons,new.defrettext,new.rejectreasons,new.defregtext,
				new.approvalcomments,new.rejectcomments,new.returncomments,new.escalation,new.reminder,new.displaymcontent,new.groupwithpriorindex,new.returnable,
				new.allowsend,new.allowsendflg,new.sendtoactor,new.initiator_approval,new.usebusinessdatelogic,
				new.initonbehalf,'T',new.autoapprove,new.isoptional,new.Reminderstartdate,
				new.Escalationstartdate,new.reminderjsondata,new.escalationjsondata
				from axuserlevelgroups c
				where c.usergroup = 'default'		
				and ((c.startdate is not null and current_date  >= c.startdate) or (c.startdate is null)) 
				and ((c.enddate is not null and current_date  <= c.enddate) or (c.enddate is null));
				end if;		
			end if;
end if;			
  
return new;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_axactivetasks() OWNER TO agilespace;

--
-- TOC entry 781 (class 1255 OID 2004639)
-- Name: fn_axp_appsearch_data_period(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axp_appsearch_data_period() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
 
	BEGIN
		if new.periodically ='T' or new.srctable is  null or new.srcfield is  null then
		Begin
 
        IF (TG_OP = 'INSERT') THEN
		insert  into axp_appsearch_data_v2 (hltype,structname,searchtext,params,docid) values(new.hltype,new.structname, case when new.periodically ='T' then new.searchtext else  new.caption end ,new.params,new.docid);
		return new;
		end if;
		IF (TG_OP = 'UPDATE') THEN
		insert  into axp_appsearch_data_v2 (hltype,structname,searchtext,params,docid) values(old.hltype,old.structname, case when old.periodically ='T' then old.searchtext else  old.caption end ,old.params,old.docid);
		return new;
		end if;
		IF (TG_OP = 'DELETE') THEN
		delete from axp_appsearch_data_v2 where docid = old.docid;
		return old;
		end if;
		exception
      when unique_violation then
      update axp_appsearch_data_v2 set  hltype= new.hltype , structname = new.structname,searchtext = case when new.periodically ='T' then new.searchtext else  new.caption end  ,params=new.params where docid= new.docid;
   when others then null ;
		end ;
		end if;
end;
$$;


ALTER FUNCTION agilespacefresh.fn_axp_appsearch_data_period() OWNER TO agilespace;

--
-- TOC entry 782 (class 1255 OID 2004640)
-- Name: fn_axp_mailjobs(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axp_mailjobs() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
	declare 
	v_sid numeric(15);
    
    BEGIN

        -- Work out the increment/decrement amount(s).
        IF (TG_OP = 'INSERT') THEN 
		
		select nextval('AXP_MAILJOBSID') into v_sid; 
		
		NEW.jobid = v_sid;
		
		return new;
	end if;
		
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_axp_mailjobs() OWNER TO agilespace;

--
-- TOC entry 771 (class 1255 OID 2004641)
-- Name: fn_axpanalytics_ap_charts(character varying, character varying, character varying, character varying, character varying, character varying, text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axpanalytics_ap_charts(pentity_transid character varying, pcriteria character varying, pfilter character varying, pusername character varying DEFAULT 'admin'::character varying, papplydac character varying DEFAULT 'T'::character varying, puserrole character varying DEFAULT 'All'::character varying, pconstraints text DEFAULT NULL::text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
rec record;
rec_filters record;
v_primarydctable varchar;
v_subentitytable varchar;
v_transid varchar;
v_grpfld varchar;
v_aggfld varchar;
v_aggfnc varchar;
v_srckey varchar;
v_srctbl varchar;
v_srcfld varchar;
v_aempty varchar;
v_aggfldtable varchar;
v_sql text;
v_normalizedjoin varchar;
v_keyname varchar;
v_keyname_coalesce varchar;
v_entitycond varchar;
v_keyfld_fname varchar;
v_keyfld_fval varchar;
v_final_sqls text[] DEFAULT  ARRAY[]::text[];
v_fldname_transidcnd numeric;
v_sql1 text;
v_filter_srcfld varchar;
v_filter_srctxt varchar;
v_filter_join varchar;
v_filter_joinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_filter_cnd varchar;
v_filter_cndary varchar[] DEFAULT  ARRAY[]::varchar[];
v_filter_joinreq numeric;
v_filter_dcjoinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_filter_col varchar;
v_filter_normalized varchar;
v_filter_sourcetbl varchar;
v_filter_sourcefld varchar;
v_filter_datatype varchar;
v_filter_listedfld varchar;
v_filter_tablename varchar;
v_emptyary varchar[] DEFAULT  ARRAY[]::varchar[];
v_grpfld_tbl varchar;
v_grpfld_tablejoins varchar;
v_aggfld_tablejoins varchar;
v_tablejoins varchar;
v_aggfldtransid varchar;
v_aggfld_primarydctable varchar;
v_entityrelation varchar;
v_aggfldname_transidcnd numeric;
v_entity_parent_reltable varchar;
v_entity_child_reltable varchar;
v_dac_cnd varchar;
v_tablenames varchar[] DEFAULT  ARRAY[]::varchar[];
begin

	/*	 
	 * pcriteria_v1 - transid~aggfnc~groupfld~normalized~srctable~srcfld~allowempty~grpfld_tablename~aggfld~aggfld_tablename(Not in use)	 
	 * pcriteria_v2 - aggfnc~grpfld_transid~groupfld~normalized~srctable~srcfld~allowempty~grpfld_tablename~aggfld_transid~aggfld~aggfld_tablename~grpfld_transid_AND_aggfld_transid_relation
	 * Ex1(agg fld in Non grid dc) - sum~gcust~party_name~F~~~~mg_partyhdr~slord~total_discount~salesorder_header~mg_partyhdr.mg_partyhdrid = salesorder_header.customer
	 * Ex2(agg fld in grid dc) - sum~gcust~party_name~F~~~~mg_partyhdr~slord~taxableamount~salesorder_items~mg_partyhdr.mg_partyhdrid = salesorder_header.customer

	*/ 	 
	
	
	select lower(trim(tablename)) into v_primarydctable from axpdc where tstruct = pentity_transid and dname ='dc1';
	
	select count(1) into v_fldname_transidcnd from axpflds where tstruct = pentity_transid and lower(tablename)=lower(v_primarydctable) and lower(fname)='transid';

	v_tablenames := array_append(v_tablenames,v_primarydctable);
	
	
-------------Permission filter
	   if papplydac = 'T' then					
					v_dac_cnd := replace(pconstraints,'{primarytable.}',v_primarydctable||'.');											   					   			   										
			   end if;		  
	
	
	
	    FOR rec IN
    	    select unnest(string_to_array(pcriteria,'^')) criteria 
    	    -----aggfnc~grpfld_transid~groupfld~normalized~srctable~srcfld~allowempty~grpfld_tablename~aggfld_transid~aggfld~aggfld_tablename~grpfld_transid_AND_aggfld_transid_relation
		    loop
			    	
			    v_aggfnc := split_part(rec.criteria,'~',1);---- agg function
			    v_transid := split_part(rec.criteria,'~',2);---grpfld_transid  			    
		    	v_grpfld := split_part(rec.criteria,'~',3);---grpfld_name
			    v_srckey := split_part(rec.criteria,'~',4);---normalized_grpfld_flag
	   			v_srctbl := split_part(rec.criteria,'~',5);---normalied_source table	   			
		   		v_srcfld := split_part(rec.criteria,'~',6);---normalied_source field
			   	v_aempty := split_part(rec.criteria,'~',7);---grpfld_allowempty - to franme left join or join
			    v_grpfld_tbl := lower(trim(split_part(rec.criteria,'~',8)));--grpfld_tablename
			    v_aggfldtransid :=split_part(rec.criteria,'~',9);--aggfld_transid;
				v_aggfld := case when split_part(rec.criteria,'~',10)='count' then '1' else split_part(rec.criteria,'~',10) end;				
				v_aggfldtable := lower(trim(split_part(rec.criteria,'~',11)));---aggfld_tablename
				v_entityrelation := split_part(rec.criteria,'~',12);---grpfld_transid_aggfld_transid_relation
				v_entity_parent_reltable := lower(trim(split_part(split_part(v_entityrelation,'=',1),'.',1)));
				v_entity_child_reltable := lower(trim(split_part(split_part(v_entityrelation,'=',2),'.',1)));
				
				
				v_normalizedjoin := case when v_srckey='T' then concat(' left join ',v_srctbl,' b on ',v_grpfld_tbl,'.',v_grpfld,' = b.',v_srctbl,'id ') else ' ' end;
				v_keyname := case when length(v_grpfld) > 0 then case when v_srckey='T' then concat('b.',v_srcfld) else concat(v_grpfld_tbl,'.',v_grpfld) end else 'null' end;			
				v_keyname_coalesce := 'coalesce(trim('||v_keyname||'), '''')';					

				v_tablenames := case when v_srckey='T' then  array_append(v_tablenames,v_srctbl) end;
				v_tablenames := case when v_srckey='T' then  array_append(v_tablenames,v_grpfld_tbl) end;
				v_tablenames := array_append(v_tablenames,v_aggfldtable);
				
			
			if v_transid = v_aggfldtransid then
			
				if lower(v_aggfldtable)=lower(v_primarydctable) and lower(v_grpfld_tbl)=lower(v_primarydctable) then
					v_tablejoins := v_primarydctable;								   			   									
				elsif lower(v_grpfld_tbl) != lower(v_primarydctable) and lower(v_aggfldtable)=lower(v_primarydctable) then
					v_tablejoins := v_primarydctable||' left join '||v_grpfld_tbl||' on '||v_grpfld_tbl||'.'||v_primarydctable||'id='||v_primarydctable||'.'||v_primarydctable||'id';
				elsif lower(v_aggfldtable) != lower(v_primarydctable) and lower(v_grpfld_tbl)=lower(v_primarydctable) then
					v_tablejoins := v_primarydctable||' left join '||v_aggfldtable||' on '||v_aggfldtable||'.'||v_primarydctable||'id='||v_primarydctable||'.'||v_primarydctable||'id';
				elsif lower(v_aggfldtable) != lower(v_primarydctable) and lower(v_grpfld_tbl)=lower(v_aggfldtable) then
					v_tablejoins := v_primarydctable||' left join '||v_aggfldtable||' on '||v_aggfldtable||'.'||v_primarydctable||'id='||v_primarydctable||'.'||v_primarydctable||'id';
				elsif lower(v_aggfldtable) != lower(v_primarydctable) and lower(v_grpfld_tbl)!=lower(v_aggfldtable) then
					v_tablejoins := v_primarydctable||' left join '||v_aggfldtable||' on '||v_aggfldtable||'.'||v_primarydctable||'id='||v_primarydctable||'.'||v_primarydctable||'id left join '||v_grpfld_tbl||' on '||v_grpfld_tbl||'.'||v_primarydctable||'id='||v_primarydctable||'.'||v_primarydctable||'id';
				end if;	----------------- v_tablejoins																						
			
			elsif v_transid != v_aggfldtransid then
				select lower(trim(tablename)) into v_aggfld_primarydctable from axpdc where tstruct = v_aggfldtransid and dname ='dc1';	
			
				select count(1) into v_aggfldname_transidcnd from axpflds where tstruct = v_aggfldtransid and lower(tablename) = lower(v_aggfld_primarydctable) 
				and lower(fname)='transid';

				------------group field joins
				if lower(v_grpfld_tbl)=lower(v_primarydctable)  and lower(v_entity_parent_reltable)=lower(v_primarydctable) then 
					v_grpfld_tablejoins := v_grpfld_tbl;
				elsif lower(v_grpfld_tbl)!=lower(v_primarydctable) and lower(v_entity_parent_reltable)=lower(v_primarydctable) then 
					v_grpfld_tablejoins := v_primarydctable||' join '||v_grpfld_tbl||' on '||v_grpfld_tbl||'.'||v_primarydctable||'id='||v_primarydctable||'.'||v_primarydctable||'id';
				elsif lower(v_grpfld_tbl)=lower(v_primarydctable) and lower(v_entity_parent_reltable)!=lower(v_primarydctable) then 
					v_grpfld_tablejoins := v_primarydctable||' join '||v_entity_parent_reltable||' on '||v_entity_parent_reltable||'.'||v_primarydctable||'id='||v_primarydctable||'.'||v_primarydctable||'id';	
				elsif lower(v_grpfld_tbl)!=lower(v_primarydctable) and lower(v_entity_parent_reltable)!=lower(v_primarydctable) then
					v_grpfld_tablejoins := v_primarydctable||' join '||v_grpfld_tbl||' on '||v_grpfld_tbl||'.'||v_primarydctable||'id='||v_primarydctable||'.'||v_primarydctable||'id'
									||' join '||v_entity_parent_reltable||' on '||v_entity_parent_reltable||'.'||v_primarydctable||'id='||v_primarydctable||'.'||v_primarydctable||'id';
				end if;								
					
				--------------agg field joins	
				if lower(v_aggfldtable)=lower(v_aggfld_primarydctable)  and lower(v_entity_child_reltable)=lower(v_aggfld_primarydctable) then 
					v_aggfld_tablejoins := ' join '||v_aggfldtable||' on '||v_entityrelation;
				elsif lower(v_aggfldtable)!=lower(v_aggfld_primarydctable) and lower(v_entity_child_reltable)=lower(v_aggfld_primarydctable) then 
					v_aggfld_tablejoins := ' join '||v_entity_child_reltable||' on '||v_entityrelation||' join '||v_aggfldtable||' on '||v_aggfldtable||'.'||v_aggfld_primarydctable||'id='||v_aggfld_primarydctable||'.'||v_aggfld_primarydctable||'id';
				elsif lower(v_aggfldtable)=lower(v_aggfld_primarydctable) and lower(v_entity_child_reltable)!=lower(v_aggfld_primarydctable) then 
					v_aggfld_tablejoins := ' join '||v_entity_child_reltable||' on '||v_entityrelation||' join '||v_aggfld_primarydctable||' on '||v_aggfld_primarydctable||'.'||v_aggfld_primarydctable||'id='||v_entity_child_reltable||'.'||v_aggfld_primarydctable||'id';	
				elsif lower(v_aggfldtable)!=lower(v_aggfld_primarydctable) and lower(v_entity_child_reltable)!=lower(v_aggfld_primarydctable) then
					v_aggfld_tablejoins := ' join '||v_entity_child_reltable||' on '||v_entityrelation||' join '||v_aggfld_primarydctable||' on '||v_aggfld_primarydctable||'.'||v_aggfld_primarydctable||'id='||v_entity_child_reltable||'.'||v_aggfld_primarydctable||'id'||
											' join '||v_aggfldtable||' on '||v_aggfldtable||'.'||v_aggfld_primarydctable||'id='||v_aggfld_primarydctable||'.'||v_aggfld_primarydctable||'id';									
				end if;											
				
				v_tablejoins := concat(v_grpfld_tablejoins,' ',v_aggfld_tablejoins);
			
			end if; ------- v_transid = v_aggfldtransid
				
			
			
			select concat('select ',v_keyname_coalesce,' keyname,',case when lower(trim(v_aggfnc)) in ('sum','avg') then 'round('||v_aggfnc||'('||v_aggfld||'),2)'else v_aggfnc||'('||v_aggfld||')' end,
			'keyvalue,','''',rec.criteria,'''::varchar',' criteria from ',v_tablejoins,' ',v_normalizedjoin)
			into v_sql;
																								
			
			
				if coalesce(pfilter,'NA') ='NA' then 
				
				
			v_sql1 := concat(v_sql,' where ',v_primarydctable,'.cancel=''F''',
						case when v_fldname_transidcnd > 0 then concat(' and ',v_primarydctable,'.transid=''',pentity_transid,'''') end,
						case when v_transid != v_aggfldtransid then ' and '||v_aggfld_primarydctable||'.cancel=''F''' end,
						case when v_aggfldname_transidcnd > 0 then concat(' and ',v_aggfld_primarydctable,'.transid=''',v_aggfldtransid,'''') end,
						case when papplydac ='T' then concat(' and (',v_dac_cnd,')') end
						,case when length(v_grpfld) > 0 then concat(' group by ',v_keyname_coalesce) else '' end);
	
		else 
			FOR rec_filters IN
    			select unnest(string_to_array(pfilter,'^')) ifilter
			    loop		    	
			    	v_filter_srcfld := split_part(rec_filters.ifilter,'|',1);
			    	v_filter_srctxt := split_part(rec_filters.ifilter,'|',2);
			    	v_filter_col := split_part(v_filter_srcfld,'~',1);
				    v_filter_normalized := split_part(v_filter_srcfld,'~',2);
 				    v_filter_sourcetbl := split_part(v_filter_srcfld,'~',3);
 				    v_filter_sourcefld := split_part(v_filter_srcfld,'~',4);
					v_filter_datatype := split_part(v_filter_srcfld,'~',5);
					v_filter_listedfld :=split_part(v_filter_srcfld,'~',6);
					v_filter_tablename:=split_part(v_filter_srcfld,'~',7);
					
		
			    				    	
			    	if  v_filter_listedfld = 'F' then
			    	
					v_filter_joinreq := case when lower(v_aggfldtable)=lower(v_filter_tablename) then 1 else 0 end; 			    		
					
			    	if v_filter_joinreq = 0  then 
				    	v_filter_dcjoinsary := array_append(v_filter_dcjoinsary,concat(' join ',v_filter_tablename,' on ',v_primarydctable,'.',v_primarydctable,'id=',v_filter_tablename,'.',v_primarydctable,'id') );
			    	end if;
			    
			    	
			    
		    		select case when v_filter_normalized='T' 
					then concat(' join ',v_filter_sourcetbl,' ',v_filter_col,' on ',v_filter_tablename,'.',v_filter_col,' = ',v_filter_col,'.',v_filter_sourcetbl,'id')
					end into v_filter_join from dual where v_filter_normalized='T';
					
					 
					v_filter_joinsary :=array_append(v_filter_joinsary,v_filter_join);				
					
				
					end if;
			
									
					select case when v_filter_normalized='F' 
					then concat(case when v_filter_datatype='c' then 'lower(' end,v_filter_tablename,'.',v_filter_col,case when v_filter_datatype='c' then ')' end,' ',v_filter_srctxt) 
					else concat(case when v_filter_datatype='c' then 'lower(' end,v_filter_col,'.',v_filter_sourcefld,case when v_filter_datatype='c' then ')' end,' ',v_filter_srctxt) 
					end into v_filter_cnd;
		    	
					v_filter_cndary := array_append(v_filter_cndary,v_filter_cnd);				
			
									
			    end loop;
			   
			   	v_filter_dcjoinsary := ARRAY(SELECT DISTINCT UNNEST(v_filter_dcjoinsary));			
			   
				v_sql1 := concat(v_sql,array_to_string(v_filter_dcjoinsary,' '),array_to_string(v_filter_joinsary,' '),
						' where ',v_primarydctable,'.cancel=''F''',
						case when v_fldname_transidcnd > 0 then concat(' and ',v_primarydctable,'.transid=''',pentity_transid,''' and ') end,
						case when v_transid != v_aggfldtransid then v_aggfld_primarydctable||'.cancel=''F''' end,
						case when v_aggfldname_transidcnd > 0 then concat(' and ',v_aggfld_primarydctable,'.transid=''',v_aggfldtransid,'''') end,						
						array_to_string(v_filter_cndary,' and ')
						,case when papplydac ='T' then concat(' and (',v_dac_cnd,')') end
						,case when length(v_grpfld) > 0 then concat(' group by ',v_keyname_coalesce) else '' end);					    						
		end if;

			v_final_sqls := array_append(v_final_sqls,v_sql1);
			v_filter_cndary:= v_emptyary;
	    	END LOOP;
	      	

   return array_to_string(v_final_sqls,'^^^') ;
END;
$$;


ALTER FUNCTION agilespacefresh.fn_axpanalytics_ap_charts(pentity_transid character varying, pcriteria character varying, pfilter character varying, pusername character varying, papplydac character varying, puserrole character varying, pconstraints text) OWNER TO agilespace;

--
-- TOC entry 795 (class 1255 OID 2004644)
-- Name: fn_axpanalytics_chartdata(character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axpanalytics_chartdata(psource character varying, pentity_transid character varying, pcondition character varying, pcriteria character varying, pfilter character varying DEFAULT 'NA'::character varying, pusername character varying DEFAULT 'admin'::character varying, papplydac character varying DEFAULT 'T'::character varying, puserrole character varying DEFAULT 'All'::character varying, pconstraints text DEFAULT NULL::text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
rec record;
rec_filters record;
dacrec record;
v_primarydctable varchar;
v_subentitytable varchar;
v_transid varchar;
v_grpfld varchar;
v_aggfld varchar;
v_aggfnc varchar;
v_srckey varchar;
v_srctbl varchar;
v_srcfld varchar;
v_aempty varchar;
v_tablename varchar;
v_sql text;
v_normalizedjoin varchar;
v_keyname varchar;
v_keyname_coalesce varchar;
v_entitycond varchar;
v_keyfld_fname varchar;
v_keyfld_fval varchar;
v_keyfld_srckey varchar;
v_keyfld_srctbl varchar;
v_keyfld_srcfld varchar;
v_final_sqls text[] DEFAULT  ARRAY[]::text[];
v_fldname_transidcnd numeric;
v_sql1 text;
v_jointables varchar[] DEFAULT  ARRAY[]::varchar[];
v_filter_srcfld varchar;
v_filter_srctxt varchar;
v_filter_join varchar;
v_filter_joinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_filter_cnd varchar;
v_filter_cndary varchar[] DEFAULT  ARRAY[]::varchar[];
v_filter_joinreq numeric;
v_filter_dcjoinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_filter_col varchar;
v_filter_normalized varchar;
v_filter_sourcetbl varchar;
v_filter_sourcefld varchar;
v_filter_datatype varchar;
v_filter_listedfld varchar;
v_filter_tablename varchar;
v_emptyary varchar[] DEFAULT  ARRAY[]::varchar[];
v_dac_cnd varchar;

begin

	/*
	 * psource - Entity / Subentity	
	 * pcriteria - transid~groupfld~aggfld~aggfnc~normalized~srctable~srcfld~allowempty~tablename~keyfld~keyval
	 * 
	 * pfilter 
	 * search field|operator search text^
	 * fldname~normalized~sourcetable~sourcefld~datatype~listedfield~tablename| operator search text^
	*/ 	 
	
	
	select tablename into v_primarydctable from axpdc where tstruct = pentity_transid and dname ='dc1';	

	v_jointables := array_append(v_jointables,v_primarydctable);


-------------Permission filter
	   if papplydac = 'T' then					
					v_dac_cnd := replace(pconstraints,'{primarytable.}',v_primarydctable||'.');											   					   			   										
			   end if;		   			
		   			
	
	if pcondition ='Custom' then
	
		select count(1) into v_fldname_transidcnd from axpflds where tstruct = pentity_transid and dcname ='dc1' and lower(fname)='transid';


		if papplydac = 'T' then					
					v_dac_cnd := replace(pconstraints,'{primarytable.}',v_primarydctable||'.');											   					   			   										
			   end if;		   			
	
	    FOR rec IN
    	    select unnest(string_to_array(pcriteria,'^')) criteria 
		    loop		    			    
			    v_transid := split_part(rec.criteria,'~',1);
		    	v_grpfld := split_part(rec.criteria,'~',2);
				v_aggfld := case when split_part(rec.criteria,'~',3)='count' then '1' else split_part(rec.criteria,'~',3) end;
				v_aggfnc := split_part(rec.criteria,'~',4);
				v_srckey := split_part(rec.criteria,'~',5);
				v_srctbl := split_part(rec.criteria,'~',6);
				v_srcfld := split_part(rec.criteria,'~',7);
				v_aempty := split_part(rec.criteria,'~',8);
				v_tablename := split_part(rec.criteria,'~',9);
				v_keyfld_fname := split_part(rec.criteria,'~',10);
				v_keyfld_fval := split_part(rec.criteria,'~',11);
				
				v_jointables := case when v_srckey='T' then array_append(v_jointables,v_srctbl) end;
				v_normalizedjoin := case when v_srckey='T' then concat(' left join ',v_srctbl,' b on ',v_primarydctable,'.',v_grpfld,' = b.',v_srctbl,'id ') else ' ' end;
				v_keyname := case when length(v_grpfld) > 0 then case when v_srckey='T' then concat('b.',v_srcfld) else concat(v_primarydctable,'.',v_grpfld) end else 'null' end;			
				v_keyname_coalesce := 'coalesce(trim('||v_keyname||'), '''')';							
				
					if lower(v_tablename)=lower(v_primarydctable) then
						select concat('select ',v_keyname_coalesce,' keyname,',case when lower(trim(v_aggfnc)) in ('sum','avg') then 'round('||v_aggfnc||'('||v_aggfld||'),2)'else v_aggfnc||'('||v_aggfld||')' end,
						'keyvalue,''Custom''::varchar cnd,','''',rec.criteria,'''::varchar',' criteria from ',v_tablename,' ',v_normalizedjoin)
						into v_sql;
						v_jointables := array_append(v_jointables,v_tablename);		   			   									
					else
						select concat('select ',
						concat(' ',v_keyname,' keyname,',case when lower(trim(v_aggfnc)) in ('sum','avg') then 'round('||v_aggfnc||'('||v_aggfld||'),2)'else v_aggfnc||'('||v_aggfld||')' end,
						' keyvalue,''Custom''::varchar cnd,','''',rec.criteria,'''::varchar',' criteria from ',
						concat(v_primarydctable,'  join ',v_tablename,' on ',v_primarydctable,'.',v_primarydctable,'id=',v_tablename,'.',v_primarydctable,'id '),
						v_normalizedjoin))a
						into v_sql;
						v_jointables := array_append(v_jointables,v_tablename);
						
					end if;																											
			
						
			
				if coalesce(pfilter,'NA') ='NA' then 

			v_sql1 := concat(v_sql,' ',' where ',v_primarydctable,'.cancel=''F''',
						case when v_fldname_transidcnd > 0 then concat(' and ',v_primarydctable,'.transid=''',pentity_transid,'''') end,
						case when papplydac ='T' then concat(' and (',v_dac_cnd,')') end,'
						--axp_filter
						',
						case when length(v_grpfld) > 0 then concat(' group by ',v_keyname_coalesce) else '' end);
	
		else 
			FOR rec_filters IN
    			select unnest(string_to_array(pfilter,'^')) ifilter
			    loop		    	
			    	v_filter_srcfld := split_part(rec_filters.ifilter,'|',1);
			    	v_filter_srctxt := split_part(rec_filters.ifilter,'|',2);
			    	v_filter_col := split_part(v_filter_srcfld,'~',1);
				    v_filter_normalized := split_part(v_filter_srcfld,'~',2);
 				    v_filter_sourcetbl := split_part(v_filter_srcfld,'~',3);
 				    v_filter_sourcefld := split_part(v_filter_srcfld,'~',4);
					v_filter_datatype := split_part(v_filter_srcfld,'~',5);
					v_filter_listedfld :=split_part(v_filter_srcfld,'~',6);
					v_filter_tablename:=split_part(v_filter_srcfld,'~',7);
					
		
			    				    	
			    	if  v_filter_listedfld = 'F' then
			    	
					v_filter_joinreq := case when lower(v_tablename)=lower(v_filter_tablename) then 1 else 0 end; 			    		
					
			    	if v_filter_joinreq = 0  then 
				    	v_filter_dcjoinsary := array_append(v_filter_dcjoinsary,concat(' join ',v_filter_tablename,' on ',v_primarydctable,'.',v_primarydctable,'id=',v_filter_tablename,'.',v_primarydctable,'id') );
			    	end if;
			    
			    	
			    
		    		select case when v_filter_normalized='T' 
					then concat(' join ',v_filter_sourcetbl,' ',v_filter_col,' on ',v_filter_tablename,'.',v_filter_col,' = ',v_filter_col,'.',v_filter_sourcetbl,'id')
					end into v_filter_join from dual where v_filter_normalized='T';
					
					 
					v_filter_joinsary :=array_append(v_filter_joinsary,v_filter_join);				
					
				
					end if;
			
									
					select case when v_filter_normalized='F' 
					then concat(case when v_filter_datatype='c' then 'lower(' end,v_filter_tablename,'.',v_filter_col,case when v_filter_datatype='c' then ')' end,' ',v_filter_srctxt) 
					else concat(case when v_filter_datatype='c' then 'lower(' end,v_filter_col,'.',v_filter_sourcefld,case when v_filter_datatype='c' then ')' end,' ',v_filter_srctxt) 
					end into v_filter_cnd;
		    	
					v_filter_cndary := array_append(v_filter_cndary,v_filter_cnd);				
			
									
			    end loop;
			   
			   	v_filter_dcjoinsary := ARRAY(SELECT DISTINCT UNNEST(v_filter_dcjoinsary));				
				v_sql1 := concat(v_sql,array_to_string(v_filter_dcjoinsary,' '),array_to_string(v_filter_joinsary,' '),'
						  where ',v_primarydctable,'.cancel=''F''',
						case when v_fldname_transidcnd > 0 then concat(' and ',v_primarydctable,'.transid=''',pentity_transid,''' and ') end,array_to_string(v_filter_cndary,' and '),
						case when papplydac ='T' then concat(' and (',v_dac_cnd,')') end,'
						--axp_filter
						',
						case when length(v_grpfld) > 0 then concat(' group by ',v_keyname_coalesce) else '' end);					    						
		end if;

			v_final_sqls := array_append(v_final_sqls,v_sql1);
			v_filter_cndary:= v_emptyary;
			v_jointables :=v_emptyary;
	    	END LOOP;
	   
   elsif pcondition = 'General' then 
		if psource ='Entity' then    
						
			select count(1) into v_fldname_transidcnd from axpflds where tstruct = pentity_transid and dcname ='dc1' and lower(fname)='transid';


			if papplydac = 'T' then					
					v_dac_cnd := replace(pconstraints,'{primarytable.}',v_primarydctable||'.');											   					   			   										
			   end if;		   			

			select concat('select count(*) totrec,
			sum(case when date_part(''year'' ,',v_primarydctable,'.createdon) = date_part(''year'',current_date) then 1 else 0 end) cyear,
			sum(case when date_part(''month'' ,',v_primarydctable,'.createdon) = date_part(''month'',current_date) then 1 else 0 end) cmonth,
			sum(case when date_part(''week'' ,',v_primarydctable,'.createdon) = date_part(''week'',current_date) then 1 else 0 end) cweek,
			sum(case when ',v_primarydctable,'.createdon::Date = current_date - 1 then 1 else 0 end) cyesterday,
			sum(case when ',v_primarydctable,'.createdon::Date = current_date then 1 else 0 end) ctoday,''General''::varchar cnd,null::varchar criteria
			from ',v_primarydctable,' where ',v_primarydctable,'.cancel=''F''',
			case when v_fldname_transidcnd > 0 then concat(' and transid=''',pentity_transid,'''') end,
			case when papplydac ='T' then concat(' and (',v_dac_cnd,')') end) into v_sql;				
			
		v_final_sqls := array_append(v_final_sqls,v_sql);

		
				
		elsif psource= 'Subentity' then 		
		    FOR rec IN
	    	    select unnest(string_to_array(pcriteria,'^')) criteria
		    loop		    			    
	      		v_transid := split_part(rec.criteria,'~',1);
	      		v_tablename := split_part(rec.criteria,'~',9);
				v_keyfld_fname := split_part(rec.criteria,'~',10);
				v_keyfld_fval := split_part(rec.criteria,'~',11);
				v_keyfld_srckey := split_part(rec.criteria,'~',5);
				v_keyfld_srctbl := split_part(rec.criteria,'~',6);
				v_keyfld_srcfld := split_part(rec.criteria,'~',7);

				select tablename into v_subentitytable from axpdc where tstruct = v_transid and dname ='dc1';				
			
				select count(1) into v_fldname_transidcnd from axpflds where tstruct = v_transid and dcname ='dc1' and lower(fname)='transid';


				if papplydac = 'T' then					
					v_dac_cnd := replace(pconstraints,'{primarytable.}',v_tablename||'.');											   					   			   										
			   end if;		   			
			
				if lower(v_tablename)=lower(v_subentitytable) then
			
				 v_sql := concat('select ','''',v_transid,'''transid',',count(*) totrec,''General''::varchar cnd,','''',replace(rec.criteria,'''',''),'''  criteria from '
								,v_tablename
								,case when v_keyfld_srckey='T' then ' join '||v_keyfld_srctbl||' on '||v_keyfld_srctbl||'.'||v_keyfld_srctbl||'id = '||v_tablename||'.'||v_keyfld_fname end
								,' where ',v_tablename,'.cancel=''F'' and ',
				 case when v_fldname_transidcnd > 0 then concat(v_tablename,'.transid=''',v_transid,''' and ') end
				 ,case when v_keyfld_srckey='T' then v_keyfld_srctbl||'.'||v_keyfld_srcfld else v_keyfld_fname end,'=',v_keyfld_fval				 
					);				
				
				else 
				
				v_sql := concat('select ','''',v_transid,'''transid',',count(*) totrec,''General''::varchar cnd,','''',replace(rec.criteria,'''',''),'''  criteria from '
								,v_tablename,' a join ',v_subentitytable,' b on a.',v_subentitytable,'id=b.',v_subentitytable,'id '
								,case when v_keyfld_srckey='T' then ' join '||v_keyfld_srctbl||' on '||v_keyfld_srctbl||'.'||v_keyfld_srctbl||'id = a.'||v_keyfld_fname end
								,' where b.cancel=''F'' and ',
				case when v_fldname_transidcnd > 0 then concat(' b.transid=''',v_transid,''' and ') end
				 ,case when v_keyfld_srckey='T' then v_keyfld_srctbl||'.'||v_keyfld_srcfld else v_keyfld_fname end,'=',v_keyfld_fval				 
				);
				
					
				end if;
			
				v_final_sqls := array_append(v_final_sqls,v_sql);			
			
			END LOOP;	
		
		end if;
	end if;

 
   return array_to_string(v_final_sqls,'^^^') ;

END;
$$;


ALTER FUNCTION agilespacefresh.fn_axpanalytics_chartdata(psource character varying, pentity_transid character varying, pcondition character varying, pcriteria character varying, pfilter character varying, pusername character varying, papplydac character varying, puserrole character varying, pconstraints text) OWNER TO agilespace;

--
-- TOC entry 796 (class 1255 OID 2004647)
-- Name: fn_axpanalytics_edittxn(character varying, numeric, character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axpanalytics_edittxn(ptransid character varying, precordid numeric, pusername character varying DEFAULT 'admin'::character varying, papplydac character varying DEFAULT 'T'::character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
declare 
rec record;
rec1 record;
rec2 record;
dacrec record;
v_sql text;
v_sql1 text;
v_primarydctable varchar;
v_fldnamesary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_joinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_col varchar;
v_fldname_normalized varchar;
v_fldname_srctbl varchar;
v_fldname_srcfld varchar;
v_fldname_allowempty varchar;
v_fldname_dcjoinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_dctablename varchar;
v_fldname_dcflds text;
v_fldname_dctables varchar[] DEFAULT  ARRAY[]::varchar[];
v_allflds varchar;
v_dacenabled numeric;
v_dactype numeric;
v_dac_cnd varchar;
v_dac_cndary varchar[] DEFAULT  ARRAY[]::varchar[];
v_editable varchar;
v_dac_join varchar;
v_dac_joinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_dac_joinreq numeric;
v_dac_normalizedjoinreq numeric; 
v_dac_entry numeric;
v_dac_onlyview numeric;


begin


	select tablename into v_primarydctable from axpdc where tstruct = ptransid and dname ='dc1';


select count(*) into v_dac_entry from axpdef_dac_config where stransid = ptransid and editmode in('Edit','ViewEdit');



----DAC V5
	select sum(cnt),sum(appl),sum(onlyview) into v_dacenabled,v_dactype,v_dac_onlyview from
(select count(*) cnt,2 appl,0 onlyview from axpdef_dac_config a  
where a.uname = pusername and a.stransid = ptransid and a.editmode in ('Edit','ViewEdit')
having count(*) > 0
union all
select count(*),1 appl,0 onlyview from axpdef_dac_config a  join axuserlevelgroups a2 on a.urole = a2.usergroup 
where a2.username = pusername and a.stransid = ptransid and a.editmode in ('Edit','ViewEdit')
and ((a2.startdate is not null and current_date  >= startdate) or (startdate is null)) and ((enddate is not null and current_date  <= enddate) or (enddate is null))
having count(*) > 0
union all
select 0 cnt,0 appl,2 onlyview from axpdef_dac_config a  
where a.uname = pusername and a.stransid = ptransid and a.editmode='View'
having count(*) > 0
union all
select 0,0 appl,1 onlyview from axpdef_dac_config a  join axuserlevelgroups a2 on a.urole = a2.usergroup 
where a2.username = pusername and a.stransid = ptransid and a.editmode='View'
and ((a2.startdate is not null and current_date  >= startdate) or (startdate is null)) and ((enddate is not null and current_date  <= enddate) or (enddate is null))
having count(*) > 0
)a
where 'T' = papplydac;


 
			
			select string_agg(str,'^')  into v_allflds 
					from 
					(
					select concat(f.tablename,'=',string_agg(concat(f.fname,'~',f.srckey,'~',f.srctf,'~',f.srcfld,'~',f.allowempty),'|')) str
					from axpdef_dac_config a join axpdef_dac_configdtl b on a.axpdef_dac_configid =  b.axpdef_dac_configid
					join axpflds f on a.stransid =f.tstruct and b.fldname = f.fname 
					where a.uname = pusername  and a.stransid = ptransid and a.editmode in('Edit','ViewEdit')
					and a.dataaccesscnd = 30 and v_dactype in(2,3) 
					group by f.tablename									
					union all					
					select  tablename||'='||'createdby~F~~~F'
					from axpdef_dac_config a 
					join axpdc d on a.stransid =d.tstruct and d.dname= 'dc1' 
					where a.uname = pusername and a.dataaccesscnd in (10,11,12) 
					and a.stransid = ptransid and a.editmode in('Edit','ViewEdit') and v_dactype in(2,3)					
					union all					
					select concat(f.tablename,'=',string_agg(concat(f.fname,'~',f.srckey,'~',f.srctf,'~',f.srcfld,'~',f.allowempty),'|')) str
					from axpdef_dac_config a join axpdef_dac_configdtl b on a.axpdef_dac_configid =  b.axpdef_dac_configid
					join axpflds f on a.stransid =f.tstruct and b.fldname = f.fname 
					join axuserlevelgroups u on a.urole = u.usergroup and ((u.startdate is not null and current_date  >= startdate) or (startdate is null)) and ((enddate is not null and current_date  <= enddate) or (enddate is null))
					and u.username = pusername and a.stransid = ptransid and a.editmode in('Edit','ViewEdit')
					where a.dataaccesscnd =30 and v_dactype = 1					
					group by f.tablename	
					union all
					select tablename||'='||'createdby~F~~~F'
					from axpdef_dac_config a 
					join axpdc d on a.stransid =d.tstruct and d.dname= 'dc1'
					join axuserlevelgroups u on a.urole = u.usergroup and ((u.startdate is not null and current_date  >= startdate) or (startdate is null)) and ((enddate is not null and current_date  <= enddate) or (enddate is null))
					and u.username = pusername and a.stransid = ptransid and a.editmode in('Edit','ViewEdit')
					where a.dataaccesscnd in (10,11,12) and v_dactype = 1
					)a;			
		
						
		FOR rec1 IN
    		select unnest(string_to_array(v_allflds,'^')) dcdtls
    		loop	
    			v_fldname_dctablename := split_part(rec1.dcdtls,'=',1);
				v_fldname_dcflds := split_part(rec1.dcdtls,'=',2);
			
			if v_fldname_dctablename!=v_primarydctable then
						v_fldname_dcjoinsary := array_append(v_fldname_dcjoinsary,concat('left join ',v_fldname_dctablename,' on ',v_primarydctable,'.',v_primarydctable,'id=',v_fldname_dctablename,'.',v_primarydctable,'id') );						
					end if;
					v_fldname_dctables := array_append(v_fldname_dctables,v_fldname_dctablename);

				FOR rec2 IN
	    		select unnest(string_to_array(v_fldname_dcflds,'|')) fldname    		    	       			
					loop		    	
						v_fldname_col := split_part(rec2.fldname,'~',1);
						v_fldname_normalized := split_part(rec2.fldname,'~',2);
						v_fldname_srctbl := split_part(rec2.fldname,'~',3);
						v_fldname_srcfld := split_part(rec2.fldname,'~',4);	
						v_fldname_allowempty := split_part(rec2.fldname,'~',5);
				    
											
						if v_fldname_normalized ='F' then 
							v_fldnamesary := array_append(v_fldnamesary,concat(v_fldname_dctablename,'.',v_fldname_col)::varchar);
						elsif v_fldname_normalized ='T' then	
							v_fldnamesary := array_append(v_fldnamesary,concat(v_fldname_col,'.',v_fldname_srcfld,' ',v_fldname_col)::varchar);	
							v_fldname_joinsary := array_append(v_fldname_joinsary,concat(case when v_fldname_allowempty='F' then ' join ' else ' left join ' end,v_fldname_srctbl,' ',v_fldname_col,' on ',v_fldname_dctablename,'.',v_fldname_col,' = ',v_fldname_col,'.',v_fldname_srctbl,'id')::Varchar);
							v_fldname_dctables := array_append(v_fldname_dctables,v_fldname_srctbl);
						end if;
									
				    end loop;
		   
			end loop;

		   	v_sql := concat(' select count(*) from ',v_primarydctable,' ',array_to_string(v_fldname_dcjoinsary,' '),' ',array_to_string(v_fldname_joinsary,' '));
 

		   			
---------DAC filters
			   if v_dacenabled > 0 then
				   			   				
			   ------------------ DAC V5
			    for dacrec in 			   
					select fname,tablename,srckey,srctf,srcfld,
					case when filtercnd in('like','not like') then case when isglovar='F' then '''%'||attribvalue||'%''' else 
					case when lower(trim(attribvalue))=':username' then  '''%'||pusername||'%''' else '''%''||'||attribvalue||'||''%''' end end
					when filtercnd in('in','not in') then case when isglovar='F' then ''''||replace(attribvalue,',',''',''')||'''' else case when lower(trim(attribvalue))=':username' then  ''''||pusername||'''' else attribvalue end end
					when filtercnd in('=','!=','>','<') then case when isglovar='F' then ''''||attribvalue||'''' else case when lower(trim(attribvalue))=':username' then  ''''||pusername||'''' else attribvalue end end  end cnd,
					ord,filtercnd  from
					(
					select case when b.dynamicval ='No' and a.dataaccesscnd = 30 then b.fldstaticval when b.dynamicval ='Yes' and a.dataaccesscnd = 30 then b.fldmastvalue end  attribvalue,
					f.fname,f.tablename,1 ord, b.filtercnd,b.isglovar,f.srckey,f.srctf,f.srcfld
					from axpdef_dac_config a join axpdef_dac_configdtl b on a.axpdef_dac_configid =  b.axpdef_dac_configid
					join axpflds f on a.stransid =f.tstruct and b.fldname = f.fname 
					where a.uname = pusername  and a.stransid = ptransid and a.editmode in('Edit','ViewEdit')
					and a.dataaccesscnd = 30 and v_dactype in(2,3)					
					union all			
					select case when b.dynamicval ='No' and a.dataaccesscnd = 30 then b.fldstaticval when b.dynamicval ='Yes' and a.dataaccesscnd = 30 then b.fldmastvalue end  attribvalue,
					b.fldname ,d.tablename,1 ord, b.filtercnd,b.isglovar,'F',null,null
					from axpdef_dac_config a join axpdef_dac_configdtl b on a.axpdef_dac_configid =  b.axpdef_dac_configid
					join axpdc d on a.stransid =d.tstruct and d.dname= 'dc1' 
					where a.uname = pusername  and a.stransid = ptransid and a.editmode in('Edit','ViewEdit')
					and a.dataaccesscnd = 30 and b.fldname in('createdby','username','createdon','modifiedon')  and v_dactype in(2,3)
					union all		
					select  pusername attribvalue, 'createdby' ,d.tablename,1 ord,'='filtercnd,'F','F' srckey,null srctf, null srcfld
					from axpdef_dac_config a 
					join axpdc d on a.stransid =d.tstruct and d.dname= 'dc1' 
					where a.uname = pusername and a.dataaccesscnd in (10,11,12) 
					and a.stransid = ptransid and a.editmode in('Edit','ViewEdit') 
					and v_dactype in(2,3)					
					union all					
					select case when b.dynamicval ='No' and a.dataaccesscnd = 30 then b.fldstaticval when b.dynamicval ='Yes' and a.dataaccesscnd = 30 then b.fldmastvalue end  attribvalue,
					f.fname,f.tablename,2 ord, b.filtercnd,b.isglovar,f.srckey,f.srctf,f.srcfld
					from axpdef_dac_config a join axpdef_dac_configdtl b on a.axpdef_dac_configid =  b.axpdef_dac_configid
					join axpflds f on a.stransid =f.tstruct and b.fldname = f.fname 
					join axuserlevelgroups u on a.urole = u.usergroup and ((u.startdate is not null and current_date  >= startdate) or (startdate is null)) and ((enddate is not null and current_date  <= enddate) or (enddate is null))
					and u.username = pusername and a.stransid = ptransid 
					and a.editmode in('Edit','ViewEdit')
					where a.dataaccesscnd =30 and v_dactype = 1
					union all
					select case when b.dynamicval ='No' and a.dataaccesscnd = 30 then b.fldstaticval when b.dynamicval ='Yes' and a.dataaccesscnd = 30 then b.fldmastvalue end  attribvalue,
					b.fldname,d.tablename,2 ord, b.filtercnd,b.isglovar,'F',null,null
					from axpdef_dac_config a join axpdef_dac_configdtl b on a.axpdef_dac_configid =  b.axpdef_dac_configid
					join axpdc d on a.stransid =d.tstruct and d.dname= 'dc1'
					join axuserlevelgroups u on a.urole = u.usergroup and ((u.startdate is not null and current_date  >= startdate) or (startdate is null)) and ((enddate is not null and current_date  <= enddate) or (enddate is null))
					and u.username = pusername and a.stransid = ptransid and a.editmode in('Edit','ViewEdit')
					where a.dataaccesscnd =30 and v_dactype = 1	and  b.fldname in('createdby','username','createdon','modifiedon') 						
					union all
					select  pusername attribvalue, 'createdby' ,d.tablename,2 ord,'='filtercnd ,'F','F' srckey,null srctf, null srcfld
					from axpdef_dac_config a 
					join axpdc d on a.stransid =d.tstruct and d.dname= 'dc1'
					join axuserlevelgroups u on a.urole = u.usergroup and ((u.startdate is not null and current_date  >= startdate) or (startdate is null)) and ((enddate is not null and current_date  <= enddate) or (enddate is null))
					and u.username = pusername and a.stransid = ptransid and a.editmode in('Edit','ViewEdit')
					where a.dataaccesscnd in (10,11,12) and v_dactype = 1
					)a
					order by ord 
					
					loop												
					
							select count(1) into v_dac_joinreq from (
						select distinct unnest(v_fldname_dctables)tbls 												
						)a 
						where lower(a.tbls)=lower(dacrec.tablename);	


						if dacrec.srckey ='T' then
							select count(1) into v_dac_normalizedjoinreq from (
							select distinct unnest(v_fldname_dctables)tbls 						
							)a 
							where lower(a.tbls)=lower(dacrec.srctf);	
	
								if v_dac_normalizedjoinreq = 0 then
									v_dac_joinsary := array_append(v_dac_joinsary,concat(' join ',dacrec.srctf,' on ',dacrec.srctf,'.',dacrec.srctf,'id=',dacrec.tablename,'.',dacrec.fname));
									v_fldname_dctables := array_append(v_fldname_dctables,dacrec.srctf);						
								end if;

						end if;		

												
						if v_dac_joinreq = 0 then
						v_dac_joinsary := array_append(v_dac_joinsary,concat(' join ',dacrec.tablename,' on ',v_primarydctable,'.',v_primarydctable,'id=',dacrec.tablename,'.',v_primarydctable,'id') );
						v_fldname_dctables := array_append(v_fldname_dctables,dacrec.tablename);		
						end if;							

						v_dac_cnd := case 
									 when dacrec.srckey='F' then  concat(dacrec.tablename,'.',dacrec.fname,' ',dacrec.filtercnd,'(', case when dacrec.filtercnd in('in','not in') then 'select unnest(string_to_array('||replace(dacrec.cnd,':','axglovar.')||','',''))' else replace(dacrec.cnd,':','axglovar.')	end,')')  
									 when 	dacrec.srckey='T' then  
									 case when v_dac_normalizedjoinreq = 0 then concat(dacrec.srctf,'.',dacrec.srcfld,' ',dacrec.filtercnd,'(',case when dacrec.filtercnd in('in','not in') then 'select unnest(string_to_array('||replace(dacrec.cnd,':','axglovar.')||','',''))' else replace(dacrec.cnd,':','axglovar.')	end	,')') 
									else concat(dacrec.fname,'.',dacrec.srcfld,' ',dacrec.filtercnd,'(',case when dacrec.filtercnd in('in','not in') then 'select unnest(string_to_array('||replace(dacrec.cnd,':','axglovar.')||','',''))' else replace(dacrec.cnd,':','axglovar.')	end	,')') end
									end;
					
					
						v_dac_cndary := array_append(v_dac_cndary,v_dac_cnd);									
					

						/*v_dac_cnd := concat(dacrec.tablename,'.',dacrec.fname,' ',dacrec.filtercnd,'(', replace(dacrec.cnd,':','axglovar.')	,')');
					
						v_dac_cndary := array_append(v_dac_cndary,v_dac_cnd);*/
											
					end loop;
								
			   end if;		   			
		   			
						v_sql1 := concat(v_sql,' join axglovar on axglovar.axglo_user = ','''',pusername,'''',' where ',v_primarydctable,'id=',precordid,case when v_dacenabled > 0 then concat(' and ',array_to_string(v_dac_cndary,' and ')) else ' and 1=2 ' end);	
		
				--if v_dacenabled > 0 then 
					execute v_sql1 into v_editable;								   					   			   							
				--end if;

			
return case when v_dac_entry > 0 and v_dac_onlyview = 0 then 
case when v_editable = '0' then 'F' else 'T' end 
when v_dac_entry > 0 and v_dac_onlyview =2 then 'F'
when v_dac_entry > 0 and v_dac_onlyview in (1,3) then case when v_editable = '0' then 'F' else 'T' end
when v_dac_entry = 0 and v_dac_onlyview in (1,2,3) then 'F'
else 'T' end;

--return v_sql1;

END; $$;


ALTER FUNCTION agilespacefresh.fn_axpanalytics_edittxn(ptransid character varying, precordid numeric, pusername character varying, papplydac character varying) OWNER TO agilespace;

--
-- TOC entry 797 (class 1255 OID 2004650)
-- Name: fn_axpanalytics_filterdata(character varying, text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axpanalytics_filterdata(ptransid character varying, pflds text) RETURNS TABLE(datavalue character varying)
    LANGUAGE plpgsql
    AS $$
declare 
v_sql text;
begin
---pflds - fldname~normalized~source table~source fld
	
	
	if split_part(pflds,'~',2)='T' then	
		v_sql := concat('select distinct ',split_part(pflds,'~',4),' from ',split_part(pflds,'~',3));
	elsif 
		split_part(pflds,'~',2)='F' then
		v_sql := concat('select distinct ',split_part(pflds,'~',1),' from ',split_part(pflds,'~',3));
	end if;
		
	
return query execute v_sql;


END; $$;


ALTER FUNCTION agilespacefresh.fn_axpanalytics_filterdata(ptransid character varying, pflds text) OWNER TO agilespace;

--
-- TOC entry 798 (class 1255 OID 2004651)
-- Name: fn_axpanalytics_ins_axreltn(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axpanalytics_ins_axreltn() RETURNS void
    LANGUAGE plpgsql
    AS $$ 
begin
	
delete from axentityrelations where rtype!='custom';
 
insert into axentityrelations ( 
axentityrelationsid,cancel,username,modifiedon,createdby,createdon,app_level,app_desc,
rtype,mstruct,mfield,mtable,primarytable,dstruct,dfield,dtable,rtypeui,mstructui,mfieldui,dstructui,dfieldui,dprimarytable)
select * from vw_entityrelations;
 
	
end;

$$;


ALTER FUNCTION agilespacefresh.fn_axpanalytics_ins_axreltn() OWNER TO agilespace;

--
-- TOC entry 799 (class 1255 OID 2004652)
-- Name: fn_axpanalytics_listdata(character varying, text, numeric, numeric, text, character varying, character varying, character varying, text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axpanalytics_listdata(ptransid character varying, pflds text DEFAULT 'All'::text, ppagesize numeric DEFAULT 25, ppageno numeric DEFAULT 1, pfilter text DEFAULT 'NA'::text, puser character varying DEFAULT 'admin'::character varying, papplydac character varying DEFAULT 'T'::character varying, puserrole character varying DEFAULT 'All'::character varying, pconstraints text DEFAULT NULL::text) RETURNS text
    LANGUAGE plpgsql
    AS $$
declare 
rec record;
rec1 record;
rec2 record;
v_sql text;
v_sql1 text;
v_primarydctable varchar;
v_fldnamesary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_joinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_col varchar;
v_fldname_normalized varchar;
v_fldname_srctbl varchar;
v_fldname_srcfld varchar;
v_fldname_allowempty varchar;
v_fldname_dcjoinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_dctablename varchar;
v_fldname_dcflds text;
v_fldname_dctables varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_normalizedtables varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_transidcnd numeric;
v_allflds varchar;
v_filter_srcfld varchar;
v_filter_srctxt varchar;
v_filter_join varchar;
v_filter_joinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_filter_cnd varchar;
v_filter_cndary varchar[] DEFAULT  ARRAY[]::varchar[];
v_filter_joinreq numeric;
v_filter_dcjoinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_filter_col varchar;
v_filter_normalized varchar;
v_filter_sourcetbl varchar;
v_filter_sourcefld varchar;
v_filter_datatype varchar;
v_filter_listedfld varchar;
v_filter_tablename varchar;
v_fldname_tables varchar[] DEFAULT  ARRAY[]::varchar[];
v_dac_cnd varchar;
 

begin


	

	select tablename into v_primarydctable from axpdc where tstruct = ptransid and dname ='dc1';



	select count(1) into v_fldname_transidcnd from axpflds where tstruct = ptransid and dcname ='dc1' and lower(fname)='transid';

		if pflds = 'All' then 		
			select concat(tablename,'=',string_agg(str,'|'))  into v_allflds From(
			select tablename, concat(fname,'~',srckey,'~',srctf,'~',srcfld,'~',allowempty) str,dcname,ordno
			from axpflds where tstruct=ptransid and dcname='dc1' and 
			asgrid ='F' and hidden ='F' and savevalue='T' and tablename = v_primarydctable and datatype not in('i','t')
			union all
			select tablename,'app_desc~F~~~T' str,dname,1 from axpdc where tstruct=ptransid and dname='dc1'
			order by dcname ,ordno)a group by a.tablename;		
		end if;
						
		FOR rec1 IN
    		select unnest(string_to_array(case when pflds='All' then v_allflds else pflds end,'^')) dcdtls
    		loop	
    			v_fldname_dctablename := split_part(rec1.dcdtls,'=',1);
				v_fldname_dcflds := split_part(rec1.dcdtls,'=',2);
			
			if v_fldname_dctablename!=v_primarydctable then
						v_fldname_dcjoinsary := array_append(v_fldname_dcjoinsary,concat('left join ',v_fldname_dctablename,' on ',v_primarydctable,'.',v_primarydctable,'id=',v_fldname_dctablename,'.',v_primarydctable,'id') );						
					end if;
					v_fldname_dctables := array_append(v_fldname_dctables,v_fldname_dctablename);

			FOR rec2 IN
    		select unnest(string_to_array(v_fldname_dcflds,'|')) fldname    		    	       			
				loop		    	
					v_fldname_col := split_part(rec2.fldname,'~',1);
					v_fldname_normalized := split_part(rec2.fldname,'~',2);
					v_fldname_srctbl := split_part(rec2.fldname,'~',3);
					v_fldname_srcfld := split_part(rec2.fldname,'~',4);	
					v_fldname_allowempty := split_part(rec2.fldname,'~',5);
			    
				
					
					if v_fldname_normalized ='F' and lower(v_fldname_col)!='app_desc' then 						
						v_fldnamesary := array_append(v_fldnamesary,concat(v_fldname_dctablename,'.',v_fldname_col)::varchar);
					elsif v_fldname_normalized ='F' and lower(v_fldname_col)='app_desc' then						
						v_fldnamesary:= array_append(v_fldnamesary,concat('case when length(',v_primarydctable,'.wkid)>2 then case ',v_primarydctable,'.app_desc when 0 then  ''Created''
  when  1 then ''Approved''
  when  2 then ''Review''
  when  3 then ''Return''
  when  4 then ''Approve''
  when  5 then ''Rejected''
  when  9 then ''Orphan'' end else null end app_desc'));
					elsif v_fldname_normalized ='T' then	
						v_fldnamesary := array_append(v_fldnamesary,concat(v_fldname_col,'.',v_fldname_srcfld,' ',v_fldname_col)::varchar);	
						v_fldname_joinsary := array_append(v_fldname_joinsary,concat(case when v_fldname_allowempty='F' then ' join ' else ' left join ' end,v_fldname_srctbl,' ',v_fldname_col,' on ',v_fldname_dctablename,'.',v_fldname_col,' = ',v_fldname_col,'.',v_fldname_srctbl,'id')::Varchar);
						v_fldname_normalizedtables := array_append(v_fldname_normalizedtables,lower(v_fldname_srctbl));
					end if;
								
			    end loop;
		   
			   end loop;
		   	v_sql := concat(' select ','''',ptransid,''' transid,',v_primarydctable,'.',v_primarydctable,'id recordid,',v_primarydctable,'.username modifiedby,',v_primarydctable,'.modifiedon,',v_primarydctable,'.createdon,',v_primarydctable,'.createdby,',
		   			 array_to_string(v_fldnamesary,','),',null axpeg_processname,null axpeg_keyvalue,null axpeg_status,null axpeg_statustext from ',v_primarydctable,' ',
		   			 array_to_string(v_fldname_dcjoinsary,' '),' ',array_to_string(v_fldname_joinsary,' '));
 

		   			
---------DAC filters
			   if papplydac = 'T' then					
					v_dac_cnd := replace(pconstraints,'{primarytable.}',v_primarydctable||'.');											   					   			   										
			   end if;		   			
		   			
			
		if coalesce(pfilter,'NA') ='NA' then 

			v_sql1 := concat('select b.* from(select a.*,row_number() over(order by modifiedon desc)::Numeric rno,
			case when mod(row_number() over(order by modifiedon desc),',ppagesize,')=0 then row_number() over(order by modifiedon desc)/',ppagesize,' else row_number() over(order by modifiedon desc)/',ppagesize,'+1 end::numeric pageno from 
			(',concat(v_sql,' where ',v_primarydctable,'.cancel=''F''',case when v_fldname_transidcnd>0 then concat(' and ',v_primarydctable,'.transid=','''',ptransid,'''') else '' end,
			case when papplydac ='T' then concat(' and (',v_dac_cnd,')') end),'
			--axp_filter
			',')a order by modifiedon desc limit ',ppagesize*ppageno,' )b ',case when ppageno=0 then '' else concat('where pageno=',ppageno) end);
	
		else 
			FOR rec IN
    			select unnest(string_to_array(pfilter,'^')) ifilter
			    loop		    	
			    	v_filter_srcfld := split_part(rec.ifilter,'|',1);
			    	v_filter_srctxt := split_part(rec.ifilter,'|',2);
			    	v_filter_col := split_part(v_filter_srcfld,'~',1);
				    v_filter_normalized := split_part(v_filter_srcfld,'~',2);
 				    v_filter_sourcetbl := split_part(v_filter_srcfld,'~',3);
 				    v_filter_sourcefld := split_part(v_filter_srcfld,'~',4);
					   v_filter_datatype := split_part(v_filter_srcfld,'~',5);
					v_filter_listedfld :=split_part(v_filter_srcfld,'~',6);
				v_filter_tablename:=split_part(v_filter_srcfld,'~',7);
					
		
			    				    	
			    	if  v_filter_listedfld = 'F' then
			    	
					select count(1) into v_filter_joinreq from (select distinct unnest(v_fldname_dctables)tbls )a where lower(a.tbls)=lower(v_filter_tablename);			    		
					
			    	if v_filter_joinreq = 0  then 
				    	v_filter_dcjoinsary := array_append(v_filter_dcjoinsary,concat(' join ',v_filter_tablename,' on ',v_primarydctable,'.',v_primarydctable,'id=',v_filter_tablename,'.',v_primarydctable,'id') );
				    	v_fldname_tables := array_append(v_fldname_tables,v_filter_tablename);
			    	end if;
			    
			    	
			    
		    		select case when v_filter_normalized='T' 
					then concat(' join ',v_filter_sourcetbl,' ',v_filter_col,' on ',v_filter_tablename,'.',v_filter_col,' = ',v_filter_col,'.',v_filter_sourcetbl,'id')
					end into v_filter_join from dual where v_filter_normalized='T';
					
					 
					v_filter_joinsary :=array_append(v_filter_joinsary,v_filter_join);				
					
				
					end if;
			
									
					select case when v_filter_normalized='F' 
					then concat(case when v_filter_datatype='c' then 'lower(' end,v_filter_tablename,'.',v_filter_col,case when v_filter_datatype='c' then ')' end,' ',v_filter_srctxt) 
					else concat(case when v_filter_datatype='c' then 'lower(' end,v_filter_col,'.',v_filter_sourcefld,case when v_filter_datatype='c' then ')' end,' ',v_filter_srctxt) 
					end into v_filter_cnd;
		    	
					v_filter_cndary := array_append(v_filter_cndary,v_filter_cnd);				
			
									
			    end loop;
			   
			   	v_filter_dcjoinsary := ARRAY(SELECT DISTINCT UNNEST(v_filter_dcjoinsary));				   					   
			   
			   
				v_sql1 := concat('select b.* from(select a.*,row_number() over(order by modifiedon desc)::Numeric rno,
						case when mod(row_number() over(order by modifiedon desc),',ppagesize,')=0 then row_number() over(order by modifiedon desc)/',ppagesize,' else row_number() over(order by modifiedon desc)/',ppagesize,'+1 end::numeric pageno from 
						(',v_sql,concat(array_to_string(v_filter_dcjoinsary,' '),array_to_string(v_filter_joinsary,' '),' where ',v_primarydctable,'.cancel=''F'' and ',case when v_fldname_transidcnd>0 then concat(v_primarydctable,'.transid=','''',ptransid,''' and ') else '' end,
						array_to_string(v_filter_cndary,' and '),case when papplydac ='T' then concat(' and (',v_dac_cnd,')') end),'
						--axp_filter
						',')a order by modifiedon desc limit ',ppagesize*ppageno,' )b ',case when ppageno=0 then '' else concat('where pageno=',ppageno) end);					    						
		end if;

return v_sql1;


END; $$;


ALTER FUNCTION agilespacefresh.fn_axpanalytics_listdata(ptransid character varying, pflds text, ppagesize numeric, ppageno numeric, pfilter text, puser character varying, papplydac character varying, puserrole character varying, pconstraints text) OWNER TO agilespace;

--
-- TOC entry 800 (class 1255 OID 2004655)
-- Name: fn_axpanalytics_listdata_dac(character varying, text, numeric, numeric, text, character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axpanalytics_listdata_dac(ptransid character varying, pflds text DEFAULT 'All'::text, ppagesize numeric DEFAULT 25, ppageno numeric DEFAULT 1, pfilter text DEFAULT 'NA'::text, pusername character varying DEFAULT 'admin'::character varying, papplydac character varying DEFAULT 'T'::character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
declare 
rec record;
rec1 record;
rec2 record;
dacrec record;
v_sql text;
v_sql1 text;
v_primarydctable varchar;
--v_transid varchar;
v_fldnamesary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_joinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_col varchar;
v_fldname_normalized varchar;
v_fldname_srctbl varchar;
v_fldname_srcfld varchar;
v_fldname_allowempty varchar;
v_fldname_dcjoinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_dctablename varchar;
v_fldname_dcflds text;
v_fldname_dctables varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_transidcnd numeric;
v_allflds varchar;
v_filter_srcfld varchar;
v_filter_srctxt varchar;
v_filter_join varchar;
v_filter_joinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_filter_cnd varchar;
v_filter_cndary varchar[] DEFAULT  ARRAY[]::varchar[];
--v_filter_dcjoin varchar;
v_filter_joinreq numeric;
v_filter_dcjoinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_filter_col varchar;
v_filter_normalized varchar;
v_filter_sourcetbl varchar;
v_filter_sourcefld varchar;
v_filter_datatype varchar;
v_filter_listedfld varchar;
v_filter_tablename varchar;
v_fldname_tables varchar[] DEFAULT  ARRAY[]::varchar[];
v_dacenabled numeric;
v_dactype numeric;
v_dac_join varchar;
v_dac_joinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_dac_cnd varchar;
v_dac_cndary varchar[] DEFAULT  ARRAY[]::varchar[];
v_dac_joinreq numeric;


begin

/*
---pflds - tbl1=fldname~normalized~source_table~source_fld~mandatory|fldname~normalized~source_table~source_fld~mandatory^
		tb12=fldname~normalized~source_table~source_fld~mandatory|fldname~normalized~source_table~source_fld~mandatory
 */
	
/* pfilter
search field|operator search text^ 
fldname~normalized~sourcetable~sourcefld~datatype~listedfield~tablename| operator search text^
*/
		

	select tablename into v_primarydctable from axpdc where tstruct = ptransid and dname ='dc1';


----DAC V5
	select sum(cnt),sum(appl) into v_dacenabled,v_dactype from
(select count(*) cnt,2 appl from axpdef_dac_config a  
where a.uname = pusername and a.stransid = ptransid and a.editmode='View'
having count(*) > 0
union all
select count(*),1 appl from axpdef_dac_config a  join axuserlevelgroups a2 on a.urole = a2.usergroup 
where a2.username = pusername and a.stransid = ptransid and a.editmode='View'
and ((a2.startdate is not null and current_date  >= startdate) or (startdate is null)) and ((enddate is not null and current_date  <= enddate) or (enddate is null))
having count(*) > 0
)a
where 'T' = papplydac;



/*
----DAC V4
	select sum(cnt),sum(appl) into v_dacenabled,v_dactype from
(select count(*) cnt,2 appl from axpdef_dac_config a  
where a.uname = pusername and a.stransid = ptransid
having count(*) > 0
union all
select count(*),1 appl from axpdef_dac_config a  join axuserlevelgroups a2 on a.urole = a2.usergroup 
where a2.username = pusername and a.stransid = ptransid
and ((a2.startdate is not null and current_date  >= startdate) or (startdate is null)) and ((enddate is not null and current_date  <= enddate) or (enddate is null))
having count(*) > 0
)a
where 'T' = papplydac;


 * DAC V3
	select sum(cnt) into v_dacenabled from
(select count(*) cnt from axpdef_dac_attributeusers a  
where a.uname = pusername
union all
select count(*) from axpdef_dac_attributeusers a  join axuserlevelgroups a2 on a.urole = a2.usergroup 
where a2.username = pusername
and ((a2.startdate is not null and current_date  >= startdate) or (startdate is null)) and ((enddate is not null and current_date  <= enddate) or (enddate is null)))a
where 'T' = papplydac;
*/
	
	select count(1) into v_fldname_transidcnd from axpflds where tstruct = ptransid and dcname ='dc1' and lower(fname)='transid';

		if pflds = 'All' then 		
			select concat(tablename,'=',string_agg(str,'|'))  into v_allflds From(
			select tablename, concat(fname,'~',srckey,'~',srctf,'~',srcfld,'~',allowempty) str
			from axpflds where tstruct=ptransid and dcname='dc1' and 
			asgrid ='F' and hidden ='F' and savevalue='T' and tablename = v_primarydctable and datatype not in('i','t')
			order by dcname ,ordno)a group by a.tablename;		
		end if;
						
		FOR rec1 IN
    		select unnest(string_to_array(case when pflds='All' then v_allflds else pflds end,'^')) dcdtls
    		loop	
    			v_fldname_dctablename := split_part(rec1.dcdtls,'=',1);
				v_fldname_dcflds := split_part(rec1.dcdtls,'=',2);
			
			if v_fldname_dctablename!=v_primarydctable then
						v_fldname_dcjoinsary := array_append(v_fldname_dcjoinsary,concat('left join ',v_fldname_dctablename,' on ',v_primarydctable,'.',v_primarydctable,'id=',v_fldname_dctablename,'.',v_primarydctable,'id') );						
					end if;
					v_fldname_dctables := array_append(v_fldname_dctables,v_fldname_dctablename);

			FOR rec2 IN
    		select unnest(string_to_array(v_fldname_dcflds,'|')) fldname    		    	       			
				loop		    	
					v_fldname_col := split_part(rec2.fldname,'~',1);
					v_fldname_normalized := split_part(rec2.fldname,'~',2);
					v_fldname_srctbl := split_part(rec2.fldname,'~',3);
					v_fldname_srcfld := split_part(rec2.fldname,'~',4);	
					v_fldname_allowempty := split_part(rec2.fldname,'~',5);
			    
				
					
					if v_fldname_normalized ='F' then 
						v_fldnamesary := array_append(v_fldnamesary,concat(v_fldname_dctablename,'.',v_fldname_col)::varchar);
					elsif v_fldname_normalized ='T' then	
						v_fldnamesary := array_append(v_fldnamesary,concat(v_fldname_col,'.',v_fldname_srcfld,' ',v_fldname_col)::varchar);	
						v_fldname_joinsary := array_append(v_fldname_joinsary,concat(case when v_fldname_allowempty='F' then ' join ' else ' left join ' end,v_fldname_srctbl,' ',v_fldname_col,' on ',v_fldname_dctablename,'.',v_fldname_col,' = ',v_fldname_col,'.',v_fldname_srctbl,'id')::Varchar);
					end if;
								
			    end loop;
		   
			   end loop;
		   	v_sql := concat(' select ','''',ptransid,''' transid,',v_primarydctable,'.',v_primarydctable,'id recordid,',v_primarydctable,'.username modifiedby,',v_primarydctable,'.modifiedon,',
		   			 array_to_string(v_fldnamesary,','),',b.axpeg_processname,b.axpeg_keyvalue,b.axpeg_status,b.axpeg_statustext from ',v_primarydctable,' ',
		   			 array_to_string(v_fldname_dcjoinsary,' '),' ',array_to_string(v_fldname_joinsary,' '),
		   			 ' left join fn_axpanalytics_pegstatus(''',ptransid,''',',v_primarydctable,'.',v_primarydctable,'id) b on ',
		   			 v_primarydctable,'.',v_primarydctable,'id=b.axpeg_recordid');
 

		   			
---------DAC filters
			   if v_dacenabled > 0 then
				   
			   	
			   /*DAC V3
			    *   for dacrec in 
				    select fname,tablename,string_agg(attribvalue,',') cnd from 
					(select ''''||b.attribvalue||'''' attribvalue,f.fname,f.tablename from axpdef_dac_attributeusers a join axpdef_dac_attribusermap b on a.axpdef_dac_attributeusersid  = b.axpdef_dac_attributeusersid 
					join axpdef_dac_attribmapping am on am."attribute" = b."attribute" and am.stransid = ptransid
					join axpflds f on am.stransid =f.tstruct and am.fldname = f.fname 
					where a.uname = pusername 
					union
					select ''''||b.attribvalue||'''' attribvalue,f.fname,f.tablename from axpdef_dac_attributeusers a join axpdef_dac_attribusermap b on a.axpdef_dac_attributeusersid  = b.axpdef_dac_attributeusersid 
					join axuserlevelgroups a2 on a.urole = a2.usergroup 
					and ((a2.startdate is not null and current_date  >= startdate) or (startdate is null)) and ((enddate is not null and current_date  <= enddate) or (enddate is null))
					and a2.username = pusername
					join axpdef_dac_attribmapping am on am."attribute" = b."attribute" and am.stransid = ptransid
					join axpflds f on am.stransid =f.tstruct and am.fldname = f.fname 
					)a
					group by fname,tablename
			    
			---------------DAC V4
			   for dacrec in 
				    select fname,tablename,''''||replace(attribvalue,',',''',''')||'''' cnd,ord  from 
					(
					select case when dynamicval ='F' and a.dataaccesscnd = 30 then a.fldstaticval when dynamicval ='T' and a.dataaccesscnd = 30 then a.fldmastvalue when a.dataaccesscnd in (20,21) then pusername end  attribvalue,f.fname,f.tablename,1 ord 
					from axpdef_dac_config a 
					join axpflds f on a.stransid =f.tstruct and a.fldname = f.fname 
					where a.uname = pusername  and a.stransid = ptransid
					and a.dataaccesscnd in(20,21,30) and v_dactype in(2,3)
					union all
					select  pusername attribvalue, 'createdby' ,d.tablename,1 ord
					from axpdef_dac_config a 
					join axpdc d on a.stransid =d.tstruct and d.dname= 'dc1'
					where a.uname = pusername and a.dataaccesscnd in (10,11) and a.stransid = ptransid and v_dactype in(2,3)
					union all
					select case when dynamicval ='F' and a.dataaccesscnd = 30 then a.fldstaticval when dynamicval ='T' and a.dataaccesscnd = 30 then a.fldmastvalue when a.dataaccesscnd in (20,21) then pusername end  attribvalue,f.fname,f.tablename,2 ord
					from axpdef_dac_config a 
					join axpflds f on a.stransid =f.tstruct and a.fldname = f.fname 
					join axuserlevelgroups u on a.urole = u.usergroup and ((u.startdate is not null and current_date  >= startdate) or (startdate is null)) and ((enddate is not null and current_date  <= enddate) or (enddate is null))
					and u.username = pusername and a.stransid = ptransid
					where a.dataaccesscnd in(20,21,30) and v_dactype = 1
					union all
					select  pusername attribvalue, 'createdby' ,d.tablename,2 ord 
					from axpdef_dac_config a 
					join axpdc d on a.stransid =d.tstruct and d.dname= 'dc1'
					join axuserlevelgroups u on a.urole = u.usergroup and ((u.startdate is not null and current_date  >= startdate) or (startdate is null)) and ((enddate is not null and current_date  <= enddate) or (enddate is null))
					and u.username = pusername and a.stransid = ptransid
					where a.dataaccesscnd in (10,11) and v_dactype = 1
					)a
					order by ord
					*/
			   ------------------ DAC V5
			    for dacrec in 
			   	--select fname,tablename,case when filtercnd in('like','not like') then case when lower(trim(attribvalue))=':username' then '''%''||'''||pusername||'''||''%''' else  case when isglovar='F' then '''%'''||replace(attribvalue,',',''',''')||'''%''' else attribvalue end end else case when isglovar = 'F' then replace(attribvalue,',',''',''')||''''  else case when lower(trim(attribvalue))=':username' then '''%''||'''||pusername||'''||''%''' else attribvalue end  end end  cnd,ord,filtercnd  from
					select fname,tablename,
					case when filtercnd in('like','not like') then case when isglovar='F' then '''%'''||attribvalue||'''%''' else 
					case when lower(trim(attribvalue))=':username' then  '''%'||pusername||'%''' else '''%''||'||attribvalue||'||''%''' end end
					when filtercnd in('in','not in') then case when isglovar='F' then ''''||replace(attribvalue,',',''',''')||'''' else case when lower(trim(attribvalue))=':username' then  ''''||pusername||'''' else attribvalue end end
					when filtercnd in('=','!=','>','<') then case when isglovar='F' then ''''||attribvalue||'''' else case when lower(trim(attribvalue))=':username' then  ''''||pusername||'''' else attribvalue end end  end cnd,
					ord,filtercnd  from
					(
					select case when b.dynamicval ='No' and a.dataaccesscnd = 30 then b.fldstaticval when b.dynamicval ='Yes' and a.dataaccesscnd = 30 then b.fldmastvalue end  attribvalue,f.fname,f.tablename,1 ord, b.filtercnd,b.isglovar
					from axpdef_dac_config a join axpdef_dac_configdtl b on a.axpdef_dac_configid =  b.axpdef_dac_configid
					join axpflds f on a.stransid =f.tstruct and b.fldname = f.fname 
					where a.uname = pusername  and a.stransid = ptransid and a.editmode='View'
					and a.dataaccesscnd = 30 and v_dactype in(2,3)					
					union all					
					select  pusername attribvalue, 'createdby' ,d.tablename,1 ord,'='filtercnd,'F'
					from axpdef_dac_config a 
					join axpdc d on a.stransid =d.tstruct and d.dname= 'dc1' 
					where a.uname = pusername and a.dataaccesscnd in (10,11) and a.stransid = ptransid and a.editmode='View' and v_dactype in(2,3)					
					union all					
					select case when b.dynamicval ='No' and a.dataaccesscnd = 30 then b.fldstaticval when b.dynamicval ='Yes' and a.dataaccesscnd = 30 then b.fldmastvalue end  attribvalue,f.fname,f.tablename,2 ord, b.filtercnd,b.isglovar
					from axpdef_dac_config a join axpdef_dac_configdtl b on a.axpdef_dac_configid =  b.axpdef_dac_configid
					join axpflds f on a.stransid =f.tstruct and b.fldname = f.fname 
					join axuserlevelgroups u on a.urole = u.usergroup and ((u.startdate is not null and current_date  >= startdate) or (startdate is null)) and ((enddate is not null and current_date  <= enddate) or (enddate is null))
					and u.username = pusername and a.stransid = ptransid and a.editmode='View'
					where a.dataaccesscnd =30 and v_dactype = 1					
					union all
					select  pusername attribvalue, 'createdby' ,d.tablename,2 ord,'='filtercnd ,'F'
					from axpdef_dac_config a 
					join axpdc d on a.stransid =d.tstruct and d.dname= 'dc1'
					join axuserlevelgroups u on a.urole = u.usergroup and ((u.startdate is not null and current_date  >= startdate) or (startdate is null)) and ((enddate is not null and current_date  <= enddate) or (enddate is null))
					and u.username = pusername and a.stransid = ptransid and a.editmode='View'
					where a.dataaccesscnd in (10,11) and v_dactype = 1
					)a
					order by ord
					
					loop
						
						select count(1) into v_dac_joinreq from (
						select distinct unnest(v_fldname_dctables)tbls 
						union 
						select distinct unnest(v_fldname_tables)								
						)a 
						where lower(a.tbls)=lower(dacrec.tablename);		
					
						v_dac_cnd := concat(dacrec.tablename,'.',dacrec.fname,' ',dacrec.filtercnd,'(',dacrec.cnd	,')');
					
						v_dac_cndary := array_append(v_dac_cndary,v_dac_cnd);
						
						if v_dac_joinreq = 0 then
						v_dac_joinsary := array_append(v_dac_joinsary,concat(' join ',dacrec.tablename,' on ',v_primarydctable,'.',v_primarydctable,'id=',dacrec.tablename,'.',v_primarydctable,'id') );
						
						end if;																
					
					end loop;								   					   			   							
				
			   end if;		   			
		   			
			
		if coalesce(pfilter,'NA') ='NA' then 

			v_sql1 := concat('select b.* from(select a.*,row_number() over(order by modifiedon desc)::Numeric rno,
			case when mod(row_number() over(order by modifiedon desc),',ppagesize,')=0 then row_number() over(order by modifiedon desc)/',ppagesize,' else row_number() over(order by modifiedon desc)/',ppagesize,'+1 end::numeric pageno from 
			(',concat(v_sql,array_to_string(v_dac_joinsary,' '),' where ',v_primarydctable,'.cancel=''F''',case when v_fldname_transidcnd>0 then concat(' and ',v_primarydctable,'.transid=','''',ptransid,'''') else '' end,
			case when v_dacenabled > 0 then concat(' and ',array_to_string(v_dac_cndary,' and ')) end),'
			--axp_filter
			',')a order by modifiedon desc limit ',ppagesize*ppageno,' )b ',case when ppageno=0 then '' else concat('where pageno=',ppageno) end);
	
		else 
			FOR rec IN
    			select unnest(string_to_array(pfilter,'^')) ifilter
			    loop		    	
			    	v_filter_srcfld := split_part(rec.ifilter,'|',1);
			    	v_filter_srctxt := split_part(rec.ifilter,'|',2);
			    	v_filter_col := split_part(v_filter_srcfld,'~',1);
				    v_filter_normalized := split_part(v_filter_srcfld,'~',2);
 				    v_filter_sourcetbl := split_part(v_filter_srcfld,'~',3);
 				    v_filter_sourcefld := split_part(v_filter_srcfld,'~',4);
					   v_filter_datatype := split_part(v_filter_srcfld,'~',5);
					v_filter_listedfld :=split_part(v_filter_srcfld,'~',6);
				v_filter_tablename:=split_part(v_filter_srcfld,'~',7);
					
		
			    				    	
			    	if  v_filter_listedfld = 'F' then
			    	
					select count(1) into v_filter_joinreq from (select distinct unnest(v_fldname_dctables)tbls )a where lower(a.tbls)=lower(v_filter_tablename);			    		
					
			    	if v_filter_joinreq = 0  then 
				    	v_filter_dcjoinsary := array_append(v_filter_dcjoinsary,concat(' join ',v_filter_tablename,' on ',v_primarydctable,'.',v_primarydctable,'id=',v_filter_tablename,'.',v_primarydctable,'id') );
				    	v_fldname_tables := array_append(v_fldname_tables,v_filter_tablename);
			    	end if;
			    
			    	
			    
		    		select case when v_filter_normalized='T' 
					then concat(' join ',v_filter_sourcetbl,' ',v_filter_col,' on ',v_filter_tablename,'.',v_filter_col,' = ',v_filter_col,'.',v_filter_sourcetbl,'id')
					end into v_filter_join from dual where v_filter_normalized='T';
					
					 
					v_filter_joinsary :=array_append(v_filter_joinsary,v_filter_join);				
					
				
					end if;
			
									
					select case when v_filter_normalized='F' 
					then concat(case when v_filter_datatype='c' then 'lower(' end,v_filter_tablename,'.',v_filter_col,case when v_filter_datatype='c' then ')' end,' ',v_filter_srctxt) 
					else concat(case when v_filter_datatype='c' then 'lower(' end,v_filter_col,'.',v_filter_sourcefld,case when v_filter_datatype='c' then ')' end,' ',v_filter_srctxt) 
					end into v_filter_cnd;
		    	
					v_filter_cndary := array_append(v_filter_cndary,v_filter_cnd);				
			
									
			    end loop;
			   
			   	v_filter_dcjoinsary := ARRAY(SELECT DISTINCT UNNEST(v_filter_dcjoinsary));				   					   
			   
			   
				v_sql1 := concat('select b.* from(select a.*,row_number() over(order by modifiedon desc)::Numeric rno,
						case when mod(row_number() over(order by modifiedon desc),',ppagesize,')=0 then row_number() over(order by modifiedon desc)/',ppagesize,' else row_number() over(order by modifiedon desc)/',ppagesize,'+1 end::numeric pageno from 
						(',v_sql,concat(array_to_string(v_filter_dcjoinsary,' '),array_to_string(v_filter_joinsary,' '),array_to_string(v_dac_joinsary,' '),' where ',v_primarydctable,'.cancel=''F'' and ',case when v_fldname_transidcnd>0 then concat(v_primarydctable,'.transid=','''',ptransid,''' and ') else '' end,
						array_to_string(v_filter_cndary,' and '),case when v_dacenabled > 0 then concat(' and ',array_to_string(v_dac_cndary,' and ')) end),'
						--axp_filter
						',')a order by modifiedon desc limit ',ppagesize*ppageno,' )b ',case when ppageno=0 then '' else concat('where pageno=',ppageno) end);					    						
		end if;

return v_sql1;

--exception when others then insert into entitylog_v1 values('Exec',v_filter_dcjoinsary);



END; $$;


ALTER FUNCTION agilespacefresh.fn_axpanalytics_listdata_dac(ptransid character varying, pflds text, ppagesize numeric, ppageno numeric, pfilter text, pusername character varying, papplydac character varying) OWNER TO agilespace;

SET default_tablespace = '';

SET default_table_access_method = heap;

--
-- TOC entry 210 (class 1259 OID 2004658)
-- Name: axpdef_axpanalytics_mdata; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_axpanalytics_mdata (
    ftransid character varying(10),
    fcaption character varying(500),
    fldname character varying(50),
    fldcap character varying(500),
    cdatatype character varying(50),
    fdatatype character varying(50),
    fmodeofentry character varying(50),
    hide character varying(10),
    props character varying(4000),
    normalized character varying(10),
    srctable character varying(50),
    srcfield character varying(50),
    srctransid character varying(10),
    allowempty character varying(10),
    filtertype character varying(50),
    grpfield character varying(10),
    aggfield character varying(10),
    subentity character varying(1),
    datacnd numeric(1,0),
    entityrelfld character varying(100),
    allowduplicate character varying(1),
    tablename character varying(100),
    dcname character varying(10),
    fordno numeric,
    dccaption character varying(100),
    griddc character varying(2),
    listingfld character varying(1),
    encrypted character varying(1),
    masking character varying(100),
    lastcharmask character varying(100),
    firstcharmask character varying(100),
    maskchar character varying(1),
    maskroles character varying(1000),
    customdecimal character varying(1)
);


ALTER TABLE agilespacefresh.axpdef_axpanalytics_mdata OWNER TO agilespace;

--
-- TOC entry 801 (class 1255 OID 2004663)
-- Name: fn_axpanalytics_metadata(character varying, character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axpanalytics_metadata(ptransid character varying, psubentity character varying DEFAULT 'F'::character varying, planguage character varying DEFAULT 'English'::character varying) RETURNS SETOF agilespacefresh.axpdef_axpanalytics_mdata
    LANGUAGE plpgsql
    AS $$
declare
r axpdef_axpanalytics_mdata%rowtype;
rec record;
v_subentitytable varchar;
v_sql text;
v_subentitysql text;
v_primarydctable varchar;
begin
 

	select tablename into v_primarydctable from axpdc where tstruct = ptransid and dname ='dc1';

	select concat('select axpflds.tstruct transid,coalesce(lf.compcaption,t.caption) formcap, fname ,coalesce(l.compcaption,axpflds.caption) fcap,customdatatype cdatatype,"datatype" dt,modeofentry,
	hidden fhide,cast(null as varchar) props,srckey ,srctf ,srcfld ,srctrans ,axpflds.allowempty,
	case when modeofentry =''select'' then case when srckey =''T'' then ''Dropdown'' else ''Text'' end else ''Text'' end::varchar filtercnd,
	case when (modeofentry =''select'' or datatype=''c'') then ''T'' else ''F'' end::varchar grpfld,
	case when "datatype" =''n'' then ''T'' else ''F'' end::varchar aggfld,''F'' subentity,1 datacnd,null entityrelfld,allowduplicate,axpflds.tablename,
	dcname,ordno,d.caption dccaption,d.asgrid,case when d.asgrid=''F'' then ''T'' else ''F'' end listingfld,encrypted,masking,lastcharmask,firstcharmask,maskchar,maskroles,customdecimal
	from axpflds join tstructs t on axpflds.tstruct = t.name join axpdc d on axpflds.tstruct = d.tstruct and axpflds.dcname = d.dname
	left join axlanguage l on substring(l.sname FROM 2)= t.name and lower(l.dispname)=''',lower(planguage),''' and axpflds.fname = l.compname
	left join axlanguage lf on substring(lf.sname FROM 2)= t.name and lower(lf.dispname)=''',lower(planguage),''' and lf.compname=''x__headtext'' 		
	where axpflds.tstruct=','''',ptransid,''' and savevalue =''T'' 
	union all
	select a.name,coalesce(lf.compcaption,t.caption),key,coalesce(l.compcaption,title),	''button'',null,null,''F'',	concat(script, ''~'', icon),''F'',null,null,null,null,null,null,null,''F'' subentity,1,null,
	null,null,null,ordno,null,''F'',''F'',null encrypted,null masking,null lastcharmask,null firstcharmask,null maskchar,null maskroles,null customdecimal
	from axtoolbar a join tstructs t on a.name = t.name
	left join axlanguage l on substring(l.sname FROM 2)= t.name and lower(l.dispname)=''',lower(planguage),''' and a.key = l.compname
	left join axlanguage lf on substring(lf.sname FROM 2)= t.name and lower(lf.dispname)=''',lower(planguage),''' and lf.compname=''x__headtext''
	where visible = ''true'' and script is not null and a.name= ','''',ptransid,'''','
	union all 
	select t.name transid,coalesce(lf.compcaption,t.caption) formcap, ''app_desc'' ,''Workflow status'' fcap,
	null cdatatype,''c'' dt,null modeofentry,
	''F'' fhide,null props,''F'' srckey ,null srctf ,null srcfld ,null srctrans ,''T'' allowempty,
	''Text'' filtercnd,
	''F'' grpfld,
	''F'' aggfld,''F'' subentity,1 datacnd,null entityrelfld,''T'' allowduplicate,d.tablename,
	dname,1000,d.caption dccaption,d.asgrid,case when d.asgrid=''F'' then ''T'' else ''F'' end listingfld,
	''F'' encrypted,null masking,null lastcharmask,null firstcharmask,null maskchar,null maskroles,null customdecimal
	from axattachworkflow a join tstructs t on a.transid = t.name 		
	join axpdc d on a.transid = d.tstruct and d.dname =''dc1''
	left join axlanguage lf on substring(lf.sname FROM 2)= t.name and lower(lf.dispname)=''',lower(planguage),''' and lf.compname=''x__headtext'' 		
	where t.name=','''',ptransid,'''') into v_sql;

	for r in execute v_sql
		loop	    	
			RETURN NEXT r; 
		END LOOP;	
	

if psubentity ='T' then		

    FOR rec IN
        select distinct a.dstruct,a.rtype,dprimarytable  from axentityrelations a 		
		where rtype in('md','custom','gm') and mstruct = ptransid 
   	loop		
	


select concat('select distinct axpflds.tstruct transid,coalesce(lf.compcaption,t.caption) formcap, fname ,coalesce(l.compcaption,axpflds.caption) fcap,customdatatype cdatatype,"datatype" dt,modeofentry ,hidden fhide,
		cast(null as varchar) props,srckey ,srctf ,srcfld ,srctrans ,axpflds.allowempty,
		case when modeofentry =''select'' then case when srckey =''T'' then ''Dropdown'' else ''Text'' end else ''Text'' end::varchar filtercnd,
		case when modeofentry =''select'' then ''T'' else ''F'' end::varchar grpfld,
		case when "datatype" =''n'' then ''T'' else ''F'' end::varchar aggfld,''T'' subentity,2 datacnd,
		r.mfield entityrelfld,
		allowduplicate,axpflds.tablename,dcname,ordno,d.caption,d.asgrid,case when d.asgrid=''F'' then ''T'' else ''F'' end listingfld,
		encrypted,masking,lastcharmask,firstcharmask,maskchar,maskroles,customdecimal	
		from axpflds join tstructs t on axpflds.tstruct = t.name join axpdc d on axpflds.tstruct = d.tstruct and axpflds.dcname = d.dname
		left join axentityrelations r on axpflds.tstruct = r.dstruct and axpflds.fname = r.dfield and r.mstruct=''',ptransid,'''
		left join axlanguage l on substring(l.sname FROM 2)=''',rec.dstruct,''' and lower(l.dispname)=''',lower(planguage),''' and axpflds.fname = l.compname
		left join axlanguage lf on substring(lf.sname FROM 2)= t.name and lower(lf.dispname)=''',lower(planguage),''' and lf.compname=''x__headtext''		
		where axpflds.tstruct=','''',rec.dstruct,''' and savevalue =''T'' 
		union all select ','''',rec.dstruct,''',null,''sourceid'',''sourceid'',''Simple Text'',''c'',''accept'',''T'',
		null,''F'',null,null,null,''F'',null,''F'',''F'',''T'',2,''recordid'',''T'',','''',rec.dprimarytable,'''',',null,1000,null,''F'',''F'',
		null encrypted,null masking,null lastcharmask,null firstcharmask,null maskchar,null maskroles,null customdecimal
		from dual where ''gm''=','''',rec.rtype,''' 
		union all
		','select distinct t.name transid,coalesce(lf.compcaption,t.caption) formcap, ''app_desc'' ,''Workflow status'' fcap,null cdatatype,''c'' dt,null modeofentry ,''F'' fhide,
		null props,''F'' srckey ,null srctf ,null srcfld ,null srctrans ,''T'' allowempty,
		''Text'' filtercnd,''F'' grpfld,''F'' ,''T'' subentity,2 datacnd,
		null entityrelfld,''T'' allowduplicate,d.tablename,d.dname,1000,d.caption,d.asgrid,
		''T'' listingfld,''F'' encrypted,null masking,null lastcharmask,null firstcharmask,null maskchar,null maskroles,null customdecimal	
		from axattachworkflow a join tstructs t on a.transid = t.name 		
		join axpdc d on a.transid = d.tstruct and d.dname =''dc1''		
		left join axlanguage lf on substring(lf.sname FROM 2)= t.name and lower(lf.dispname)=''',lower(planguage),''' and lf.compname=''x__headtext''		
		where t.name=','''',rec.dstruct,'''') into v_subentitysql;


	   	

	    for r in execute v_subentitysql
      		loop	    	
        		RETURN NEXT r; 
        	END LOOP;


    END LOOP;


end if;

END; $$;


ALTER FUNCTION agilespacefresh.fn_axpanalytics_metadata(ptransid character varying, psubentity character varying, planguage character varying) OWNER TO agilespace;

--
-- TOC entry 802 (class 1255 OID 2004666)
-- Name: fn_axpanalytics_pegstatus(character varying, numeric); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axpanalytics_pegstatus(ptransid character varying, precordid numeric) RETURNS TABLE(axpeg_processname character varying, axpeg_keyvalue character varying, axpeg_status numeric, axpeg_statustext text, axpeg_recordid numeric)
    LANGUAGE plpgsql
    AS $$
declare 
v_pegtable text;
v_pegstatus numeric;

begin
	
	execute 'select status from axpeg_'||ptransid||' where recordid ='||precordid into v_pegstatus;

if v_pegstatus  in(1,2) then 

	return query execute 'select processname axpeg_processname,keyvalue axpeg_keyvalue,status::numeric axpeg_status,statustext::text axpeg_statustext,recordid::numeric axpeg_recordid from axpeg_'||ptransid||' 
where status in (1,2) and recordid ='||precordid;
else
return query execute 'select a.processname,keyvalue,0::numeric status,concat(a.taskname,'' is pending '',string_agg(a.touser,'','')) statustext
,recordid::numeric
from vw_pegv2_activetasks a 
where  a.recordid='||precordid||'
group by a.processname,a.keyvalue,a.taskname,a.recordid';

end if;

exception when others then null;


END; $$;


ALTER FUNCTION agilespacefresh.fn_axpanalytics_pegstatus(ptransid character varying, precordid numeric) OWNER TO agilespace;

--
-- TOC entry 803 (class 1255 OID 2004667)
-- Name: fn_axpanalytics_se_chartdata(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axpanalytics_se_chartdata(pcriteria character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
rec record;
v_subentitytable varchar;
v_transid varchar;
v_operations varchar;
v_aggfnc varchar;
v_tablename varchar;
v_sql text;
v_keyfld_fname varchar;
v_keyfld_fval varchar;
v_keyfld_srckey varchar;
v_keyfld_srctbl varchar;
v_keyfld_srcfld varchar;
v_final_sqls text[] DEFAULT  ARRAY[]::text[];
v_fldname_transidcnd numeric;

begin

--criteria - transid~opr1,opr2,opr3~normalized~srctable~srcfld~allowempty~tablename~keyfld~keyval

		    FOR rec IN
	    	    select unnest(string_to_array(pcriteria,'^')) criteria
		    loop		    			    
	      		v_transid := split_part(rec.criteria,'~',1);
				v_operations := split_part(rec.criteria,'~',2);
				v_keyfld_srckey := split_part(rec.criteria,'~',3);
				v_keyfld_srctbl := split_part(rec.criteria,'~',4);
				v_keyfld_srcfld := split_part(rec.criteria,'~',5);
	      		v_tablename := split_part(rec.criteria,'~',7);
				v_keyfld_fname := split_part(rec.criteria,'~',8);
				v_keyfld_fval := split_part(rec.criteria,'~',9);
				
				

				select tablename into v_subentitytable from axpdc where tstruct = v_transid and dname ='dc1';				
			
				select count(1) into v_fldname_transidcnd from axpflds where tstruct = v_transid and dcname ='dc1' and lower(fname)='transid';

							
				if lower(v_tablename)=lower(v_subentitytable) then
			
				 v_sql := concat('select ','''',v_transid,'''transid,',v_operations,',''General''::varchar cnd,','''',replace(rec.criteria,'''',''),'''  criteria from '
								,v_tablename
								,case when v_keyfld_srckey='T' then ' join '||v_keyfld_srctbl||' on '||v_keyfld_srctbl||'.'||v_keyfld_srctbl||'id = '||v_tablename||'.'||v_keyfld_fname end
								,' where ',v_tablename,'.cancel=''F'' and ',
				case when v_fldname_transidcnd > 0 then concat(v_tablename,'.transid=''',v_transid,''' and ') end
				 ,case when v_keyfld_srckey='T' then v_keyfld_srctbl||'.'||v_keyfld_srcfld else v_keyfld_fname end,'=',v_keyfld_fval);				
				
				else 
				
				v_sql := concat('select ','''',v_transid,'''transid,',v_operations,',''General''::varchar cnd,','''',replace(rec.criteria,'''',''),'''  criteria from '
								,v_tablename,' a join ',v_subentitytable,' b on a.',v_subentitytable,'id=b.',v_subentitytable,'id '
								,case when v_keyfld_srckey='T' then ' join '||v_keyfld_srctbl||' on '||v_keyfld_srctbl||'.'||v_keyfld_srctbl||'id = a.'||v_keyfld_fname end
								,' where b.cancel=''F'' and ',
				case when v_fldname_transidcnd > 0 then concat(' b.transid=''',v_transid,''' and ') end
				 ,case when v_keyfld_srckey='T' then v_keyfld_srctbl||'.'||v_keyfld_srcfld else v_keyfld_fname end,'=',v_keyfld_fval);
				
					
				end if;
			
				v_final_sqls := array_append(v_final_sqls,v_sql);			
			
			END LOOP;	
		

 
   return array_to_string(v_final_sqls,'^^^') ;

END;
$$;


ALTER FUNCTION agilespacefresh.fn_axpanalytics_se_chartdata(pcriteria character varying) OWNER TO agilespace;

--
-- TOC entry 804 (class 1255 OID 2004668)
-- Name: fn_axpanalytics_se_listdata(character varying, text, numeric, numeric); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axpanalytics_se_listdata(pentity_transid character varying, pflds_keyval text, ppagesize numeric DEFAULT 50, ppageno numeric DEFAULT 1) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
rec record;
rec1 record;
rec2 record;
v_sql text;
v_sql1 text;
v_fldname_table varchar;
v_fldname_col varchar;
v_fldname_normalized varchar;
v_fldname_srctbl varchar;
v_fldname_srcfld varchar;
v_fldname_allowempty varchar;
v_fldname_transidcnd numeric;
v_allflds varchar;
v_fldnamesary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_join varchar;
v_fldname_tblflds text;
v_fldname_joinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_emptyary varchar[] DEFAULT  ARRAY[]::varchar[];
v_pflds_transid varchar;
v_pflds_flds varchar;
v_pflds_keyvalue varchar;
v_pflds_keytable varchar;
v_keyvalue_fname varchar;
v_keyvalue_fvalue varchar;
v_keyvalue_fname_srckey varchar;
v_keyvalue_fname_srctbl varchar;
v_keyvalue_fname_srcfld varchar;
v_final_sqls text[] DEFAULT  ARRAY[]::text[];
v_primarydctable varchar;
v_fldname_dcjoinsary varchar[] DEFAULT  ARRAY[]::varchar[];

begin	


	FOR rec in select unnest(string_to_array(pflds_keyval,'++')) fldkeyvals 
    loop
	    	
	    	v_pflds_transid := split_part(rec.fldkeyvals,'=',1) ;	    	
	    	v_pflds_flds := split_part(rec.fldkeyvals,'=',2) ;
	    	v_pflds_keyvalue := split_part(rec.fldkeyvals,'=',3) ;
	    	v_pflds_keytable := split_part(v_pflds_keyvalue,'~',3) ;  	    
			v_keyvalue_fname := split_part(v_pflds_keyvalue,'~',1);
			v_keyvalue_fvalue := split_part(v_pflds_keyvalue,'~',2);		
			v_keyvalue_fname_srckey := split_part(v_pflds_keyvalue,'~',4) ;
			v_keyvalue_fname_srctbl := split_part(v_pflds_keyvalue,'~',5) ;
			v_keyvalue_fname_srcfld := split_part(v_pflds_keyvalue,'~',6) ;		
						
	    	

	    	select tablename into v_primarydctable from axpdc where tstruct =v_pflds_transid and dname ='dc1';
	    
	    	select count(1) into v_fldname_transidcnd from axpflds where tstruct = v_pflds_transid and dcname ='dc1' and lower(fname)='transid';
	    	    	    
	    
	    	if lower(v_pflds_keytable) = lower(v_primarydctable) and v_pflds_flds ='All' then
		    	select concat(tablename ,'!~',string_agg(str,'|'))  into v_allflds From(
				select tablename,concat(fname,'~',srckey,'~',srctf,'~',srcfld,'~',allowempty) str
				from axpflds where tstruct=v_pflds_transid and 
				dcname ='dc1' and 
				asgrid ='F' and hidden ='F' and savevalue='T' and datatype not in('i','t')
				order by dcname ,ordno)a group by a.tablename;
			elsif lower(v_pflds_keytable) != lower(v_primarydctable) and v_pflds_flds ='All' then
				select concat(tablename ,'!~',string_agg(str,'|'),'^',v_pflds_keytable,'!~',split_part(split_part(v_pflds_keyvalue,'~',1),'.',2),'~',split_part(v_pflds_keyvalue,'~',4),'~',split_part(v_pflds_keyvalue,'~',5),'~',split_part(v_pflds_keyvalue,'~',6),'~',split_part(v_pflds_keyvalue,'~',7))  into v_allflds From(
				select tablename,concat(fname,'~',srckey,'~',srctf,'~',srcfld,'~',allowempty) str
				from axpflds where tstruct=v_pflds_transid and 
				dcname ='dc1' and 
				asgrid ='F' and hidden ='F' and savevalue='T' and datatype not in('i','t')
				order by dcname ,ordno)a group by a.tablename;				
		    end if;
	    
	    for rec1 in select unnest(string_to_array(case when v_pflds_flds='All' then v_allflds else v_pflds_flds end,'^')) tblflds 
	    	loop		    			    			    			     
		    		v_fldname_table := 	split_part(rec1.tblflds,'!~',1);
		    		v_fldname_tblflds := 	split_part(rec1.tblflds,'!~',2);
		    		
		    	if lower(v_fldname_table)!=lower(v_primarydctable) then
					v_fldname_dcjoinsary := array_append(v_fldname_dcjoinsary,concat('left join ',v_fldname_table,' on ',v_primarydctable,'.',v_primarydctable,'id=',v_fldname_table,'.',v_primarydctable,'id') );		    							
				end if;
		    
				if lower(v_fldname_table)!=lower(v_pflds_keytable) then
					v_fldname_dcjoinsary := array_append(v_fldname_dcjoinsary,concat('left join ',v_pflds_keytable,' on ',v_primarydctable,'.',v_primarydctable,'id=',v_pflds_keytable,'.',v_primarydctable,'id') );		    							
				end if;
				
					if v_keyvalue_fname_srckey='T' then 
							v_fldname_joinsary := array_append(v_fldname_joinsary,concat(' join ' ,v_keyvalue_fname_srctbl,' ',' on ',v_keyvalue_fname,' = ',v_keyvalue_fname_srctbl,'.',v_keyvalue_fname_srctbl,'id')::Varchar);
					
							end if;
							
		
		    			    	
			    FOR rec2 in			    	
    				select unnest(string_to_array(v_fldname_tblflds,'|')) fldname
						loop							
							v_fldname_col := split_part(rec2.fldname,'~',1);
							v_fldname_normalized := split_part(rec2.fldname,'~',2);
							v_fldname_srctbl := split_part(rec2.fldname,'~',3);
							v_fldname_srcfld := split_part(rec2.fldname,'~',4);														
							v_fldname_allowempty := split_part(rec2.fldname,'~',5);
								
						
							
							
							
							if v_fldname_normalized ='F' and lower(v_fldname_col)!='app_desc' then 
								v_fldnamesary := array_append(v_fldnamesary,concat(v_fldname_table,'.',v_fldname_col)::varchar);
							elsif v_fldname_normalized ='F' and lower(v_fldname_col)='app_desc' then						
								v_fldnamesary:= array_append(v_fldnamesary,concat('case when length(',v_fldname_table,'.wkid)>2 then case ',v_fldname_table,'.app_desc when 0 then  ''Created''
												  when  1 then ''Approved''
												  when  2 then ''Review''
												  when  3 then ''Return''
												  when  4 then ''Approve''
												  when  5 then ''Rejected''
												  when  9 then ''Orphan'' end else null end app_desc'));
							elsif v_fldname_normalized ='T' then	
								v_fldnamesary := array_append(v_fldnamesary,concat(v_fldname_col,'.',v_fldname_srcfld,' ',v_fldname_col)::varchar);	
								
								v_fldname_joinsary := array_append(v_fldname_joinsary,concat(case when v_fldname_allowempty='F' then ' join ' else ' left join ' end,v_fldname_srctbl,' ',v_fldname_col,' on ',v_fldname_table,'.',v_fldname_col,' = ',v_fldname_col,'.',v_fldname_srctbl,'id')::Varchar);
							end if;								
												
						

						

			    		end loop;
		   end loop;
		  
		  v_fldname_dcjoinsary := ARRAY(SELECT DISTINCT UNNEST(v_fldname_dcjoinsary));	
		  v_fldname_joinsary := ARRAY(SELECT DISTINCT UNNEST(v_fldname_joinsary));
		
		   
		   	v_sql := concat(' select ','''',v_pflds_transid,''' transid,',v_primarydctable,'.',v_primarydctable,'id recordid,',v_primarydctable,'.username modifiedby,',v_primarydctable,'.modifiedon,',v_primarydctable,'.createdon,',v_primarydctable,'.createdby,',
		   			 array_to_string(v_fldnamesary,','),',null axpeg_processname,null axpeg_keyvalue,null axpeg_status,null axpeg_statustext from ',v_primarydctable,' ',array_to_string(v_fldname_dcjoinsary,' '),' ',array_to_string(v_fldname_joinsary,' '),
					' where ',v_primarydctable,'.cancel=''F'' and ',case when v_fldname_transidcnd>0 then concat(v_primarydctable,'.transid=','''',v_pflds_transid,''' and ') end ,
					case when v_keyvalue_fname_srckey='T'  then v_keyvalue_fname_srctbl||'.'||v_keyvalue_fname_srcfld else v_keyvalue_fname end ,'=',v_keyvalue_fvalue,'
					--axp_filter
					');

		   				v_fldnamesary:= v_emptyary;
		   				v_fldname_joinsary:= v_emptyary;	   				
		   				v_fldname_dcjoinsary:= v_emptyary;	   				
	 
	    
	    
	   v_sql1 := concat('select * from(select a.*,row_number() over(order by modifiedon desc)::Numeric rno,
			case when mod(row_number() over(order by modifiedon desc),',ppagesize,')=0 then row_number() over(order by modifiedon desc)/',ppagesize,' else row_number() over(order by modifiedon desc)/',ppagesize,'+1 end::numeric pageno from 
			(',v_sql,')a order by modifiedon desc limit ',ppagesize*ppageno,' )b ',case when ppageno=0 then '' else concat('where pageno=',ppageno) end);
		
		
		
v_final_sqls := array_append(v_final_sqls,v_sql1);

    END LOOP;
  
    return array_to_string(v_final_sqls,'^^^') ;

END;$$;


ALTER FUNCTION agilespacefresh.fn_axpanalytics_se_listdata(pentity_transid character varying, pflds_keyval text, ppagesize numeric, ppageno numeric) OWNER TO agilespace;

--
-- TOC entry 805 (class 1255 OID 2004671)
-- Name: fn_axpmailjobs(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axpmailjobs() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
	declare 
	v_sid numeric(15);
    
    BEGIN

        -- Work out the increment/decrement amount(s).
        IF (TG_OP = 'INSERT') THEN 
		
		select nextval('AXP_MAILJOBSID') into v_sid; 
		
		NEW.jobid = v_sid;
		
		return new;
	end if;
		
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_axpmailjobs() OWNER TO agilespace;

--
-- TOC entry 806 (class 1255 OID 2004672)
-- Name: fn_axprocessdefv2_index_update(character varying, numeric, character varying, numeric, numeric); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axprocessdefv2_index_update(pprocessname character varying, pindexno numeric, dbevent character varying, recordid numeric, poldindexno numeric) RETURNS void
    LANGUAGE plpgsql
    AS $$ 
declare
v_axprocessdefv2id numeric;
begin
	
if dbevent = 'Insert' then 
	select axprocessdefv2id into v_axprocessdefv2id from axprocessdefv2 where processname = pprocessname and indexno = pindexno and axprocessdefv2id!=recordid;
	if v_axprocessdefv2id is not null then
			update axprocessdefv2 set indexno = indexno+1 where axprocessdefv2id = v_axprocessdefv2id;	
			update axprocessdefv2 set indexno = indexno+1 where processname=pprocessname and indexno>pindexno and  axprocessdefv2id != v_axprocessdefv2id and axprocessdefv2id != recordid;
	end if;
end if;


if dbevent = 'Update' then
	update axprocessdefv2 set indexno = indexno+1 where processname=pprocessname and indexno>=pindexno and indexno < poldindexno and  axprocessdefv2id != recordid;
end if;

if dbevent = 'Delete' then
	update axprocessdefv2 set indexno = indexno-1 where processname=pprocessname and indexno>pindexno and  axprocessdefv2id != recordid;
end if;

exception when others then 
 null ;

end;

$$;


ALTER FUNCTION agilespacefresh.fn_axprocessdefv2_index_update(pprocessname character varying, pindexno numeric, dbevent character varying, recordid numeric, poldindexno numeric) OWNER TO agilespace;

--
-- TOC entry 807 (class 1255 OID 2004673)
-- Name: fn_axpscriptrunner(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axpscriptrunner() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
	DECLARE
   v_trg varchar(100) := coalesce( new.trg_name, 'NA');
    
    BEGIN

        -- Work out the increment/decrement amount(s).
        select pr_bulkexecute(new.SCRIPT_TEXT,v_trg);
		
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_axpscriptrunner() OWNER TO agilespace;

--
-- TOC entry 808 (class 1255 OID 2004674)
-- Name: fn_axrelations(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axrelations() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    
    begin

	delete from axentityrelations where mstruct = new.mstruct and mfield = new.mfield and dstruct = new.dstruct and dfield = new.dfield and 'md' = new.rtype;

	delete from axentityrelations where mstruct = new.mstruct and dstruct = new.dstruct  and 'gm' = new.rtype;
	
	insert into axentityrelations ( 
axentityrelationsid,cancel,username,modifiedon,createdby,createdon,app_level,app_desc,
rtype,mstruct,mfield,mtable,primarytable,dstruct,dfield,dtable,rtypeui,mstructui,mfieldui,dstructui,dfieldui,dprimarytable)    
	SELECT DISTINCT nextval('ax_entity_relseq'::regclass) AS axentityrelationsid,
    'F' AS cancel,
    'admin' AS username,
    CURRENT_TIMESTAMP AS modifiedon,
    'admin' AS createdby,
    CURRENT_TIMESTAMP AS createdon,
    1 AS app_level,
    1 AS app_desc,
    new.rtype,
    new.mstruct,
    new.mfield,
    m.tablename AS mtable,
    dc.tablename AS primarytable,
    new.dstruct,
    new.dfield,
    d.tablename AS dtable,
    'Dropdown' AS rtypeui,
    concat(mt.caption, '-(', mt.name, ')') AS mstructui,
    concat(m.caption, '-(', m.fname, ')') AS mfieldui,
    concat(dt.caption, '-(', dt.name, ')') AS dstructui,
    concat(d.caption, '-(', d.fname, ')') AS dfieldui,
    ddc.tablename AS dprimarytable
   FROM tstructs mt 
     JOIN tstructs dt ON new.dstruct = dt.name
     LEFT JOIN axpflds m ON new.mstruct = m.tstruct AND new.mfield = m.fname
     LEFT JOIN axpflds d ON new.dstruct = d.tstruct AND new.dfield = d.fname
     LEFT JOIN axpdc dc ON new.mstruct = dc.tstruct AND dc.dname = 'dc1'
     LEFT JOIN axpdc ddc ON new.dstruct = ddc.tstruct AND ddc.dname = 'dc1'
  WHERE new.rtype = 'md' and new.mstruct = mt.name
UNION ALL
 SELECT DISTINCT nextval('ax_entity_relseq'::regclass) AS axentityrelationsid,
    'F' AS cancel,
    'admin' AS username,
    CURRENT_TIMESTAMP AS modifiedon,
    'admin' AS createdby,
    CURRENT_TIMESTAMP AS createdon,
    1 AS app_level,
    1 AS app_desc,
    'gm'::character varying AS rtype,
    a.tstruct AS mstruct,
    concat(sd.tablename, 'id') AS mfield,
    sd.tablename AS mtable,
    pd.tablename AS primarytable,
    a.targettstr AS dstruct,
    'sourceid'::character varying AS dfield,
    td.tablename AS dtable,
    'Genmap' AS rtypeui,
    concat(mt.caption, '-(', mt.name, ')') AS mstructui,
    NULL AS mfieldui,
    concat(dt.caption, '-(', dt.name, ')') AS dstructui,
    NULL AS dfieldui,
    td.tablename AS dprimarytable
   FROM axpgenmaps a
     JOIN tstructs mt ON a.tstruct = mt.name
     JOIN tstructs dt ON a.targettstr = dt.name
     LEFT JOIN axpdc sd ON a.tstruct = sd.tstruct AND sd.dname = a.basedondc
     LEFT JOIN axpdc td ON a.targettstr = td.tstruct AND td.dname = 'dc1'
     LEFT JOIN axpdc pd ON a.tstruct = pd.tstruct AND pd.dname = 'dc1'
where a.tstruct = new.mstruct and 'gm' = new.rtype ;

return new;
  end; 

$$;


ALTER FUNCTION agilespacefresh.fn_axrelations() OWNER TO agilespace;

--
-- TOC entry 783 (class 1255 OID 2004675)
-- Name: fn_axsms(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axsms() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
	declare 
	v_sid numeric(15);
    
    BEGIN

        -- Work out the increment/decrement amount(s).
        IF (TG_OP = 'INSERT') THEN 
		
		select nextval('AXsmsID') into v_sid; 
		
		NEW.RECORDID = v_sid;
		
		return new;
	end if;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_axsms() OWNER TO agilespace;

--
-- TOC entry 749 (class 1255 OID 2004676)
-- Name: fn_axuserlevelgroups(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axuserlevelgroups() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    
    BEGIN

        -- Work out the increment/decrement amount(s).
        IF (TG_OP = 'INSERT') THEN
		
		NEW.USERNAME  = NEW.axUSERNAME ;
		NEW.usergroup = NEW.axusergroup ;
		
		return new;
	end if;
		
	IF (TG_OP = 'UPDATE') THEN
		
		NEW.USERNAME  = NEW.axUSERNAME ;
		NEW.usergroup = NEW.axusergroup ;
		
		return new;
	end if;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_axuserlevelgroups() OWNER TO agilespace;

--
-- TOC entry 750 (class 1255 OID 2004677)
-- Name: fn_axusers(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axusers() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    
    BEGIN

        -- Work out the increment/decrement amount(s).
        IF (TG_OP = 'INSERT') THEN
		
		NEW.USERNAME  = NEW.PUSERNAME ;
		NEW.PASSWORD = NEW.PPASSWORD ;
		
		return new;
	end if;
		
		IF (TG_OP = 'UPDATE') THEN
		
		NEW.USERNAME  = NEW.PUSERNAME ;
		
		return new;
	end if;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_axusers() OWNER TO agilespace;

--
-- TOC entry 751 (class 1255 OID 2004678)
-- Name: fn_axusers_usergrp(character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_axusers_usergrp(pusername character varying, pusergroup character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$ 
begin
	
delete from axpdef_peg_usergroups where username = pusername and fromuser='T';
 
insert into axpdef_peg_usergroups 
select pusername,unnest(string_to_array(pusergroup,',')),unnest(string_to_array(pusergroup,',')),'T',current_date ,'T';
	
end;

$$;


ALTER FUNCTION agilespacefresh.fn_axusers_usergrp(pusername character varying, pusergroup character varying) OWNER TO agilespace;

--
-- TOC entry 752 (class 1255 OID 2004679)
-- Name: fn_check_creator(numeric, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_check_creator(record_id numeric, logged_in_user character varying) RETURNS character
    LANGUAGE plpgsql
    AS $$
DECLARE
    created_user TEXT;
BEGIN
    SELECT createdby INTO created_user
    FROM timesheet_hdr
    WHERE timesheet_hdrid=record_id;
    IF created_user = logged_in_user THEN
        RETURN 'T'; 
    else
     RETURN 'F';
    END IF;
END;
$$;


ALTER FUNCTION agilespacefresh.fn_check_creator(record_id numeric, logged_in_user character varying) OWNER TO agilespace;

--
-- TOC entry 753 (class 1255 OID 2004680)
-- Name: fn_createtask(numeric, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_createtask(record_id numeric, logged_in_user character varying) RETURNS character
    LANGUAGE plpgsql
    AS $$
DECLARE
    created_user TEXT;
BEGIN
    SELECT createdby INTO created_user
    FROM taskf_hdr
    WHERE taskf_hdrid=record_id;
    IF created_user = logged_in_user THEN
        RETURN 'T'; 
    else
     RETURN 'F';
    END IF;
END;
$$;


ALTER FUNCTION agilespacefresh.fn_createtask(record_id numeric, logged_in_user character varying) OWNER TO agilespace;

--
-- TOC entry 757 (class 1255 OID 2004681)
-- Name: fn_dac_masterdata(character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_dac_masterdata(pmtransid character varying, pmfldname character varying) RETURNS TABLE(datavalue character varying)
    LANGUAGE plpgsql
    AS $$
declare 
v_sql text;
v_mastertable varchar(50);
begin

	select tablename into v_mastertable from axpflds where tstruct = pmtransid and fname = pmfldname;

	v_sql := concat('select distinct ',pmfldname,' from ',v_mastertable);
					
	

return query execute v_sql;

exception when others then null;

END; 
$$;


ALTER FUNCTION agilespacefresh.fn_dac_masterdata(pmtransid character varying, pmfldname character varying) OWNER TO agilespace;

--
-- TOC entry 809 (class 1255 OID 2004682)
-- Name: fn_dac_masterdata(character varying, character varying, numeric, numeric); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_dac_masterdata(pmtransid character varying, pmfldname character varying, pminctransid numeric, pmcnd numeric) RETURNS TABLE(datavalue character varying)
    LANGUAGE plpgsql
    AS $$
declare 
v_sql text;
v_mastertable varchar(50);
begin
	
	
	if pmcnd = 2 then 
	select tablename into v_mastertable from axpflds where tstruct = pmtransid and fname = pmfldname;
	else 
	v_mastertable = pmtransid;
	end if; 	

	v_sql := concat('select distinct ',pmfldname,' from ',v_mastertable,case when pminctransid = 0 then null else concat('where transid = ','''',pmtransid,'''') end );
					
	

return query execute v_sql;

exception when others then null;

END; 
$$;


ALTER FUNCTION agilespacefresh.fn_dac_masterdata(pmtransid character varying, pmfldname character varying, pminctransid numeric, pmcnd numeric) OWNER TO agilespace;

--
-- TOC entry 810 (class 1255 OID 2004683)
-- Name: fn_fastprint_formdata_sql(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_fastprint_formdata_sql(ptransid character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
declare 
rec1 record;
rec2 record;
v_sql text;
v_primarydctable varchar;
v_fldnamesary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_joinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_col varchar;
v_fldname_normalized varchar;
v_fldname_srctbl varchar;
v_fldname_srcfld varchar;
v_fldname_allowempty varchar;
v_fldname_dcjoinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_dctablename varchar;
v_fldname_dcflds text;
v_allflds varchar;


begin

select tablename into v_primarydctable from axpdc where tstruct = ptransid and dname ='dc1';

 select string_agg(b.tbl,'^') into v_allflds from(		
select concat(tablename,'=',string_agg(str,'|')) tbl From(
select tablename, concat(fname,'~',srckey,'~',srctf,'~',srcfld,'~',allowempty) str
from axpflds where tstruct=ptransid and asgrid ='F' 
and hidden ='F' and savevalue='T' 
order by dcname ,ordno)a group by a.tablename)b;		

						
		FOR rec1 IN
    		select unnest(string_to_array(v_allflds,'^')) dcdtls
    		loop	
    			v_fldname_dctablename := split_part(rec1.dcdtls,'=',1);
				v_fldname_dcflds := split_part(rec1.dcdtls,'=',2);
			
			if v_fldname_dctablename!=v_primarydctable then
						v_fldname_dcjoinsary := array_append(v_fldname_dcjoinsary,concat('left join ',v_fldname_dctablename,' on ',v_primarydctable,'.',v_primarydctable,'id=',v_fldname_dctablename,'.',v_primarydctable,'id') );						
					end if;
					

			FOR rec2 IN
    		select unnest(string_to_array(v_fldname_dcflds,'|')) fldname    		    	       			
				loop		    	
					v_fldname_col := split_part(rec2.fldname,'~',1);
					v_fldname_normalized := split_part(rec2.fldname,'~',2);
					v_fldname_srctbl := split_part(rec2.fldname,'~',3);
					v_fldname_srcfld := split_part(rec2.fldname,'~',4);	
					v_fldname_allowempty := split_part(rec2.fldname,'~',5);
			    
				
					
					if v_fldname_normalized ='F' then 
						v_fldnamesary := array_append(v_fldnamesary,concat(v_fldname_dctablename,'.',v_fldname_col)::varchar);
					elsif v_fldname_normalized ='T' then	
						v_fldnamesary := array_append(v_fldnamesary,concat(v_fldname_col,'.',v_fldname_srcfld,' ',v_fldname_col)::varchar);	
						v_fldname_joinsary := array_append(v_fldname_joinsary,concat(case when v_fldname_allowempty='F' then ' join ' else ' left join ' end,v_fldname_srctbl,' ',v_fldname_col,' on ',v_fldname_dctablename,'.',v_fldname_col,' = ',v_fldname_col,'.',v_fldname_srctbl,'id')::Varchar);						
					end if;
								
			    end loop;
		   
			   end loop;

		   	v_sql := concat(' select ',array_to_string(v_fldnamesary,','),' from ',v_primarydctable,' ',
		   			 array_to_string(v_fldname_dcjoinsary,' '),' ',array_to_string(v_fldname_joinsary,' '),' where ',v_primarydctable,'.',v_primarydctable,'id= :recordid');
 

		   			

return v_sql;


END; $$;


ALTER FUNCTION agilespacefresh.fn_fastprint_formdata_sql(ptransid character varying) OWNER TO agilespace;

--
-- TOC entry 811 (class 1255 OID 2004684)
-- Name: fn_generate_cardjson(text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_generate_cardjson(pchartprops text) RETURNS text
    LANGUAGE plpgsql
    AS $$
declare
    cardprops1 text;
BEGIN

 

select concat('{"attributes":{',
'"cck":"',split_part( pchartprops,'|',1),'",',
'"shwLgnd":',lower(split_part(pchartprops,'|',2)),','
'"xAxisL":"',split_part(pchartprops,'|',3),'",'
'"yAxisL":"',split_part(pchartprops,'|',4),'",'
'"gradClrChart":',lower(split_part(pchartprops,'|',5)),','
'"shwChartVal":',lower(split_part(pchartprops,'|',6)),','
'"threeD":"',case when split_part(pchartprops,'|',7)='True' then 'create' else 'remove' end,'",'
'"enableSlick":',lower(split_part(pchartprops,'|',8)),
',"numbSym":',lower(split_part(pchartprops,'|',9)),
'','}}')  into cardprops1 from dual ac;

 

RETURN cardprops1;

END;
$$;


ALTER FUNCTION agilespacefresh.fn_generate_cardjson(pchartprops text) OWNER TO agilespace;

--
-- TOC entry 812 (class 1255 OID 2004685)
-- Name: fn_get_configuration_tablefield(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_get_configuration_tablefield(pparams character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
psqltext text;
BEGIN
    pparams := lower(pparams);
    if pparams='case1' then
    psqltext := '{"props": {"type":"table","colcount":"2","rowcount":"1","addrow":"f","deleterow":"f","valueseparator":"|","rowseparator":",","sql":""},
"columns":{
"1":{"caption":"Dimension Type","name":"dimensiontype","value":"","source":"","exp":"","vexp":""},
"2":{"caption":"Dimension Value","name":"dimensionname","value":"","source":"","exp":"","vexp":""}
}}';
else if pparams='case2' then
psqltext :='{
"props": {"type": "table","colcount": "8","rowcount": "1","addrow": "f","deleterow": "f","valueseparator": "|","rowseparator": "^"},
"columns": {
"1": {"caption": "Color pallet","name": "cck","value": "pallet1","source": "clrpalet","exp": "","vexp": ""},
"2": {"caption": "Show legend","name": "shwLgnd","value": "False","source": "trufalse","exp": "","vexp": ""},
"3": {"caption": "X Axis title","name": "xAxisL","value": "","source": "","exp": "","vexp": ""},
"4": {"caption": "Y Axis title","name": "yAxisL","value": "","source": "","exp": "","vexp": ""},
"5": {"caption": "Show gradient","name": "gradClrChart","value": "False","source": "trufalse","exp": "","vexp": ""},
"6": {"caption": "Show chart value","name": "shwChartVal","value": "False","source": "trufalse","exp": "","vexp": ""},
"7": {"caption": "Enable 3D","name": "threeD","value": "False","source": "trufalse","exp": "","vexp": ""},
"8": {"caption": "Enable slick","name": "enableSlick","value": "False","source": "trufalse","exp": "","vexp": ""}
}
}
';
else
psqltext :='{"props": {"type": "table","colcount": "5","rowcount": "5","addrow": "f","deleterow": "f","valueseparator": "|","rowseparator":"^",
"sql":"select ''P1'' as posn from dual union all select ''P2'' as posn from dual union all select ''P3'' as posn from dual;"
},"columns": {"1": {"caption": "Position","name": "posn","value": "","source": "","exp": "","vexp": ""},"2": {"caption": "Count","name": "cnt","value": "","source": "","exp": "","vexp": ""},"3": {"caption": "Basic","name":"basic","value": "","source": "","exp": "","vexp": ""},"4": {"caption": "DA","name": "da","value": "","source":"","exp": "","vexp": ""},"5": {"caption": "GROSS","name": "gross","value": "","source": "","exp": "basic+da","vexp":""}}}'
;
end if;
end if;
  RETURN psqltext;
END;
$$;


ALTER FUNCTION agilespacefresh.fn_get_configuration_tablefield(pparams character varying) OWNER TO agilespace;

--
-- TOC entry 813 (class 1255 OID 2004686)
-- Name: fn_get_query_cols(text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_get_query_cols(pquery text) RETURNS TABLE(column_list character varying)
    LANGUAGE plpgsql
    AS $$
DECLARE
BEGIN
   EXECUTE 'CREATE TEMP TABLE vtmp1 ON COMMIT DROP AS ' ||pquery|| ' limit 1';
   EXECUTE 'CREATE TEMP TABLE vtmp2 ON COMMIT DROP AS select column_name::varchar from INFORMATION_SCHEMA.COLUMNS where table_name =''vtmp1'' ';

     RETURN QUERY TABLE vtmp2;
END
$$;


ALTER FUNCTION agilespacefresh.fn_get_query_cols(pquery text) OWNER TO agilespace;

--
-- TOC entry 814 (class 1255 OID 2004687)
-- Name: fn_get_task_history(text, text, text, text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_get_task_history(ptaskid text, showtasks text, username text, person text) RETURNS TABLE(taskid text, taskdate date, taskname text, duedate date, taskcategory text, status text, action_detail text, action_message text, axrowoptions text)
    LANGUAGE sql
    AS $$
SELECT DISTINCT ON (th.taskid)
    th.taskid,
    th.assigneddate AS TaskDate,
    th.taskname,
    th.duedate,
    th.taskcategory,
    th.status,
    COALESCE(NULLIF(th.lastactionreason, ''), th.lastactionremarks) AS action_detail,
    CASE
        WHEN th.status = 'Forwarded' THEN
            'Sent by ' || INITCAP(th.lastactionby) || ' to ' || INITCAP(COALESCE(th.lastactionto, th.assignto))
        WHEN th.status = 'Accepted' THEN
            'Accepted by ' || INITCAP(th.lastactionby)
        WHEN th.status = 'Returned' THEN
            'Returned by ' || INITCAP(th.lastactionby) || ' to ' || INITCAP(COALESCE(th.lastactionto, th.assignto))
        WHEN th.status = 'Completed' THEN
            'Completed by ' || INITCAP(th.lastactionby)
        WHEN th.status = 'Pending' AND th.taskcategory IN ('Leave Request', 'Work from home Request', 'Reimbursement Request','Travel Request') THEN
            INITCAP(th.taskcategory) || ' sent by ' || INITCAP(th.assignby)
        WHEN th.status = 'Pending' AND (th.assignto = username AND th.assignby = username) THEN
            'Self assigned task' || TO_CHAR(th.createdon, 'DD Mon YYYY HH:MI')
        WHEN th.status = 'Pending' AND th.assignto = username THEN
            'Assigned to ' || INITCAP(COALESCE(th.lastactionto, th.assignto))
        WHEN th.status = 'Pending' THEN
            'Assigned to ' || INITCAP(COALESCE(th.lastactionto, th.assignto))
        WHEN th.status = 'Dropped' THEN
            'Dropped by ' || INITCAP(th.lastactionby)
        WHEN th.status = 'Reassigned' THEN
            'Reassigned by ' || INITCAP(th.lastactionby) || ' to ' || INITCAP(COALESCE(th.lastactionto, th.assignto))
        WHEN th.status = 'Informed Delay' THEN
            'Rescheduled by ' || INITCAP(th.lastactionby) || ' upto ' || TO_CHAR(th.lastactiondate, 'DD Mon YYYY')
        ELSE
            INITCAP(th.status) || ' by ' || INITCAP(th.lastactionby)
    END ||  COALESCE(' ' || TO_CHAR(th.lastactiondate, 'DD Mon YYYY'), '') AS action_message,
 
    -- AXROWOPTIONS logic here would be large, modularization recommended --
    '...' AS axrowoptions  -- Placeholder for brevity
 
FROM taskf_hdr th
LEFT JOIN taskusers tu ON tu.taskid = th.taskid AND tu.usern = username
WHERE (
    (ptaskid IS NOT NULL AND th.taskid = ptaskid)
    OR
    (ptaskid IS NULL AND (
        (showtasks = 'Open' AND username = person AND th.status NOT IN ('Closed','Completed','Dropped') AND (
            th.lastactionto = username
            OR (th.lastactionto IS NULL AND th.assignto = username)
            OR th.createdby = username
        ))
        OR (showtasks = 'ALL' AND person <> 'Anyone' AND EXISTS (
            SELECT 1 FROM taskusers tu2 WHERE tu2.taskid = th.taskid AND tu2.usern = person
        ))
        OR (showtasks = 'Open' AND username <> person AND th.status NOT IN ('Closed','Completed','Dropped') AND (
            th.lastactionto = person
            OR (th.lastactionto IS NULL AND th.assignto = person)
        ))
        OR (showtasks = 'ALL' AND username <> person AND EXISTS (
            SELECT 1 FROM taskusers tu2 WHERE tu2.taskid = th.taskid AND tu2.usern = person
        ))
        OR (showtasks = 'Initiated by me' AND person <> 'Anyone' AND th.createdby = person)
        OR (showtasks = 'Sent by me to' AND (
            (person = 'Anyone' AND th.lastactionby = username AND th.status = 'Forwarded') OR
            (person <> 'Anyone' AND th.lastactionby = username AND th.lastactionto = person AND th.status = 'Forwarded')
        ))
        OR (showtasks = 'Sent to me by' AND (
            (person = 'Anyone' AND th.lastactionto = username AND th.status = 'Forwarded') OR
            (person <> 'Anyone' AND th.lastactionto = username AND th.lastactionby = person AND th.status = 'Forwarded')
        ))
        OR (showtasks = 'Returned to me by' AND (
            (person = 'Anyone' AND th.lastactionto = username AND th.status = 'Returned') OR
            (person <> 'Anyone' AND th.lastactionto = username AND th.lastactionby = person AND th.status = 'Returned')
        ))
        OR (showtasks = 'Completed by' AND person <> 'Anyone' AND th.status = 'Completed' AND th.lastactionby = person)
        OR (showtasks = 'Dropped by' AND person <> 'Anyone' AND th.status = 'Dropped' AND th.lastactionby = person)
    ))
)
ORDER BY th.taskid DESC, th.lastactiondate DESC;
$$;


ALTER FUNCTION agilespacefresh.fn_get_task_history(ptaskid text, showtasks text, username text, person text) OWNER TO agilespace;

--
-- TOC entry 815 (class 1255 OID 2004688)
-- Name: fn_homebuild_saved_bir(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_homebuild_saved_bir() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare 
v_sid numeric(15);

	BEGIN
	select nextval('ax_homebuild_saved_seq') into v_sid ; 

        IF (TG_OP = 'INSERT') THEN 
		
		NEW.HOMEBUILD_ID = v_sid;
		
		return new;
	end if;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_homebuild_saved_bir() OWNER TO agilespace;

--
-- TOC entry 819 (class 1255 OID 2004689)
-- Name: fn_iconfiguration(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_iconfiguration() RETURNS trigger
    LANGUAGE plpgsql
    AS $$ 
declare
v_cnt numeric(2);
v_sql varchar(4000);

	begin
		
		
		IF (TG_OP = 'INSERT') THEN 
		
		select COALESCE(count(table_name),0) into v_cnt from information_schema.tables where lower(table_name) = lower( 'axpconfigs'||chr(95)||new.structtransid ) and lower(table_schema)=current_schema();
      if v_cnt = 0
      then
      v_sql := 'create table axpconfigsiv'||chr(95)||new.structtransid||' ( configname varchar(30),cvalue varchar(2000),condition varchar(240))' ;
        execute v_sql;
		
        end if;
		

			if new.cv_groupbuttons is not null then
        v_sql = 'insert into axpconfigsiv'||chr(95)||new.structtransid||' ( configname,cvalue,condition ) values ('''||new.configname2||''','''||new.cv_groupbuttons||''',null)';
        execute  v_sql;
      	end if;
		
		return new;
		end if;
		
		IF (TG_OP = 'UPDATE') THEN 
		
		v_sql = 'delete from axpconfigsiv'||chr(95)||old.structtransid;
        execute  v_sql;        
        
		if new.cv_groupbuttons is not null then
        v_sql = 'insert into axpconfigsiv'||chr(95)||new.structtransid||' ( configname,cvalue,condition ) values ('''||new.configname2||''','''||new.cv_groupbuttons||''',null)';
        execute  v_sql;
      	end if;
		
		return new;
		
		end if;
		
		IF (TG_OP = 'DELETE') THEN 
		
		v_sql = 'delete from axpconfigsiv'||chr(95)||old.structtransid;
        execute  v_sql;   
        v_cnt = 2 ;
		
		return new;
		
		end if;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_iconfiguration() OWNER TO agilespace;

--
-- TOC entry 820 (class 1255 OID 2004690)
-- Name: fn_peg_assigntoactor(character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_peg_assigntoactor(assigntoactor character varying, actorfilter character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
rec record;
ag record;
agc record;
v_grpname varchar[] DEFAULT  ARRAY[]::varchar[];
qry text;
sqlstmt refcursor;
cndresult int;
grpresult int;
truecnt int;
v_totalcnd int;
allusers int;
v_datagrpusers varchar[] DEFAULT  ARRAY[]::varchar[];

begin
	grpresult = 0;
truecnt = 0;
cndresult = 0;
allusers=0;

	<<Actor_Groups>>
	for ag in 	
	select a.actorname,b.axpdef_peg_grpfilterrow,b.tbl_datagrp,b.datagrpusers,axpdef_peg_grpfilterid,a.priorindextransid stransid
	from axpdef_peg_actor a,axpdef_peg_grpfilter b
	where a.axpdef_peg_actorid =b.axpdef_peg_actorid 	
	and a.actorname = assigntoactor 
	
	loop		
	select array_length(string_to_array( tbl_datagrp, '~'),1)  into v_totalcnd from axpdef_peg_grpfilter 
	where axpdef_peg_grpfilterid = ag.axpdef_peg_grpfilterid;

	<<Groups_Condition>>	
		for agc in 
			select substring(unnest(string_to_array( split_part(tbl_datagrp,'|',1) , ',')), position('-(' in unnest(string_to_array( split_part(tbl_datagrp,'|',1) , ',')))+ 2, abs((position('-(' in unnest(string_to_array( split_part(tbl_datagrp,'|',1) , ',')))+ 2) - length(substring(unnest(string_to_array( split_part(tbl_datagrp,'|',1) , ',')), 1, length(unnest(string_to_array( split_part(tbl_datagrp,'|',1) , ','))))))) fldname,
			substring(substring(unnest(string_to_array( split_part(tbl_datagrp,'|',1) , ',')), position('-(' in unnest(string_to_array( split_part(tbl_datagrp,'|',1) , ',')))+ 2, abs((position('-(' in unnest(string_to_array( split_part(tbl_datagrp,'|',1) , ',')))+ 2) - length(substring(unnest(string_to_array( split_part(tbl_datagrp,'|',1) , ',')), 1, length(unnest(string_to_array( split_part(tbl_datagrp,'|',1) , ','))))))),1,1) flddatatype,
			case when split_part(tbl_datagrp,'|',2) = 'Equal to' then '='
			when split_part(tbl_datagrp,'|',2) = 'Not equal to' then '!='
			when split_part(tbl_datagrp,'|',2) = 'In' then 'in'
			when split_part(tbl_datagrp,'|',2) = 'Not in' then 'not in'
			when split_part(tbl_datagrp,'|',2) = 'Greater than' then '>'
			when split_part(tbl_datagrp,'|',2) = 'Greater than or Equal to' then '>='
			when split_part(tbl_datagrp,'|',2) = 'Lesser than' then '<'
			when split_part(tbl_datagrp,'|',2) = 'Lesser than or Equal to' then '<=' end cndoprsym,
			split_part(tbl_datagrp,'|',3) fldvalue,axpdef_peg_grpfilterid,datagrpusers,dgname from 
			(select unnest(string_to_array(tbl_datagrp,'~')) tbl_datagrp,axpdef_peg_grpfilterid,datagrpusers,dgname
			from axpdef_peg_grpfilter g2
			where g2.axpdef_peg_grpfilterid =  ag.axpdef_peg_grpfilterid)a		
			
			
			loop 
				
				if agc.cndoprsym  = 'in' or agc.cndoprsym  = 'not in' then										
					open sqlstmt for with ud as (select split_part(regexp_split_to_table(actorfilter,'~'),'=',1) cndfld,
					split_part(regexp_split_to_table(actorfilter,'~'),'=',2) cndfldval) 
					select *  from ud;
					fetch next from sqlstmt into rec;						
					<<user_data>>
					while found loop 	   						
			   		qry :='select count(*) from dual where '''||agc.fldname||'''='''||rec.cndfld ||''' and '''|| rec.cndfldval||''''||agc.cndoprsym||'('''||replace(agc.fldvalue,',',''',''')||''')';			   					   						   		
				   	execute qry into cndresult;					   					  	
 				    if cndresult > 0 then  grpresult := grpresult +1; end if;					  						  				 					   
				  	if cndresult > 0 then truecnt := truecnt + 1; end if;
				  	exit user_data when cndresult > 0;
				  	fetch next from sqlstmt into rec; 			      	
    				end loop;    		
    			 	if v_totalcnd = truecnt then      			 	
					  	v_grpname := array_append(v_grpname,agc.dgname);  
					  	v_datagrpusers := array_append(v_datagrpusers,cast(concat(agc.dgname,'~~',agc.datagrpusers)as varchar(4000)));
    				end if;  
					CLOSE sqlstmt;
				else
					open sqlstmt for with ud as (select * from(select split_part(regexp_split_to_table(actorfilter,'~'),'=',1) cndfld,
					split_part(regexp_split_to_table(actorfilter,'~'),'=',2) cndfldval)a
					where cndfld = agc.fldname
					) 
					select * from ud;
					fetch next from sqlstmt into rec;						
					<<user_data>>
					while found loop 	   						
			   		qry :='select count(*) from dual where '''||agc.fldname||'''='''||rec.cndfld||'''' ||case when agc.flddatatype='n' then ' and '||rec.cndfldval||' '||agc.cndoprsym||' '||agc.fldvalue else  ' and '''||rec.cndfldval||''''||agc.cndoprsym||''''||agc.fldvalue||''''end;			   					   											   	
			   		execute qry into cndresult;					   						
 					if cndresult > 0 then  grpresult := grpresult +1; end if;								  				 					   	
					if cndresult > 0 then truecnt := truecnt + 1; end if;					  
					exit user_data when cndresult > 0;
				    fetch next from sqlstmt into rec;				      	
    				end loop;    		
    				if v_totalcnd = truecnt then  
					  	v_grpname := array_append(v_grpname,agc.dgname); 	
	  				    v_datagrpusers := array_append(v_datagrpusers,cast(concat(agc.dgname,'~~',agc.datagrpusers)as varchar(4000)));
    				end if; 
					CLOSE sqlstmt;
				end if;    		
			end loop;		
			grpresult = 0;truecnt = 0;			
	end loop;		
if array_length(v_datagrpusers,1)>0 then 
return array_to_string(v_datagrpusers,'|~');
else 
return '0'; end if;
end;
$$;


ALTER FUNCTION agilespacefresh.fn_peg_assigntoactor(assigntoactor character varying, actorfilter character varying) OWNER TO agilespace;

--
-- TOC entry 821 (class 1255 OID 2004691)
-- Name: fn_peg_assigntorole(character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_peg_assigntorole(useridentificationfilter character varying, useridentificationfilter_of character varying, initiator character varying, priorusername character varying, assigntorole character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
rec record;
qry text;
sqlstmt refcursor;
rowcount int;
userlist varchar;
begin
rowcount = 1;

if useridentificationfilter is not null then
		open sqlstmt for 
		with a as (select regexp_split_to_table(useridentificationfilter, E',')grp)
		select ''''||b.groupname||'''' groupname,string_agg(''''||groupvalue||'''',',') groupvalue from usergroupings b,a --,axuserlevelgroups c
		where b.username=case when useridentificationfilter_of='Initiator' then initiator when useridentificationfilter_of='Prior User' then priorusername end
		and b.groupname = a.grp  		
		group by b.groupname  ;

		fetch next from sqlstmt into rec;

		while found 		
    		loop 	
    		
			    if rowcount = 1 then 
				qry :='select string_agg(distinct u.username,'','')   from usergroupings u,axuserlevelgroups l where u.username = l.username and l.usergroup='''||assigntorole ||''' and groupname ='||rec.groupname||' and groupvalue in('||  rec.groupvalue||') and u.username!='||''''||
					   case when useridentificationfilter_of='Initiator' then initiator when useridentificationfilter_of='Prior User' then priorusername end||'''';
				else 
				
				qry :='select string_agg(distinct u.username,'','')   from usergroupings u,axuserlevelgroups l  where u.username = l.username and l.usergroup='''||assigntorole ||''' and groupname ='||rec.groupname||' and groupvalue in('||  rec.groupvalue||')
					   and u.username in('||''''||replace(coalesce(userlist,''),',',''',''')||''''||') 
					   and u.username!='||''''||case when useridentificationfilter_of='Initiator' then initiator when useridentificationfilter_of='Prior User' then priorusername end||''''
					   ;
				end if;
													
			execute qry into userlist;			
   			rowcount := rowcount + 1;
   				
		    fetch next from sqlstmt into rec;
		   		    
    		end loop;			
	end if;

return userlist;
	
		
end;

$$;


ALTER FUNCTION agilespacefresh.fn_peg_assigntorole(useridentificationfilter character varying, useridentificationfilter_of character varying, initiator character varying, priorusername character varying, assigntorole character varying) OWNER TO agilespace;

--
-- TOC entry 816 (class 1255 OID 2004692)
-- Name: fn_peg_utl_actorusers(character varying, character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_peg_utl_actorusers(assigntoactor character varying, actorfilter character varying, pinitiator character varying) RETURNS TABLE(pusername character varying)
    LANGUAGE plpgsql
    AS $$
declare
v_assignmodecnd int;
v_defusers varchar;
v_datagrpusers varchar;
usercount int;
v_users varchar;
v_initiator_usergrps varchar;
v_usergrpuser varchar;

begin

select coalesce(assignmodecnd,0) assignmodecnd,defusername,
case when array_length(string_to_array(defusername,','),1) is null then 0 
else  array_length(string_to_array(defusername,','),1) end usercount
into v_assignmodecnd,v_defusers ,usercount
from axpdef_peg_actor a
where a.actorname=assigntoactor; 

	if v_assignmodecnd = 1 then --------Default user
	
		if usercount > 0 then
		v_users := v_defusers;
		end if;
	
	elseif v_assignmodecnd = 2 then -----------User group
		select distinct string_agg(usergroupname,',') into  v_initiator_usergrps 
		from axpdef_peg_usergroups 
		where username = pinitiator and active='T' and effectivefrom <= current_date;
		
		----------- Check approval users are assigned for the initiator's group
		select string_agg(concat(usergroupname,'~~',unames),'|~') ,count(*) into v_usergrpuser,usercount
		from (select distinct b.usergroupname, b.ugrpusername unames
		from axpdef_peg_actor a
		join axpdef_peg_actorusergrp b on a.axpdef_peg_actorid=b.axpdef_peg_actorid
		where a.actorname = assigntoactor 
		and b.usergroupname in (select regexp_split_to_table(v_initiator_usergrps,','))
		order by 1 )a;
		
			--------- if approval users are assinged in process users
		if usercount > 0 then 
		select	split_part(v_usergrpuser,'~~',2) into v_users;
		end if;	
			
	elseif v_assignmodecnd = 3 then 	---- Data groups
		select fn_peg_assigntoactor(assigntoactor,actorfilter) into v_datagrpusers ;		
			if v_datagrpusers != '0' then
				select split_part(v_datagrpusers,'~~',2) dgrpusers into v_users;
			end if;
	end if;		

return query 

select cast(regexp_split_to_table(v_users,',') as varchar);

end;
$$;


ALTER FUNCTION agilespacefresh.fn_peg_utl_actorusers(assigntoactor character varying, actorfilter character varying, pinitiator character varying) OWNER TO agilespace;

--
-- TOC entry 817 (class 1255 OID 2004693)
-- Name: fn_pegv2_editabletask(character varying, character varying, character varying, character varying, numeric); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_pegv2_editabletask(p_processname character varying, p_taskname character varying, p_keyvalue character varying, p_currentuser character varying, p_indexno numeric) RETURNS text
    LANGUAGE plpgsql
    AS $$
declare
v_flag varchar(1);
v_finalapproved varchar(1);
v_finalappqry text;
v_currentuser varchar(50);
v_editable varchar(1);
v_nextleveluser numeric;
v_activeuser numeric;

begin
 
    
select concat('select case when status=0 then ''F'' else ''T'' end from axpeg_',transid,' where keyvalue=''',p_keyvalue,'''') into v_finalappqry 
from axprocessdefv2 where processname=p_processname
and indexno =(select max(indexno) from axprocessdefv2 a where processname=p_processname and stransid!='pgv2c'); 

execute v_finalappqry into v_finalapproved;

--- Current task createdby user and the next task touser is same
select sum(case when taskname =p_taskname and touser=p_currentuser then 1 else 0 end) activeuser,
sum(case when indexno =p_indexno+1 and touser = p_currentuser then 1 else 0 end) nexttaskuser
into v_activeuser,v_nextleveluser from vw_pegv2_activetasks vpa 
where processname =p_processname and keyvalue =p_keyvalue;



-----Task is created by current user
select case when username = p_currentuser then 'T' else 'F' end into  v_currentuser
from axactivetaskstatus where processname=p_processname and taskname=p_taskname and keyvalue=p_keyvalue;

------Editable task validation in process definition
with a as (
select cast(regexp_split_to_table(allowedittasksid,',') as numeric)  defid,axprocessdefv2id from axprocessdefv2 a1 where processname=p_processname and allowedit='T') 
select case when count(*) = 0 then 'F' else 'T' end flg  into v_flag from axprocessdefv2 b join a on a.axprocessdefv2id = b.axprocessdefv2id
join axprocessdefv2 c on a.defid = c.axprocessdefv2id and c.taskname=p_taskname
join axactivetasks t on b.processname = p_processname and keyvalue = p_keyvalue and b.taskname = t.taskname and t.touser = p_currentuser;


select case when v_finalapproved='T' then 'F' else 
case when v_activeuser > 0 then 'T'
when v_currentuser='T' and v_nextleveluser > 0 then 'T'  
when v_currentuser='F' and v_activeuser = 0  then v_flag else v_flag end end into v_editable;


return v_editable;
end;

$$;


ALTER FUNCTION agilespacefresh.fn_pegv2_editabletask(p_processname character varying, p_taskname character varying, p_keyvalue character varying, p_currentuser character varying, p_indexno numeric) OWNER TO agilespace;

--
-- TOC entry 818 (class 1255 OID 2004694)
-- Name: fn_pegv2_updapp_datagroups(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_pegv2_updapp_datagroups() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare
v_newusers varchar(4000);
v_delusers varchar(4000);
v_retainedusers varchar(4000);
begin

with a as(select regexp_split_to_table(new.olddatagrpusers,',') usr),b as (select regexp_split_to_table(new.datagrpusers,',') usr)
select string_agg(a.usr,',') into v_delusers from a left join b on a.usr = b.usr
where b.usr is null;

with a as(select regexp_split_to_table(new.olddatagrpusers,',') usr),b as (select regexp_split_to_table(new.datagrpusers,',') usr)
select string_agg(b.usr,',') into v_newusers from a right join b on a.usr = b.usr
where a.usr is null;


with a as(select regexp_split_to_table(new.olddatagrpusers,',') usr),b as (select regexp_split_to_table(new.datagrpusers,',') usr)
select string_agg(b.usr,',') into v_retainedusers from a join b on a.usr = b.usr;


update axactivetasks a set removeflg='T' where assigntoflg='2' and delegation='F' and pownerflg='F' and removeflg='F' and grouped='T'
and assigntoactor= new.dg_actorname 
and actor_data_grp  = new.dgname
and touser in(select regexp_split_to_table(v_delusers,','))
and not exists (SELECT b.taskid FROM axactivetaskstatus b WHERE a.taskid = b.taskid);


insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,
	keyvalue,transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,
	displayicon,displaytitle,displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,
	useridentificationfilter,useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,
	assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
	approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,allowsend,
	allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,changedusr,actor_data_grp) 	
	select distinct eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,
	execonapprove,keyvalue,transdata,fromrole,fromuser,regexp_split_to_table(v_newusers,','),priorindex,priortaskname,corpdimension,
	orgdimension,department,grade,datavalue,displayicon,displaytitle,displaysubtitle,displaycontent,
	displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,	useridentificationfilter,
	useridentificationfilter_of,mapfield_group,mapfield,'T',indexno,subindexno,
	processowner,assigntoflg,assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,
	approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
	approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,
	allowsend,allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,'T',new.dgname
	from axactivetasks a 	
	where assigntoflg='2' and delegation='F' and pownerflg ='F' and removeflg ='F' and grouped='T'
	and assigntoactor = new.dg_actorname
	and actor_data_grp  = new.dgname 
	and not exists (SELECT b.taskid FROM axactivetaskstatus b WHERE a.taskid = b.taskid); 

	
return new;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_pegv2_updapp_datagroups() OWNER TO agilespace;

--
-- TOC entry 822 (class 1255 OID 2004695)
-- Name: fn_pegv2_updapp_default(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_pegv2_updapp_default() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare
v_newusers varchar(4000);
v_delusers varchar(4000);
v_retainedusers varchar(4000);
begin

with a as(select regexp_split_to_table(new.olddefusername,',') usr),b as (select regexp_split_to_table(new.defusername,',') usr)
select string_agg(a.usr,',') into v_delusers from a left join b on a.usr = b.usr
where b.usr is null;

with a as(select regexp_split_to_table(new.olddefusername,',') usr),b as (select regexp_split_to_table(new.defusername,',') usr)
select string_agg(b.usr,',') into v_newusers from a right join b on a.usr = b.usr
where a.usr is null;


with a as(select regexp_split_to_table(new.olddefusername,',') usr),b as (select regexp_split_to_table(new.defusername,',') usr)
select string_agg(b.usr,',') into v_retainedusers from a join b on a.usr = b.usr;


update axactivetasks a set removeflg='T' where assigntoflg='2' and delegation='F' and pownerflg='F' and removeflg='F' and actor_default_users='T' and grouped='T'
and assigntoactor= new.actorname and touser in(select regexp_split_to_table(v_delusers,','))
and not exists (SELECT b.taskid FROM axactivetaskstatus b WHERE a.taskid = b.taskid);


insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,
	keyvalue,transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,
	displayicon,displaytitle,displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,
	useridentificationfilter,useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,
	assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
	approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,allowsend,
	allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,changedusr,actor_default_users) 	
	select distinct eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,
	execonapprove,keyvalue,transdata,fromrole,fromuser,regexp_split_to_table(v_newusers,','),priorindex,priortaskname,corpdimension,
	orgdimension,department,grade,datavalue,displayicon,displaytitle,displaysubtitle,displaycontent,
	displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,	useridentificationfilter,
	useridentificationfilter_of,mapfield_group,mapfield,'T',indexno,subindexno,
	processowner,assigntoflg,assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,
	approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
	approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,
	allowsend,allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,'T','T'
	from axactivetasks a 	
	 where assigntoflg='2' and delegation='F' and pownerflg ='F' and removeflg ='F' and grouped='T' and actor_default_users='T'
	 and assigntoactor = new.actorname	 
	 and not exists (SELECT b.taskid FROM axactivetaskstatus b WHERE a.taskid = b.taskid); 

	
return new;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_pegv2_updapp_default() OWNER TO agilespace;

--
-- TOC entry 823 (class 1255 OID 2004696)
-- Name: fn_pegv2_updapp_reporting(character varying, character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_pegv2_updapp_reporting(p_fromuser character varying, p_existingapp character varying, p_newapp character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
begin 

insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,
	keyvalue,transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,
	displayicon,displaytitle,displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,
	useridentificationfilter,useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,
	assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
	approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,allowsend,
	allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,changedusr) 	
	select eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,
	execonapprove,keyvalue,transdata,fromrole,fromuser,p_newapp,priorindex,priortaskname,corpdimension,
	orgdimension,department,grade,datavalue,displayicon,displaytitle,displaysubtitle,displaycontent,
	displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,	useridentificationfilter,
	useridentificationfilter_of,mapfield_group,mapfield,'T',indexno,subindexno,
	processowner,assigntoflg,assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,
	approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
	approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,
	allowsend,allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,'T'
	from axactivetasks a 	
	 where assigntoflg='1' and delegation='F' and pownerflg ='F' and grouped='T'
	 and fromuser= p_fromuser and touser= p_existingapp and removeflg ='F'
	and not exists (SELECT b.taskid FROM axactivetaskstatus b WHERE a.taskid = b.taskid); 
	
	
	
	
update axactivetasks a set removeflg ='T' where assigntoflg='1' and delegation='F' and pownerflg ='F' 
and fromuser= p_fromuser and touser= p_existingapp and not exists 
(SELECT b.taskid FROM axactivetaskstatus b WHERE a.taskid = b.taskid);

end; $$;


ALTER FUNCTION agilespacefresh.fn_pegv2_updapp_reporting(p_fromuser character varying, p_existingapp character varying, p_newapp character varying) OWNER TO agilespace;

--
-- TOC entry 824 (class 1255 OID 2004697)
-- Name: fn_pegv2_updapp_usegroups(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_pegv2_updapp_usegroups() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare
v_newusers varchar(4000);
v_delusers varchar(4000);
v_retainedusers varchar(4000);
begin

with a as(select regexp_split_to_table(new.oldugrpusername,',') usr),b as (select regexp_split_to_table(new.ugrpusername,',') usr)
select string_agg(a.usr,',') into v_delusers from a left join b on a.usr = b.usr
where b.usr is null;

with a as(select regexp_split_to_table(new.oldugrpusername,',') usr),b as (select regexp_split_to_table(new.ugrpusername,',') usr)
select string_agg(b.usr,',') into v_newusers from a right join b on a.usr = b.usr
where a.usr is null;


with a as(select regexp_split_to_table(new.oldugrpusername,',') usr),b as (select regexp_split_to_table(new.ugrpusername,',') usr)
select string_agg(b.usr,',') into v_retainedusers from a join b on a.usr = b.usr;


update axactivetasks a set removeflg='T' where assigntoflg='2' and delegation='F' and pownerflg='F' and removeflg='F' and grouped='T'
and assigntoactor= new.ug_actorname 
and actor_user_groups  = new.usergroupname
and touser in(select regexp_split_to_table(v_delusers,','))
and not exists (SELECT b.taskid FROM axactivetaskstatus b WHERE a.taskid = b.taskid);


insert into axactivetasks(eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,execonapprove,
	keyvalue,transdata,fromrole,fromuser,touser,priorindex,priortaskname,corpdimension,orgdimension,department,grade,datavalue,
	displayicon,displaytitle,displaysubtitle,displaycontent,displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,
	useridentificationfilter,useridentificationfilter_of,mapfield_group,mapfield,grouped,indexno,subindexno,processowner,assigntoflg,
	assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
	approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,allowsend,
	allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,changedusr,actor_user_groups) 	
	select distinct eventdatetime,taskid,processname,tasktype,taskname,taskdescription,assigntorole,transid,keyfield,
	execonapprove,keyvalue,transdata,fromrole,fromuser,regexp_split_to_table(v_newusers,','),priorindex,priortaskname,corpdimension,
	orgdimension,department,grade,datavalue,displayicon,displaytitle,displaysubtitle,displaycontent,
	displaybuttons,groupfield,groupvalue,priorusername,initiator,mapfieldvalue,	useridentificationfilter,
	useridentificationfilter_of,mapfield_group,mapfield,'T',indexno,subindexno,
	processowner,assigntoflg,assigntoactor,actorfilter,recordid,processownerflg,pownerfilter,
	approvereasons,defapptext,returnreasons,defrettext,rejectreasons,defregtext,
	approvalcomments,rejectcomments,returncomments,escalation,reminder,displaymcontent,groupwithpriorindex,returnable,
	allowsend,allowsendflg,sendtoactor,initiator_approval,usebusinessdatelogic,initonbehalf,'T',new.usergroupname
	from axactivetasks a 	
	 where assigntoflg='2' and delegation='F' and pownerflg ='F' and removeflg ='F' and grouped='T'
	 and assigntoactor = new.ug_actorname
	 and actor_user_groups  = new.usergroupname 
	 and not exists (SELECT b.taskid FROM axactivetaskstatus b WHERE a.taskid = b.taskid); 

	
return new;
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_pegv2_updapp_usegroups() OWNER TO agilespace;

--
-- TOC entry 825 (class 1255 OID 2004698)
-- Name: fn_permissions_axupscript(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_permissions_axupscript() RETURNS text
    LANGUAGE plpgsql
    AS $$
declare 
rec record;
v_sqlary text[] DEFAULT  ARRAY[]::text[];
v_sql text;
begin

for rec in
select fname from axpflds where tstruct = 'a__ua' and dcname='dc3' and fname not in('axuserrole','sqltext','cnd')
loop




v_sql := 'select ''exists(select 1 from unnest(string_to_array('||replace(rec.fname,'axup_','{primarytable.}axg_')||','''','''')) val where val in(''''''||replace( :'||rec.fname||','','','''''','''''')||''''''))'' cnd from(select '''||rec.fname||''' gname,unnest(string_to_array(:'||rec.fname||','','')) gval from dual)a group by gname having sum(case when gval=''All'' then 1 else 0 end) = 0';


v_sqlary := array_append(v_sqlary,v_sql);

end loop;

return 'select string_agg(cnd,'' and '') from ( '||array_to_string(v_sqlary,' union all ')||')b';

END; $$;


ALTER FUNCTION agilespacefresh.fn_permissions_axupscript() OWNER TO agilespace;

--
-- TOC entry 826 (class 1255 OID 2004699)
-- Name: fn_permissions_create_grpcol(character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_permissions_create_grpcol(ptransid character varying, ptable character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
v_altersql text; 
r record;
begin
	

for r in select grpname from axgroupingmst loop 

	v_altersql :='alter table '||ptable||' add axg_'||r.grpname||' varchar(4000)';
	execute v_altersql;

end loop;

return 'T';

exception when others then return 'F';
 
end;

$$;


ALTER FUNCTION agilespacefresh.fn_permissions_create_grpcol(ptransid character varying, ptable character varying) OWNER TO agilespace;

--
-- TOC entry 827 (class 1255 OID 2004700)
-- Name: fn_permissions_getadscnd(character varying, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_permissions_getadscnd(ptransid character varying, padsname character varying, pusername character varying, proles character varying DEFAULT 'All'::character varying, pkeyfield character varying DEFAULT NULL::character varying, pkeyvalue character varying DEFAULT NULL::character varying) RETURNS TABLE(fullcontrol character varying, userrole character varying, view_access character varying, view_includeflds character varying, view_excludeflds character varying, maskedflds character varying, filtercnd text)
    LANGUAGE plpgsql
    AS $$
declare 
rec record;
rolesql text;
v_permissionsql text;
v_permissionexists numeric;
begin


if proles='All' then 
	rolesql := 'select a.axuserrole,case when viewctrl=''1'' then viewlist else null end view_includedflds,
	case when viewctrl=''2'' then viewlist else null end view_excludedflds,a.fieldmaskstr,b.cnd,viewctrl 
	from AxPermissions a join axuserpermissions b on a.axuserrole = b.axuserrole and a.formtransid='''||padsname||'''
	join axusers u on b.axusersid = u.axusersid  and u.username = '''||pusername||'''';
	
	
	v_permissionsql := 'select count(*) from AxPermissions a join axuserpermissions b on a.axuserrole = b.axuserrole and a.formtransid='''||padsname||'''
	join axusers u on b.axusersid = u.axusersid  and u.username = '''||pusername||'''';

else

	rolesql := 'select a.axuserrole,case when viewctrl=''1'' then viewlist else null end view_includedflds,
	case when viewctrl=''2'' then viewlist else null end view_excludedflds,
	a.fieldmaskstr,b.cnd,viewctrl from AxPermissions a join axuserpermissions b on a.axuserrole = b.axuserrole and a.formtransid='''||padsname||'''
	join axusers u on b.axusersid = u.axusersid  and u.username = '''||pusername||'''
	where exists (select 1 from unnest(string_to_array('''||proles||''','','')) val where val in (b.axuserrole))';
	
	v_permissionsql:=  'select count(*) from AxPermissions a join axuserpermissions b on a.axuserrole = b.axuserrole and a.formtransid='''||padsname||'''
	join axusers u on b.axusersid = u.axusersid  and u.username = '''||pusername||'''
	where exists (select 1 from unnest(string_to_array('''||proles||''','','')) val where val in (b.axuserrole))';

end if;

execute v_permissionsql into  v_permissionexists;

if v_permissionexists = 0 then 

	fullcontrol:= 'T';
	return next;

else

	for rec in execute rolesql
	loop
	
			userrole := rec.axuserrole;
			view_includeflds := rec.view_includedflds;
			view_excludeflds := rec.view_excludedflds;
			maskedflds := rec.fieldmaskstr;
			filtercnd := rec.cnd;		
			view_access := case when rec.viewctrl='4' then 'None' else null end;		
			return next;
	
	
	end loop;

end if;
 
return;
	
END; 
$$;


ALTER FUNCTION agilespacefresh.fn_permissions_getadscnd(ptransid character varying, padsname character varying, pusername character varying, proles character varying, pkeyfield character varying, pkeyvalue character varying) OWNER TO agilespace;

--
-- TOC entry 828 (class 1255 OID 2004701)
-- Name: fn_permissions_getadssql(character varying, character varying, text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_permissions_getadssql(ptransid character varying, padsname character varying, pcond text) RETURNS text
    LANGUAGE plpgsql
    AS $$
declare 
rec record;
v_adssql text;
v_filtersql text;
v_primarydctable varchar;
v_filtercnd text;
begin

select sqltext into v_adssql from axdirectsql where sqlname = padsname;

if pcond !='NA' then 

select tablename into v_primarydctable from axpdc where tstruct = ptransid and dname ='dc1';


v_filtercnd := concat(' and (',replace(pcond,'{primarytable.}',v_primarydctable||'.'),')');
	
v_filtersql := replace(v_adssql,'--permission_filter',v_filtercnd);


end if;

return case when pcond ='NA' then  v_adssql else v_filtersql end;
	
	
END; 
$$;


ALTER FUNCTION agilespacefresh.fn_permissions_getadssql(ptransid character varying, padsname character varying, pcond text) OWNER TO agilespace;

--
-- TOC entry 829 (class 1255 OID 2004702)
-- Name: fn_permissions_getcnd(character varying, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_permissions_getcnd(pmode character varying, ptransid character varying, pkeyfld character varying, pkeyvalue character varying, pusername character varying, proles character varying DEFAULT 'All'::character varying) RETURNS TABLE(fullcontrol character varying, userrole character varying, allowcreate character varying, view_access character varying, view_includedc character varying, view_excludedc character varying, view_includeflds character varying, view_excludeflds character varying, edit_access character varying, edit_includedc character varying, edit_excludedc character varying, edit_includeflds character varying, edit_excludeflds character varying, maskedflds character varying, filtercnd text, recordid numeric)
    LANGUAGE plpgsql
    AS $$
declare 
rec record;
rolesql text;
v_transid_primetable varchar(100);
v_transid_primetableid varchar(100);
v_keyfld_normalized varchar(1);
v_keyfld_srctbl varchar(100);
v_keyfld_srcfld varchar(100);
v_keyfld_mandatory varchar(1);
v_keyfld_joins varchar(500);
v_keyfld_cnd varchar(500);
sql_permission_cnd text;
sql_permission_cnd_result numeric;
v_dcfldslist text;
v_recordid numeric;
v_permissionsql text;
v_permissionexists numeric;
v_menuaccess numeric;
v_fullcontrolsql text;
v_fullcontrolrecid numeric;
begin

select srckey,srctf,srcfld,allowempty into v_keyfld_normalized,v_keyfld_srctbl,v_keyfld_srcfld,v_keyfld_mandatory
from axpflds where tstruct = ptransid and fname = pkeyfld;

select tablename into v_transid_primetable from axpdc where tstruct=ptransid and dname='dc1';

v_transid_primetableid := case when lower(pkeyfld)='recordid' then v_transid_primetable||'id' else pkeyfld end;

v_keyfld_cnd := case when v_keyfld_normalized='T' then v_keyfld_srctbl||'.'||v_keyfld_srcfld else  v_transid_primetable||'.'||v_transid_primetableid end ||'='||pkeyvalue||' and ';

if v_keyfld_normalized='T' then 
	v_keyfld_joins := case when v_keyfld_mandatory='T' then ' join ' else ' left join ' end
					  ||v_keyfld_srctbl||' '||pkeyfld||' on '||v_transid_primetable||'.'||pkeyfld||'='||v_keyfld_srctbl||'.'||v_keyfld_srctbl||'id';		
	
end if;

select sum(cnt) into v_menuaccess from 
(select 1 cnt from axusergroups a join axusergroupsdetail b on a.axusergroupsid = b.axusergroupsid
join axuseraccess a2 on b.roles_id = a2.rname and stype ='t' 
where a2.sname = ptransid
and exists(select 1 from unnest(string_to_array(proles,',')) val where val = a.groupname)
union all
select 1 from dual where proles like '%default%'
union all
select 1 from axuserlevelgroups where username = pusername and usergroup='default'
union all
select 1 cnt from axusergroups a join axusergroupsdetail b on a.axusergroupsid = b.axusergroupsid
join axuseraccess a2 on b.roles_id = a2.rname and stype ='t'
join axuserlevelgroups u on a.groupname = u.usergroup and u.username = pusername 
where a2.sname = ptransid and proles = 'All'
)a;


if proles='All' then 
rolesql := 'select a.axuserrole,case when viewctrl=''1'' then viewlist else null end view_includedflds,
case when viewctrl=''2'' then viewlist else null end view_excludedflds,case when editctrl=''1'' then editlist else null end edit_includedflds,
case when editctrl=''2'' then editlist else null end edit_excludedflds,
a.fieldmaskstr,b.cnd,viewctrl,allowcreate,editctrl from AxPermissions a join axuserpermissions b on a.axuserrole = b.axuserrole and a.formtransid='''||ptransid||'''
join axusers u on b.axusersid = u.axusersid  and u.username = '''||pusername||'''';


v_permissionsql := 'select count(*) from AxPermissions a join axuserpermissions b on a.axuserrole = b.axuserrole and a.formtransid='''||ptransid||'''
join axusers u on b.axusersid = u.axusersid  and u.username = '''||pusername||'''';

else

rolesql := 'select a.axuserrole,case when viewctrl=''1'' then viewlist else null end view_includedflds,
case when viewctrl=''2'' then viewlist else null end view_excludedflds,case when editctrl=''1'' then editlist else null end edit_includedflds,
case when editctrl=''2'' then editlist else null end edit_excludedflds,
a.fieldmaskstr,b.cnd,viewctrl,allowcreate,editctrl from AxPermissions a join axuserpermissions b on a.axuserrole = b.axuserrole and a.formtransid='''||ptransid||'''
join axusers u on b.axusersid = u.axusersid  and u.username = '''||pusername||'''
where exists (select 1 from unnest(string_to_array('''||proles||''','','')) val where val in (b.axuserrole))';

v_permissionsql:=  'select count(*) from AxPermissions a join axuserpermissions b on a.axuserrole = b.axuserrole and a.formtransid='''||ptransid||'''
join axusers u on b.axusersid = u.axusersid  and u.username = '''||pusername||'''
where exists (select 1 from unnest(string_to_array('''||proles||''','','')) val where val in (b.axuserrole))';

end if;

execute v_permissionsql into  v_permissionexists;

if v_menuaccess > 0 and v_permissionexists = 0 then 

v_fullcontrolsql := concat('select ',v_transid_primetable,'id',' from ',v_transid_primetable,' ',v_keyfld_joins,' where ',replace(v_keyfld_cnd,' and ',''));
execute v_fullcontrolsql into v_fullcontrolrecid;
fullcontrol:= 'T';
recordid := v_fullcontrolrecid;
return next;

else

for rec in execute rolesql
loop

	sql_permission_cnd := concat('select count(*),',v_transid_primetable,'id',' from ',v_transid_primetable,' ',v_keyfld_joins,' where ',v_keyfld_cnd,replace(rec.cnd,'{primarytable.}',v_transid_primetable||'.'),'group by ',v_transid_primetable,'id');

	execute sql_permission_cnd into sql_permission_cnd_result,v_recordid;

	
	
	if sql_permission_cnd_result > 0 then
		

		userrole := rec.axuserrole;
		select string_agg(dname,',') into view_includedc  from axpdc where tstruct=ptransid and exists (select 1 from unnest(string_to_array( rec.view_includedflds,',')) val where val = dname);
		select string_agg(dname,',') into view_excludedc  from axpdc where tstruct=ptransid and exists (select 1 from unnest(string_to_array( rec.view_excludedflds,',')) val where val = dname);		 
		select string_agg(fname,',') into view_includeflds  from axpflds where tstruct=ptransid and savevalue='T' and exists (select 1 from unnest(string_to_array( rec.view_includedflds,',')) val where val = fname);
		select string_agg(fname,',') into view_excludeflds  from axpflds where tstruct=ptransid and savevalue='T' and exists (select 1 from unnest(string_to_array( rec.view_excludedflds,',')) val where val = fname);
		select string_agg(dname,',') into edit_includedc  from axpdc where tstruct=ptransid and exists (select 1 from unnest(string_to_array( rec.edit_includedflds,',')) val where val = dname);
		select string_agg(dname,',') into edit_excludedc  from axpdc where tstruct=ptransid and exists (select 1 from unnest(string_to_array( rec.edit_excludedflds,',')) val where val = dname);		 
		select string_agg(fname,',') into edit_includeflds  from axpflds where tstruct=ptransid and savevalue='T' and exists (select 1 from unnest(string_to_array( rec.edit_includedflds,',')) val where val = fname);
		select string_agg(fname,',') into edit_excludeflds  from axpflds where tstruct=ptransid and savevalue='T' and exists (select 1 from unnest(string_to_array( rec.edit_excludedflds,',')) val where val = fname);
		maskedflds := rec.fieldmaskstr;
		filtercnd := rec.cnd;
		recordid :=v_recordid;
		view_access := case when rec.editctrl='0' then null else case when rec.viewctrl='4' then 'None' else null end end;
		edit_access := case when rec.editctrl='4' then 'None' else null end;	
		allowcreate := rec.allowcreate;
		view_includeflds := case when rec.viewctrl='0' then view_includeflds else concat(view_includeflds,',',edit_includeflds) end;		
		view_includedc :=case when rec.viewctrl='0' then view_includedc else  concat(view_includedc,',',edit_includedc) end;		
		return next;

	end if;



end loop;

end if;
 
return;
	
END; 
$$;


ALTER FUNCTION agilespacefresh.fn_permissions_getcnd(pmode character varying, ptransid character varying, pkeyfld character varying, pkeyvalue character varying, pusername character varying, proles character varying) OWNER TO agilespace;

--
-- TOC entry 830 (class 1255 OID 2004705)
-- Name: fn_permissions_getdcrecid(character varying, numeric, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_permissions_getdcrecid(ptransid character varying, precordid numeric, pdcstring character varying) RETURNS TABLE(dcname character varying, rowno numeric, recordid numeric)
    LANGUAGE plpgsql
    AS $$
declare 
v_rec record;
v_rec1 record;
v_sql text;
v_dcname varchar;
v_rowstring varchar;
v_dctable varchar;
v_primarydctable varchar;
begin


select tablename into v_primarydctable from axpdc where tstruct=ptransid and dname='dc1';

for v_rec in select unnest(string_to_array(pdcstring,'|')) str from dual
Loop
	v_dcname := split_part(v_rec.str,'~',1);
	v_rowstring := split_part(v_rec.str,'~',2);

	select tablename into v_dctable from axpdc where tstruct=ptransid and dname=v_dcname;

	if v_rowstring = '0' then 
		v_sql := 'select '''||v_dcname||''' dcname,'||v_rowstring||' rowno,'||v_dctable||'id recordid from '||v_dctable||' where '||v_primarydctable||'id::numeric='||precordid;
	else 
		v_sql := 'select '''||v_dcname||''' dcname,'||v_dctable||'row rowno,'||v_dctable||'id recordid from '||v_dctable||' where '||v_primarydctable||'id::numeric='||precordid||' and '||v_dctable||'row in(select unnest(string_to_array('''||v_rowstring||''','',''))::numeric)';
	end if;

		for v_rec1 in execute v_sql 
		Loop 		
			dcname :=v_rec1.dcname;
			rowno :=v_rec1.rowno;
			recordid :=v_rec1.recordid;		
			return next;
		end loop; 
	

		 		
end loop;

return;


	
END; 
$$;


ALTER FUNCTION agilespacefresh.fn_permissions_getdcrecid(ptransid character varying, precordid numeric, pdcstring character varying) OWNER TO agilespace;

--
-- TOC entry 837 (class 1255 OID 2004706)
-- Name: fn_permissions_getpermission(character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_permissions_getpermission(pmode character varying, ptransid character varying, pusername character varying, proles character varying DEFAULT 'All'::character varying) RETURNS TABLE(transid character varying, fullcontrol character varying, userrole character varying, allowcreate character varying, view_access character varying, view_includedc character varying, view_excludedc character varying, view_includeflds character varying, view_excludeflds character varying, edit_access character varying, edit_includedc character varying, edit_excludedc character varying, edit_includeflds character varying, edit_excludeflds character varying, maskedflds character varying, filtercnd text)
    LANGUAGE plpgsql
    AS $$
declare 
rec record;
rolesql text;
v_permissionsql text;
v_permissionexists numeric;
v_menuaccess numeric;
rec_transid record;
begin

for rec_transid in(select unnest(string_to_array(ptransid,',')) transid) loop

select sum(cnt) into v_menuaccess from 
(select 1 cnt from axusergroups a join axusergroupsdetail b on a.axusergroupsid = b.axusergroupsid
join axuseraccess a2 on b.roles_id = a2.rname and stype ='t' 
where a2.sname = rec_transid.transid
and exists(select 1 from unnest(string_to_array(proles,',')) val where val = a.groupname)
union all
select 1 from dual where proles like '%default%'
union all
select 1 from axuserlevelgroups where username = pusername and usergroup='default'
union all
select 1 cnt from axusergroups a join axusergroupsdetail b on a.axusergroupsid = b.axusergroupsid
join axuseraccess a2 on b.roles_id = a2.rname and stype ='t'
join axuserlevelgroups u on a.groupname = u.usergroup and u.username = pusername 
where a2.sname = ptransid and proles = 'All'
)a;

if proles='All' then 
rolesql := 'select a.axuserrole,case when viewctrl=''1'' then viewlist else null end view_includedflds,
case when viewctrl=''2'' then viewlist else null end view_excludedflds,case when editctrl=''1'' then editlist else null end edit_includedflds,
case when editctrl=''2'' then editlist else null end edit_excludedflds,
a.fieldmaskstr,b.cnd,viewctrl,allowcreate,editctrl from AxPermissions a join axuserpermissions b on a.axuserrole = b.axuserrole and a.formtransid='''||rec_transid.transid||'''
join axusers u on b.axusersid = u.axusersid  and u.username = '''||pusername||'''';

v_permissionsql := 'select count(*) from AxPermissions a join axuserpermissions b on a.axuserrole = b.axuserrole and a.formtransid='''||rec_transid.transid||'''
join axusers u on b.axusersid = u.axusersid  and u.username = '''||pusername||'''';

else

rolesql := 'select a.axuserrole,case when viewctrl=''1'' then viewlist else null end view_includedflds,
case when viewctrl=''2'' then viewlist else null end view_excludedflds,case when editctrl=''1'' then editlist else null end edit_includedflds,
case when editctrl=''2'' then editlist else null end edit_excludedflds,
a.fieldmaskstr,b.cnd,viewctrl,allowcreate,editctrl from AxPermissions a join axuserpermissions b on a.axuserrole = b.axuserrole and a.formtransid='''||rec_transid.transid||'''
join axusers u on b.axusersid = u.axusersid  and u.username = '''||pusername||'''
where exists (select 1 from unnest(string_to_array('''||proles||''','','')) val where val in (b.axuserrole))';

v_permissionsql :='select count(*) from AxPermissions a join axuserpermissions b on a.axuserrole = b.axuserrole and a.formtransid='''||rec_transid.transid||'''
join axusers u on b.axusersid = u.axusersid  and u.username = '''||pusername||'''
where exists (select 1 from unnest(string_to_array('''||proles||''','','')) val where val in (b.axuserrole))';

end if;

execute v_permissionsql into  v_permissionexists;


if v_menuaccess > 0 and v_permissionexists = 0 then 

fullcontrol:= 'T';
transid := rec_transid.transid;
userrole := null;
view_includedc  :=null;
view_excludedc  :=null;		 
view_includeflds:=null;
view_excludeflds :=null;
edit_includedc :=null;
edit_excludedc :=null;		 
edit_includeflds :=null;
edit_excludeflds :=null;
maskedflds := null;				
view_access := null;
edit_access := null;
view_includeflds := null;		
view_includedc :=null;
allowcreate := null;
filtercnd := null;
		
return next;

else

for rec in execute rolesql
loop	
		transid := rec_transid.transid;
		userrole := rec.axuserrole;
		select string_agg(dname,',') into view_includedc  from axpdc where tstruct=rec_transid.transid and exists (select 1 from unnest(string_to_array( rec.view_includedflds,',')) val where val = dname);
		select string_agg(dname,',') into view_excludedc  from axpdc where tstruct=rec_transid.transid and exists (select 1 from unnest(string_to_array( rec.view_excludedflds,',')) val where val = dname);		 
		select string_agg(fname,',') into view_includeflds  from axpflds where tstruct=rec_transid.transid and savevalue='T' and exists (select 1 from unnest(string_to_array( rec.view_includedflds,',')) val where val = fname);
		select string_agg(fname,',') into view_excludeflds  from axpflds where tstruct=rec_transid.transid and savevalue='T' and exists (select 1 from unnest(string_to_array( rec.view_excludedflds,',')) val where val = fname);
		select string_agg(dname,',') into edit_includedc  from axpdc where tstruct=rec_transid.transid and exists (select 1 from unnest(string_to_array( rec.edit_includedflds,',')) val where val = dname);
		select string_agg(dname,',') into edit_excludedc  from axpdc where tstruct=rec_transid.transid and exists (select 1 from unnest(string_to_array( rec.edit_excludedflds,',')) val where val = dname);		 
		select string_agg(fname,',') into edit_includeflds  from axpflds where tstruct=rec_transid.transid and savevalue='T' and exists (select 1 from unnest(string_to_array( rec.edit_includedflds,',')) val where val = fname);
		select string_agg(fname,',') into edit_excludeflds  from axpflds where tstruct=rec_transid.transid and savevalue='T' and exists (select 1 from unnest(string_to_array( rec.edit_excludedflds,',')) val where val = fname);
		maskedflds := rec.fieldmaskstr;				
		view_access := case when rec.editctrl='0' then null else case when rec.viewctrl='4' then 'None' else null end end;
		edit_access := case when rec.editctrl='4' then 'None' else null end;
		view_includeflds := case when rec.viewctrl='0' then view_includeflds else concat(view_includeflds,',',edit_includeflds) end;		
		view_includedc :=case when rec.viewctrl='0' then view_includedc else  concat(view_includedc,',',edit_includedc) end;
		allowcreate := rec.allowcreate;
		filtercnd := rec.cnd;
		fullcontrol:= null;
		return next;

end loop;

end if;

end loop;
 
return;
	
END; 
$$;


ALTER FUNCTION agilespacefresh.fn_permissions_getpermission(pmode character varying, ptransid character varying, pusername character varying, proles character varying) OWNER TO agilespace;

--
-- TOC entry 838 (class 1255 OID 2004707)
-- Name: fn_permissions_getsqls(character varying, character varying, character varying, character varying, text, character varying, character varying, text, text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_permissions_getsqls(pmode character varying, ptransid character varying, pkeyfld character varying, pkeyvalue character varying, pcond text, pincdc character varying, pexcdc character varying, pincflds text, pexcflds text) RETURNS TABLE(dcno character varying, dcsql text)
    LANGUAGE plpgsql
    AS $$
declare 
rec record;
rec1 record;
rec2 record;
--rolesql text;
v_transid_primetable varchar(100);
v_transid_primetableid varchar(100);
v_keyfld_normalized varchar(1);
v_keyfld_srctbl varchar(100);
v_keyfld_srcfld varchar(100);
v_keyfld_mandatory varchar(1);
v_keyfld_joins varchar(500);
v_keyfld_cnd varchar(500);
--sql_permission_cnd text;
--sql_permission_cnd_result numeric;
v_primarydctable varchar;
v_allflds text;
v_fldname_dctablename varchar;
v_fldname_dcflds text;
v_fldname_dcjoinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_dctables varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_col varchar;
v_fldname_normalized varchar;
v_fldname_srctbl varchar;
v_fldname_srcfld varchar;
v_fldname_allowempty varchar;
v_fldnamesary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_joinsary varchar[] DEFAULT  ARRAY[]::varchar[];
v_fldname_normalizedtables varchar[] DEFAULT  ARRAY[]::varchar[];
v_sql text;
v_onlydcselect numeric;
v_emptyary varchar[] DEFAULT  ARRAY[]::varchar[];
v_alldcs varchar;
begin

select tablename into v_primarydctable from axpdc where tstruct = ptransid and dname ='dc1';

select srckey,srctf,srcfld,allowempty into v_keyfld_normalized,v_keyfld_srctbl,v_keyfld_srcfld,v_keyfld_mandatory
from axpflds where tstruct = ptransid and fname = pkeyfld;

select tablename into v_transid_primetable from axpdc where tstruct=ptransid and dname='dc1';

v_transid_primetableid := case when lower(pkeyfld)='recordid' then v_transid_primetable||'id' else pkeyfld end;

v_keyfld_cnd := case when v_keyfld_normalized='T' then v_keyfld_srctbl||'.'||v_keyfld_srcfld else  v_transid_primetable||'.'||v_transid_primetableid end ||'='||pkeyvalue;

if v_keyfld_normalized='T' then 
	v_keyfld_joins := case when v_keyfld_mandatory='T' then ' join ' else ' left join ' end
					  ||v_keyfld_srctbl||' '||pkeyfld||' on '||v_transid_primetable||'.'||pkeyfld||'='||v_keyfld_srctbl||'.'||v_keyfld_srctbl||'id';		
	
end if;



	if pincdc is null then 	
		select string_agg(dname,',') into v_alldcs from axpdc where tstruct = ptransid
		and not exists(select 1 from unnest(string_to_array( pexcdc,',')) val where val = dname);	
	else		
		with a as(select unnest(string_to_array('dc1,dc2,dc3',','))  fname from dual)
		select fname into v_alldcs  from a where not exists(select 1 from unnest(string_to_array(pexcdc,',')) val where val = a.fname);
	end if;



for rec in select unnest(string_to_array(v_alldcs,',')) dcname 
loop

	select count(1) into v_onlydcselect
	from axpflds where tstruct= ptransid and dcname=rec.dcname and savevalue='T' 
	and exists (select 1 from unnest(string_to_array( pincflds,',')) val where val = fname);

	if v_onlydcselect > 0 then
		select concat(tablename,'=',string_agg(str,'|'))  into v_allflds From(
		select tablename, concat(fname,'~',srckey,'~',srctf,'~',srcfld,'~',allowempty) str
		from axpflds where tstruct=ptransid and dcname=rec.dcname and savevalue='T' 
		and exists (select 1 from unnest(string_to_array( pincflds,',')) val where val = fname)
		and not exists(select 1 from unnest(string_to_array( pexcflds,',')) val where val = fname) 		
		order by dcname ,ordno)a group by a.tablename;
	else
		select concat(tablename,'=',string_agg(str,'|'))  into v_allflds From(
		select tablename, concat(fname,'~',srckey,'~',srctf,'~',srcfld,'~',allowempty) str
		from axpflds where tstruct=ptransid and dcname=rec.dcname and savevalue='T' 
		and not exists(select 1 from unnest(string_to_array( pexcflds,',')) val where val = fname) 		
		order by dcname ,ordno)a group by a.tablename;
	end if; 
	
	FOR rec1 IN
    		select unnest(string_to_array(v_allflds,'^')) dcdtls
    		loop	
    			v_fldname_dctablename := split_part(rec1.dcdtls,'=',1);
				v_fldname_dcflds := split_part(rec1.dcdtls,'=',2);
			
			if v_fldname_dctablename!=v_primarydctable then
						v_fldname_dcjoinsary := array_append(v_fldname_dcjoinsary,concat('left join ',v_fldname_dctablename,' on ',v_primarydctable,'.',v_primarydctable,'id=',v_fldname_dctablename,'.',v_primarydctable,'id') );						
					end if;
					v_fldname_dctables := array_append(v_fldname_dctables,v_fldname_dctablename);

			FOR rec2 IN
    		select unnest(string_to_array(v_fldname_dcflds,'|')) fldname    		    	       			
				loop		    	
					v_fldname_col := split_part(rec2.fldname,'~',1);
					v_fldname_normalized := split_part(rec2.fldname,'~',2);
					v_fldname_srctbl := split_part(rec2.fldname,'~',3);
					v_fldname_srcfld := split_part(rec2.fldname,'~',4);	
					v_fldname_allowempty := split_part(rec2.fldname,'~',5);
			    
				
					
					if v_fldname_normalized ='F' then 
						v_fldnamesary := array_append(v_fldnamesary,concat(v_fldname_dctablename,'.',v_fldname_col)::varchar);
					elsif v_fldname_normalized ='T' then	
						v_fldnamesary := array_append(v_fldnamesary,concat(v_fldname_col,'.',v_fldname_srcfld,' ',v_fldname_col)::varchar);	
						v_fldname_joinsary := array_append(v_fldname_joinsary,concat(case when v_fldname_allowempty='F' then ' join ' else ' left join ' end,v_fldname_srctbl,' ',v_fldname_col,' on ',v_fldname_dctablename,'.',v_fldname_col,' = ',v_fldname_col,'.',v_fldname_srctbl,'id')::Varchar);
						v_fldname_normalizedtables := array_append(v_fldname_normalizedtables,lower(v_fldname_srctbl));
					end if;
								
			    end loop;
		   
			   end loop;
		   	v_sql := concat(' select ',v_primarydctable,'.',v_primarydctable,'id recordid,',array_to_string(v_fldnamesary,','),' from ',v_primarydctable,' ',
		   			 array_to_string(v_fldname_dcjoinsary,' '),' ',array_to_string(v_fldname_joinsary,' '),' where ',v_keyfld_cnd);--,' and ',pcond);


			dcno := rec.dcname;
			dcsql := v_sql;
			return next;
			v_fldnamesary:= v_emptyary;
		   				v_fldname_joinsary:= v_emptyary;	   				
		   				v_fldname_dcjoinsary:= v_emptyary;	

end loop; 

 
return;
	
END; 
$$;


ALTER FUNCTION agilespacefresh.fn_permissions_getsqls(pmode character varying, ptransid character varying, pkeyfld character varying, pkeyvalue character varying, pcond text, pincdc character varying, pexcdc character varying, pincflds text, pexcflds text) OWNER TO agilespace;

--
-- TOC entry 839 (class 1255 OID 2004710)
-- Name: fn_permissions_grpmaster(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_permissions_grpmaster(pgrpname character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
v_altersql text; 
r record;
begin
	

for r in select a.ftransid,d.tablename from axgrouptstructs a join axpdc d on a.ftransid = d.tstruct and d.dcno =1 
 loop 

	v_altersql :='alter table '||r.tablename||' add axg_'||pgrpname||' varchar(4000)';
	execute v_altersql;

end loop;
 
return 'T';

exception when others then return 'F';


end;

$$;


ALTER FUNCTION agilespacefresh.fn_permissions_grpmaster(pgrpname character varying) OWNER TO agilespace;

--
-- TOC entry 840 (class 1255 OID 2004711)
-- Name: fn_ruledef_formula(text, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_ruledef_formula(formula text, applicability character varying, nexttask character varying, nexttask_true character varying, nexttask_false character varying, pegversion character varying DEFAULT 'v1'::character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
declare
    v_formula text;

begin

if pegversion = 'v1' then
-----Used in Rule definition conditions
with a as(
select
	regexp_split_to_table(formula, E'~') cols),
b as(select 	string_agg(case when split_part( cols, '|', 2) not in('In','Not in') then  substring(substring(split_part(cols, '|', 1), position('-(' in split_part(cols, '|', 1))+ 2, abs((position('-(' in split_part(cols, '|', 1) )+ 2) - length(substring(split_part(cols, '|', 1), 1, length(split_part(cols, '|', 1)))))),2) else '' end||' '||
	case when split_part( cols, '|', 2)='Equal to' then '='
	when split_part( cols, '|', 2)='Not equal to' then '#'
	when split_part( cols, '|', 2)='Greater than' then '>'
	when split_part( cols, '|', 2)='Lesser than' then '<' 
	when split_part( cols, '|', 2) in('In','Not in') then 'StringPOS('||substring(substring(split_part(cols, '|', 1), position('-(' in split_part(cols, '|', 1))+ 2, abs((position('-(' in split_part(cols, '|', 1) )+ 2) - length(substring(split_part(cols, '|', 1), 1, length(split_part(cols, '|', 1)))))),2)||','
	end||' '||
	case when substring(substring(split_part(cols, '|', 1), position('-(' in split_part(cols, '|', 1))+ 2, abs((position('-(' in split_part(cols, '|', 1) )+ 2) - length(substring(split_part(cols, '|', 1), 1, length(split_part(cols, '|', 1)))))),1,1) in('c','t')
	then case when substring(trim(split_part( cols, '|', 3)),1,1)!=':' then concat('{',split_part( cols, '|', 3),'}') else replace(split_part( cols, '|', 3),':',' ') end end ||
	case when split_part( cols, '|', 2)='In' then ') # -1' when split_part( cols, '|', 2)='Not in' then ') = -1' else '' end||' '||
	case when split_part( cols, '|', 4)='And' then '&'
	when split_part( cols, '|', 4)='Or' then '|' 
	when split_part( cols, '|', 4)='And(' then '&('
	when split_part( cols, '|', 4)='Or(' then '|('
	else split_part( cols, '|', 4) end ,' ') cndtxt from a)
	select 
case when applicability ='T' then 'iif('||cndtxt||',{T},{F})' 
when nexttask='T' then 'iif('||cndtxt||',{'||nexttask_true||'},'||'{'||nexttask_false||'})'
else cndtxt end  into v_formula from b;

-----Used for PEG condition based on task params

elseif pegversion = 'v2' then

with a as(
select
	regexp_split_to_table(formula, E'~') cols),
b as(select 	string_agg(case when split_part( cols, '|', 2) not in('In','Not in') then  substring(split_part(cols, '|', 1), position('-(' in split_part(cols, '|', 1))+ 2, abs((position('-(' in split_part(cols, '|', 1) )+ 2) - length(substring(split_part(cols, '|', 1), 1, length(split_part(cols, '|', 1)))))) else '' end||' '||
	case when split_part( cols, '|', 2)='Equal to' then '='
	when split_part( cols, '|', 2)='Not equal to' then '#'
	when split_part( cols, '|', 2)='Greater than' then '>'
	when split_part( cols, '|', 2)='Lesser than' then '<' 
	when split_part( cols, '|', 2) in('In','Not in') then 'StringPOS('||substring(split_part(cols, '|', 1), position('-(' in split_part(cols, '|', 1))+ 2, abs((position('-(' in split_part(cols, '|', 1) )+ 2) - length(substring(split_part(cols, '|', 1), 1, length(split_part(cols, '|', 1))))))||','
	end||' '||
	case when substring(substring(substring(split_part(cols, '|', 1), position('-(' in split_part(cols, '|', 1))+ 2, abs((position('-(' in split_part(cols, '|', 1) )+ 2) - length(substring(split_part(cols, '|', 1), 1, length(split_part(cols, '|', 1)))))),position('.' in substring(split_part(cols, '|', 1), position('-(' in split_part(cols, '|', 1))+ 2, abs((position('-(' in split_part(cols, '|', 1) )+ 2) - length(substring(split_part(cols, '|', 1), 1, length(split_part(cols, '|', 1)))))))+1),1,1) in('c','t')
	then concat('{',split_part( cols, '|', 3),'}') else split_part( cols, '|', 3) end||
	case when split_part( cols, '|', 2)='In' then ') # -1' when split_part( cols, '|', 2)='Not in' then ') = -1' else '' end ||' '||
	case when split_part( cols, '|', 4)='And' then '&'
	when split_part( cols, '|', 4)='Or' then '|'
	when split_part( cols, '|', 4)='And(' then '&('
	when split_part( cols, '|', 4)='Or(' then '|('	
	else split_part( cols, '|', 4) end,' ') cndtxt
	 from a)
	select 'iif('||cndtxt||',{T},{F})' into v_formula from b;

end if;

return v_formula;
end;

$$;


ALTER FUNCTION agilespacefresh.fn_ruledef_formula(formula text, applicability character varying, nexttask character varying, nexttask_true character varying, nexttask_false character varying, pegversion character varying) OWNER TO agilespace;

--
-- TOC entry 831 (class 1255 OID 2004712)
-- Name: fn_ruledef_table_genaxscript(character varying, character varying, numeric); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_ruledef_table_genaxscript(pcmd character varying, ptbldtls character varying, pcnd numeric) RETURNS text
    LANGUAGE plpgsql
    AS $$
declare
    v_formula varchar(2000);

   BEGIN

if pcnd=1 then 	   

	select concat(pcmd,' ',
	string_agg(case when split_part( fname, '|', 2) not in('In','Not in') then  substring(substring(split_part(fname, '|', 1), position('-(' in split_part(fname, '|', 1))+ 2, abs((position('-(' in split_part(fname, '|', 1) )+ 2) - length(substring(split_part(fname, '|', 1), 1, length(split_part(fname, '|', 1)))))),2) else '' end||' '||
	case  when split_part(fname, '|', 2)='Equal to' then ' = ' 
	when split_part(fname, '|', 2)='Not equal to' then ' # ' 
	when split_part(fname, '|', 2)='Greater than' then ' > ' 
	when split_part(fname, '|', 2)='Lesser than' then ' < ' 
	when split_part( fname, '|', 2) in('In','Not in') then 'StringPOS('||substring(substring(split_part(fname, '|', 1), position('-(' in split_part(fname, '|', 1))+ 2, abs((position('-(' in split_part(fname, '|', 1) )+ 2) - length(substring(split_part(fname, '|', 1), 1, length(split_part(fname, '|', 1)))))),2)||','
	end ||' '||
	case when substring(substring(split_part(fname, '|', 1), position('-(' in split_part(fname, '|', 1))+ 2, abs((position('-(' in split_part(fname, '|', 1) )+ 2) - length(substring(split_part(fname, '|', 1), 1, length(split_part(fname, '|', 1)))))),1,1) in('c','t')
	then concat('{',split_part( fname, '|', 3),'}') else split_part( fname, '|', 3) end ||
	case when split_part( fname, '|', 2)='In' then ') # -1' when split_part( fname, '|', 2)='Not in' then ') = -1' else '' end 	
	||' '||
	case split_part(fname, '|', 4) when 'And' then ' & ' when 'Or' then ' | ' when 'And(' then ' & (' when 'Or(' then ' | (' else split_part(fname, '|', 4) end,'')) into v_formula 
	from(select unnest(string_to_array( ptbldtls, '~')) fname)a ;
	
elseif pcnd =2 then 
	select case when pcmd ='Show' then concat('Axunhidecontrols({', fnames ,'})') 
	when pcmd ='Hide' then concat('Axhidecontrols({', fnames ,'})')
	when pcmd ='Enable' then concat('Axenablecontrols({', fnames ,'})')
	when pcmd ='Disable' then concat('Axdisablecontrols({', fnames ,'})')
	when pcmd ='Mandatory' then concat('AxAllowEmpty({', fnames ,'},{F})')
	when pcmd ='Non mandatory' then concat('AxAllowEmpty({', fnames ,'},{T})') end  into v_formula from 
	(select string_agg(substring(split_part(fname, '|', 1), position('-(' in split_part(fname, '|', 1))+ 2, abs((position('-(' in split_part(fname, '|', 1) )+ 2) - length(substring(split_part(fname, '|', 1), 1, length(split_part(fname, '|', 1)))))),',') fnames
	from(select unnest(string_to_array(ptbldtls, '~')) fname )a)b;

elseif pcnd in(3,31) then 
	select case when pcmd='Mask few characters' then concat('AxMask({',substring(split_part(fname, '|', 1), position('-(' in split_part(fname, '|', 1))+ 2, abs((position('-(' in split_part(fname, '|', 1) )+ 2) - length(substring(split_part(fname, '|', 1), 1, length(split_part(fname, '|', 1)))))),'}',
	',{',split_part(fname, '|', 2),'},{',
	split_part(fname, '|', 3),'~',
	split_part(fname, '|', 4),'})') 
	when pcmd ='Mask all characters' then concat('AxMask({',substring(split_part(fname, '|', 1), position('-(' in split_part(fname, '|', 1))+ 2, abs((position('-(' in split_part(fname, '|', 1) )+ 2) - length(substring(split_part(fname, '|', 1), 1, length(split_part(fname, '|', 1)))))),
	'},{',split_part(fname, '|', 2),'},{all})') 
	end  into v_formula
	from(select unnest(string_to_array(ptbldtls, '~')) fname )a;

elseif pcnd=4 then

	select string_agg(concat('SetValue({',substring(split_part(fname, '|', 1), position('-(' in split_part(fname, '|', 1))+ 2, abs((position('-(' in split_part(fname, '|', 1) )+ 2) - length(substring(split_part(fname, '|', 1), 1, length(split_part(fname, '|', 1)))))),
	'},1,{',split_part(fname, '|', 2),'})'),chr(10)) into v_formula
	from(select unnest(string_to_array(ptbldtls, '~')) fname )a;
	
	
elseif pcnd=5 then  
	select case when pcmd='Show message' then concat('ShowMessage({',split_part(fname, '|', 1),'},{Simple},{})')
	when pcmd='Show error' then concat('ShowMessage({',split_part(fname, '|', 1),'},{Exception},{})') end  into v_formula
	from(select unnest(string_to_array(ptbldtls, '~')) fname )a;

elseif pcnd=6 then 
	v_formula := pcmd;

------------used in PEG for Set value
elseif pcnd=7 then 
	select string_agg(concat('SetValue({',substring(split_part(fname, '|', 1), position('-(' in split_part(fname, '|', 1))+ 2, abs((position('-(' in split_part(fname, '|', 1) )+ 2) - length(substring(split_part(fname, '|', 1), 1, length(split_part(fname, '|', 1)))))),
	'},1,{',split_part(fname, '|', 2),'})'),chr(10)) into v_formula
	from(select unnest(string_to_array(ptbldtls, '~')) fname )a;

end if;
	
RETURN v_formula;
END;
$$;


ALTER FUNCTION agilespacefresh.fn_ruledef_table_genaxscript(pcmd character varying, ptbldtls character varying, pcnd numeric) OWNER TO agilespace;

--
-- TOC entry 832 (class 1255 OID 2004713)
-- Name: fn_ruledef_tablefield(numeric); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_ruledef_tablefield(pcnd numeric) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
v_json varchar;

BEGIN  

/*
1	If,Else if
2	Enable,Show,Hide,Disable,Mandatory,Non mandatory
3	Mask all characters,Mask few characters
4	Set value to field
5	Show message,Show error
6	Else
*/
	
if pcnd = 1 then --If , Else if 	 

select '{"props":{"type":"table","colcount":"4","rowcount":"1","addrow":"t","deleterow":"t","valueseparator":"|","rowseparator":"~"},"columns":{	"1":{"caption":"Condition field","name":"cfld","value":"","source":"cndfldcaption","exp":"","vexp":""},"2":{"caption":"Operator","name":"opr","value":"","source":"formula_opr","exp":"","vexp":""},"3":{"caption":"Value","name":"fldvalue","value":"","source":"","exp":"","vexp":""},"4":{"caption":"Condition","name":"ccnd","value":"","source":"formula_andor","exp":"","vexp":""}}}'  into v_json;
		
		
 
elseif pcnd = 2 then  --Enable,Disable,Show,Hide,Mandatory,Non mandatory

select '{"props":{"type":"table","colcount":"1","rowcount":"1","addrow":"t","deleterow":"t","valueseparator":"|","rowseparator":"~"},"columns":{"1":{"caption":"Apply rule on","name":"cndfld","value":"","source":"fctlfldcaption","exp":"","vexp":""}}}' into v_json;

elseif pcnd = 4 then --Set value to field

select '{"props":{"type":"table","colcount":"2","rowcount":"1","addrow":"t","deleterow":"t","valueseparator":"|","rowseparator":"~"},"columns":{"1":{"caption":"Set value to field","name":"cndfld","value":"","source":"setvalueflds","exp":"","vexp":""},"2":{"caption":"Value","name":"sval","value":"","source":"","exp":"","vexp":""}}}'  into v_json;

elseif pcnd=5 then -- Show message,Show error

select '{"props":{"type":"table","colcount":"1","rowcount":"1","addrow":"f","deleterow":"f","valueseparator":"|","rowseparator":"~"},"columns":{"1":{"caption":"Message",	"name":"cndfld","value":"","source":"","exp":"","vexp":""}}}'  into v_json;

end if;

  RETURN v_json;
 
END;
$$;


ALTER FUNCTION agilespacefresh.fn_ruledef_tablefield(pcnd numeric) OWNER TO agilespace;

--
-- TOC entry 843 (class 1255 OID 2004714)
-- Name: fn_ruledefv3_masking(text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_ruledefv3_masking(pmaskstring text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
v_maskstring varchar;
v_maskstringary text[] DEFAULT  ARRAY[]::text[];
v_maskfldcap varchar;
v_maskfldname varchar;
v_masktype varchar;
v_maskchar varchar;
v_maskfirstnchar varchar;
v_masklastnchar varchar;
rec record;
begin

for rec in select unnest(string_to_array(pmaskstring, '~')) maskstr
loop
	v_maskfldcap := split_part(rec.maskstr,'|',1);	
	v_maskfldname := substring(unnest(string_to_array( v_maskfldcap , ',')), position('-(' in unnest(string_to_array( v_maskfldcap , ',')))+ 2, abs((position('-(' in unnest(string_to_array( v_maskfldcap , ',')))+ 2) - length(substring(unnest(string_to_array( v_maskfldcap , ',')), 1, length(unnest(string_to_array( v_maskfldcap , ',')))))));	
	v_masktype := split_part(rec.maskstr,'|',2);
	v_maskchar := split_part(rec.maskstr,'|',3);
	v_maskfirstnchar := split_part(rec.maskstr,'|',4);
	v_masklastnchar := split_part(rec.maskstr,'|',5);

	v_maskstring := case when v_masktype ='Mask few characters' 
					then  concat('AxMask({',v_maskfldname,'},{',v_maskchar,'},{',v_maskfirstnchar,'~',v_masklastnchar,'})')
					else concat('AxMask({',v_maskfldname,'},{',v_maskchar,'},{all})') end;

	v_maskstringary := array_append(v_maskstringary,v_maskstring);
	
end loop;
	
return array_to_string(v_maskstringary,chr(10)) ;
	
end;
$$;


ALTER FUNCTION agilespacefresh.fn_ruledefv3_masking(pmaskstring text) OWNER TO agilespace;

--
-- TOC entry 844 (class 1255 OID 2004715)
-- Name: fn_ruledefv3_scriptgen(character varying, text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_ruledefv3_scriptgen(pcmd character varying, pfldstring text) RETURNS text
    LANGUAGE plpgsql
    AS $$
declare
v_fldnames text;
BEGIN  

  select string_agg(fname, ',') into v_fldnames from (select	substring(unnest(string_to_array( pfldstring , ',')), position('-(' in unnest(string_to_array( pfldstring , ',')))+ 2, abs((position('-(' in unnest(string_to_array( pfldstring , ',')))+ 2) - length(substring(unnest(string_to_array( pfldstring , ',')), 1, length(unnest(string_to_array( pfldstring , ',')))))))fname where pfldstring is not null) a;

if pcmd='Mandatory' then  
return concat('AxAllowEmpty({', v_fldnames,'},{F})');
elsif pcmd='NonMandatory' then
return concat('AxAllowEmpty({', v_fldnames,'},{T})');
else
return concat(pcmd,'({', v_fldnames,'})');
end if;
 
END;
$$;


ALTER FUNCTION agilespacefresh.fn_ruledefv3_scriptgen(pcmd character varying, pfldstring text) OWNER TO agilespace;

--
-- TOC entry 845 (class 1255 OID 2004716)
-- Name: fn_stringcomparision(text, text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_stringcomparision(pstring1 text, pstring2 text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
   v_results text;
   v_added text;
   v_removed text;
begin

	case when length(pstring1) = 0  and length(pstring2) != 0 then
			
			v_results := '<span style="font-weight:bold;">'||'Added : '||'</span><br/>'||pstring2||'<br/>';		
				
		 when length(pstring1) != 0  and length(pstring2) = 0 then
		 				 
	    	v_results := '<span style="font-weight:bold;">'||'Removed : '||'</span><br/>'||pstring1||'<br/>';
		 					 
		 when length(pstring1) != 0  and length(pstring2) != 0 then 
		 			
		 	select replace(replace(REPLACE(array_agg(strings)::text,'{',''),'}',''),'"','') into v_removed   		 	
		 	from (
			select '{'||a.strings||'}' as strings from  
		 	(select unnest (string_to_array( pstring1 ,',')) as strings from dual) a
		 	where a.strings not in 
		 	(select unnest (string_to_array( pstring2,',')) as strings from dual b) 
		 	) a ;
		 
		 	select replace(replace(REPLACE(array_agg(strings)::text,'{',''),'}',''),'"','') into v_added    		 	
		 	from (
			select '{'||a.strings||'}' as strings from  
		 	(select unnest (string_to_array( pstring2 ,',')) as strings from dual) a
		 	where a.strings not in 
		 	(select unnest (string_to_array( pstring1,',')) as strings from dual b) 
		 	) a ;
		 		 
			v_results := '<span style="font-weight:bold;">'||'Removed : '||'</span><br/>'||v_removed||'<br/>'||
						 '<span style="font-weight:bold;">'||'Added : '||'</span><br/>'||v_added||'<br/>';
		 		 			 	
	else
			v_results := 'no result';
	end case;		 
		 
   RETURN v_results;
END;
$$;


ALTER FUNCTION agilespacefresh.fn_stringcomparision(pstring1 text, pstring2 text) OWNER TO agilespace;

--
-- TOC entry 846 (class 1255 OID 2004717)
-- Name: fn_tconfiguration(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_tconfiguration() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
declare
	v_cnt numeric(2);

v_sql varchar(4000);

begin 
	

if (TG_OP = 'INSERT') then

select coalesce(count(table_name), 0) into v_cnt
from information_schema.tables
where lower(table_name) = lower( 'axpconfigs' || chr(95)|| new.structtransid )
and lower(table_schema)= current_schema();

if v_cnt = 0 then 
v_sql := 'create table axpconfigs' || chr(95)|| new.structtransid || ' ( configname varchar(30),cvalue varchar(2000),condition varchar(240))' ;

execute v_sql;
end if;

if new.cv_searchflds is not null then 
v_sql = 'insert into axpconfigs' || chr(95)|| new.structtransid || ' ( configname,cvalue,condition ) values (''' || new.configname1 || ''',''' || new.cv_searchflds || ''',null)';
execute v_sql;
end if;

if new.cv_groupbuttons is not null then 
v_sql = 'insert into axpconfigs' || chr(95)|| new.structtransid || ' ( configname,cvalue,condition ) values (''' || new.configname2 || ''',''' || new.cv_groupbuttons || ''',null)';
execute v_sql;
end if;

if new.cv_htmlprints is not null then 
v_sql = 'insert into axpconfigs' || chr(95)|| new.structtransid || ' ( configname,cvalue,condition ) values (''' || new.configname3 || ''',''' || new.cv_htmlprints || ''',null)';
execute v_sql;
end if;

if new.cv_masterflds is not null then 
v_sql = 'insert into axpconfigs' || chr(95)|| new.structtransid || ' ( configname,cvalue,condition ) values (''' || new.configname4 || ''',''' || new.cv_masterflds || ''',null)';
execute v_sql;
end if;

return new;

end if;

if (TG_OP = 'UPDATE') then 

v_sql = 'delete from axpconfigs' || chr(95)|| old.structtransid;
execute v_sql;

if new.cv_searchflds is not null then
v_sql = 'insert into axpconfigs' || chr(95)|| new.structtransid || ' ( configname,cvalue,condition ) values (''' || new.configname1 || ''',''' || new.cv_searchflds || ''',null)';
execute v_sql;
end if;

if new.cv_groupbuttons is not null then 
v_sql = 'insert into axpconfigs' || chr(95)|| new.structtransid || ' ( configname,cvalue,condition ) values (''' || new.configname2 || ''',''' || new.cv_groupbuttons || ''',null)';
execute v_sql;
end if;

if new.cv_htmlprints is not null then 
v_sql = 'insert into axpconfigs' || chr(95)|| new.structtransid || ' ( configname,cvalue,condition ) values (''' || new.configname3 || ''',''' || new.cv_htmlprints || ''',null)';
execute v_sql;
end if;

if new.cv_masterflds is not null then 
v_sql = 'insert into axpconfigs' || chr(95)|| new.structtransid || ' ( configname,cvalue,condition ) values (''' || new.configname4 || ''',''' || new.cv_masterflds || ''',null)';
execute v_sql;
end if;


return new;

end if;

if (TG_OP = 'DELETE') then 
v_sql = 'delete from axpconfigs' || chr(95)|| old.structtransid;
execute v_sql;
v_cnt = 2 ;

return new;

end if;



end;

$$;


ALTER FUNCTION agilespacefresh.fn_tconfiguration() OWNER TO agilespace;

--
-- TOC entry 848 (class 1255 OID 2004718)
-- Name: fn_tstruct_getdcrecid(character varying, numeric, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_tstruct_getdcrecid(ptransid character varying, precordid numeric, pdcstring character varying) RETURNS TABLE(dcname character varying, rowno numeric, recordid numeric)
    LANGUAGE plpgsql
    AS $$
declare 
v_rec record;
v_rec1 record;
v_sql text;
v_dcname varchar;
v_rowstring varchar;
v_dctable varchar;
v_isgrid varchar;
v_primarydctable varchar;
begin


select tablename into v_primarydctable from axpdc where tstruct=ptransid and dname='dc1';

for v_rec in select unnest(string_to_array(pdcstring,',')) str from dual
Loop
	v_dcname := v_rec.str;
	

	select tablename,asgrid into v_dctable,v_isgrid from axpdc where tstruct=ptransid and dname=v_dcname;

	if v_isgrid = 'F' then 

		v_sql := 'select '''||v_dcname||''' dcname,0 rowno,'||v_dctable||'id recordid from '||v_dctable||' where '||v_primarydctable||'id::numeric='||precordid;
	else 
		v_sql := 'select '''||v_dcname||''' dcname,'||v_dctable||'row rowno,'||v_dctable||'id recordid from '||v_dctable||' where '||v_primarydctable||'id::numeric='||precordid;
	end if;

		for v_rec1 in execute v_sql 
		Loop 		
			dcname :=v_rec1.dcname;
			rowno :=v_rec1.rowno;
			recordid :=v_rec1.recordid;		
			return next;
		end loop; 
	

		 		
end loop;

return;


	
END; 
$$;


ALTER FUNCTION agilespacefresh.fn_tstruct_getdcrecid(ptransid character varying, precordid numeric, pdcstring character varying) OWNER TO agilespace;

--
-- TOC entry 849 (class 1255 OID 2004719)
-- Name: fn_updatdsign(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.fn_updatdsign() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
	BEGIN

        -- Work out the increment/decrement amount(s).
        IF (TG_OP = 'INSERT') THEN 
		
		NEW.USERNAME = NEW.PUSERNAME; 
		new.rolename = new.prolename;
		
		return new;
	end if;
		
	IF (TG_OP = 'UPDATE') THEN 
		
		NEW.USERNAME = NEW.PUSERNAME; 
		new.rolename = new.prolename;
		
		return new;
	end if;
		
end; 
$$;


ALTER FUNCTION agilespacefresh.fn_updatdsign() OWNER TO agilespace;

--
-- TOC entry 850 (class 1255 OID 2004720)
-- Name: func_return_hyperlink(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.func_return_hyperlink() RETURNS character varying
    LANGUAGE plpgsql
    AS $$
DECLARE
mHyperLink TEXT;
begin
	if pHREForClass = 'class' then 
		mHyperLink = '<div><a class="menu-link"'||
					replace('o-n-c-l-i-c-k' :: text,'-','')
					||'="parent.LoadIframe(''htmlPages.aspx?load=1705649911521&taskid='||pReference||''')"><span class="menu-icon"><i class="setting-icon material-icons">task
			</i></span></a></div>';
	else 
		mHyperLink = '<div><a href="#" class="menu-link" '||
					replace('o-n-c-l-i-c-k' :: text,'-','')
					||'="javascript:createPopup(''htmlPages.aspx?load=1706098649781&transid=taskf&keyvalue='||pReference||''')"><span class="menu-icon"><i class="setting-icon material-icons"><span class="material-symbols-outlined text-primary">
				cloud_upload</span></i></span></a></div>' ;			
	end if;
    RETURN mHyperLink;
END;
$$;


ALTER FUNCTION agilespacefresh.func_return_hyperlink() OWNER TO agilespace;

--
-- TOC entry 851 (class 1255 OID 2004721)
-- Name: generate_table_json(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.generate_table_json(taskcategory character varying) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
    result TEXT;
BEGIN
    SELECT 
        '{ "props": { "type": "table", "colcount": "' || COUNT(*) || '", "rowcount": "1", "addrow": "t", "deleterow": "t", "valueseparator": "|", "rowseparator": "^" }, "columns": {' ||
        string_agg(
            '"' || rn || '": { "caption": "' || name || '", "name": "' || name || '", "value": "", "source": "' || 
            REPLACE(COALESCE(drodownval, ''), ',', ';') || '", "exp": "", "vexp": "" }',
            ', '
        ) ||
        '} }'
    INTO result
    FROM (
        SELECT 
            row_number() OVER () AS rn, 
            a.name,
            a.drodownval
        FROM tasktype_more a
        JOIN tasktype b ON a.tasktypeid = b.tasktypeid
        WHERE b.type = taskcategory
    ) AS subquery;
    RETURN result;
END;
$$;


ALTER FUNCTION agilespacefresh.generate_table_json(taskcategory character varying) OWNER TO agilespace;

--
-- TOC entry 852 (class 1255 OID 2004722)
-- Name: get_assignment_html(text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.get_assignment_html(p_username text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
    rec record;
    html_output text := '';
BEGIN
    -- Build the HTML header and table structure
    html_output := '<html>
  <head>
    <style>
      table { border-collapse: collapse; width: 100%; }
      th, td { border: 1px solid #ccc; padding: 5px; text-align: left; }
      th { background-color: #eee; }
    </style>
  </head>
  <body>
    <table>
      <tr>
        <th>Task Name</th>
        <th>Assignment</th>
      </tr>';
      
    -- Execute the query and loop through the results
    FOR rec IN
      SELECT DISTINCT ON (a.taskname)
          a.taskname,
          CONCAT(
            initcap(a.assignby), ' assigned task on ', TO_CHAR(a.assigneddate, 'YYYY-MM-DD'),
            CASE 
              WHEN t.rescheduledate IS NOT NULL 
              THEN ' and ' || initcap(a.assignto) || ' rescheduled to ' || TO_CHAR(t.rescheduledate, 'YYYY-MM-DD')
              ELSE ''
            END
          ) AS Assignment
      FROM taskf_hdr a
      LEFT JOIN taskinformdelay_hdr t ON t.taskname = a.taskname
      LEFT JOIN (
          SELECT taskname, MIN(starttime) AS starttime
          FROM taskstart_hdr 
          GROUP BY taskname
      ) th ON a.taskname = th.taskname
      LEFT JOIN (
          SELECT taskname, MAX(completiontime) AS completiontime
          FROM taskcomplete_hdr 
          GROUP BY taskname
      ) t1 ON a.taskname = t1.taskname
      LEFT JOIN (
          SELECT taskname, MIN(onholdstarttime) AS onholdstarttime, MAX(onholdendtime) AS onholdendtime
          FROM taskputonhold_hdr
          GROUP BY taskname
      ) t2 ON a.taskname = t2.taskname
      LEFT JOIN taskaccepthdr ta ON a.taskname = ta.taskname 
      LEFT JOIN drop1 d ON a.taskname = d.taskname 
      WHERE a.assignto LIKE '%' || p_username || '%'
      ORDER BY a.taskname
    LOOP
        html_output := html_output || '<tr>';
        html_output := html_output || '<td>' || COALESCE(rec.taskname, '') || '</td>';
        -- The "Assignment" cell shows "Assignment Details" but the full details are in the title attribute
        html_output := html_output || '<td title="' || COALESCE(rec.Assignment, 'Assignment Details') || '">Assignment Details</td>';
        html_output := html_output || '</tr>';
    END LOOP;
    
    html_output := html_output || '</table></body></html>';
    RETURN html_output;
END;
$$;


ALTER FUNCTION agilespacefresh.get_assignment_html(p_username text) OWNER TO agilespace;

--
-- TOC entry 853 (class 1255 OID 2004723)
-- Name: get_columns_name(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.get_columns_name(p_selectquery character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$ 
declare 
    l_result  varchar(32767);
begin
	drop table temp_testtable ;
	execute 'Create table temp_testtable as '|| p_selectQuery;
	
	SELECT string_agg(COLUMN_NAME,',') into l_result FROM information_schema.COLUMNS WHERE TABLE_NAME = 'temp_testtable';
	   
    return  l_result;
end; $$;


ALTER FUNCTION agilespacefresh.get_columns_name(p_selectquery character varying) OWNER TO agilespace;

--
-- TOC entry 841 (class 1255 OID 2004724)
-- Name: get_columns_names(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.get_columns_names(p_selectquery character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$ 
declare 
    l_result  varchar(32767);
begin
	drop table temp_testtable ;
	execute 'Create table temp_testtable as '|| p_selectQuery;
	
	SELECT string_agg(COLUMN_NAME,',') into l_result FROM information_schema.COLUMNS 
	WHERE TABLE_NAME = 'temp_testtable';
	   
    return  l_result;
end; $$;


ALTER FUNCTION agilespacefresh.get_columns_names(p_selectquery character varying) OWNER TO agilespace;

--
-- TOC entry 854 (class 1255 OID 2004725)
-- Name: get_last_date(text, text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.get_last_date(period text, td text DEFAULT NULL::text) RETURNS date
    LANGUAGE plpgsql
    AS $$
BEGIN
    CASE 
        WHEN period = 'Today' THEN
            RETURN CURRENT_DATE;
        WHEN period = 'This week' THEN
            RETURN (DATE_TRUNC('week', CURRENT_DATE) + INTERVAL '6 days')::DATE;
        WHEN period = 'Last week' THEN
            RETURN (DATE_TRUNC('week', CURRENT_DATE) - INTERVAL '1 week' + INTERVAL '6 days')::DATE;
        WHEN period = 'This Month' THEN
            RETURN (DATE_TRUNC('MONTH', CURRENT_DATE) + INTERVAL '1 MONTH' - INTERVAL '1 day')::DATE;
        WHEN period = 'Last Month' THEN
            RETURN (DATE_TRUNC('MONTH', CURRENT_DATE) - INTERVAL '1 day')::DATE;
        WHEN period = 'This year' THEN
            RETURN (DATE_TRUNC('YEAR', CURRENT_DATE) + INTERVAL '1 YEAR' - INTERVAL '1 day')::DATE;
        WHEN period = 'Last quarter' THEN
            RETURN (DATE_TRUNC('quarter', CURRENT_DATE) - INTERVAL '1 day')::DATE;
        WHEN period = 'This quarter' THEN
            RETURN (DATE_TRUNC('quarter', CURRENT_DATE) + INTERVAL '3 months' - INTERVAL '1 day')::DATE;
        WHEN period = 'Custom' THEN
            RETURN TO_DATE(td, 'DD/MM/YYYY');
        ELSE
            RAISE EXCEPTION 'Invalid period value: %', period;
    END CASE;
END;
$$;


ALTER FUNCTION agilespacefresh.get_last_date(period text, td text) OWNER TO agilespace;

--
-- TOC entry 855 (class 1255 OID 2004726)
-- Name: get_sql_columns(text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.get_sql_columns(sql_query text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
    column_names text;
    formatted_query text;
    param_names text[];
    i integer;
BEGIN
    -- Extract parameter names from the query
    select array_agg(cols) INTO param_names from (SELECT unnest(regexp_matches(sql_query, ':\w+', 'g'))cols)a;

    -- Replace parameter placeholders with NULL values if there are any parameters
    IF array_length(param_names, 1) > 0 THEN
        formatted_query := sql_query;
        FOR i IN 1..array_length(param_names, 1) LOOP
            formatted_query := replace(formatted_query, param_names[i], 'NULL');
        END LOOP;
    ELSE
        formatted_query := sql_query;
    END IF;
	
	

   EXECUTE format('CREATE TEMPORARY TABLE Ax_GetColumn_temp_table AS (%s) LIMIT 0', formatted_query);
   
    column_names := array_to_string(
        ARRAY(
            SELECT attname
            FROM pg_attribute
            WHERE attrelid = 'Ax_GetColumn_temp_table'::regclass
                AND attnum > 0
                AND NOT attisdropped
            ORDER BY attnum
        ),
        ','
    );

    -- Drop the temporary table
    EXECUTE 'DROP TABLE IF EXISTS Ax_GetColumn_temp_table';

    RETURN column_names;

	--exception when others then  RETURN  formatted_query; 
END; 
$$;


ALTER FUNCTION agilespacefresh.get_sql_columns(sql_query text) OWNER TO agilespace;

--
-- TOC entry 856 (class 1255 OID 2004727)
-- Name: get_task_details_html(text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.get_task_details_html(p_username text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
    rec record;
    html_output text := '';
BEGIN
    html_output := 
      '<html>
  <head>
    <style>
      table { border-collapse: collapse; width: 100%; }
      th, td { border: 1px solid #ccc; padding: 5px; text-align: left; }
      th { background-color: #eee; }
    </style>
  </head>
  <body>
    <table>
      <tr>
        <th>Task Name</th>
        <th>Status</th>
        <th>Task Description</th>
        <th>Expected Completion Date</th>
        <th>Assign By</th>
        <th>Assignment</th>
        <th>AX Row Options</th>
        <th>Due Date</th>
        <th>Reschedule Date</th>
        <th>On Hold Start</th>
        <th>On Hold End</th>
        <th>Delay By</th>
        <th>Start Time</th>
        <th>Completion Time</th>
        <th>Task Time</th>
        <th>Break Time</th>
        <th>Time Taken</th>
      </tr>';
      
    FOR rec IN
      SELECT DISTINCT ON (a.taskname) 
          a.taskname,
          a.status,
          a.taskdescription,
          a.expectedcompletiondate,
          a.assignby,
          CONCAT(
             initcap(a.assignby), ' assigned task on ', TO_CHAR(a.assigneddate, 'YYYY-MM-DD'),
             CASE 
                 WHEN t.rescheduledate IS NOT NULL 
                 THEN ' and ' || initcap(a.assignto) || ' rescheduled to ' || TO_CHAR(t.rescheduledate, 'YYYY-MM-DD')
                 ELSE ''
             END
          ) AS Assignment,
          'showd,Assignment details,script' AS axrowoptions,
          a.duedate,
          t.rescheduledate, 
          t2.onholdstarttime, 
          t2.onholdendtime,
          CASE 
              WHEN t.rescheduledate IS NOT NULL THEN 
                  (t.rescheduledate - a.duedate) || ' ' || 
                  CASE WHEN (a.duedate - t.rescheduledate) = 1 THEN 'day' ELSE 'days' END
              WHEN a.duedate IS NOT NULL AND a.duedate > a.expectedcompletiondate THEN 
                  (a.duedate - a.expectedcompletiondate) || ' ' || 
                  CASE WHEN (a.duedate - a.expectedcompletiondate) = 1 THEN 'day' ELSE 'days' END
              ELSE '0'
          END AS delay_by,
          th.starttime,
          t1.completiontime,
          TO_CHAR(
              CASE 
                  WHEN a.status = 'On hold' THEN 
                      (CAST(t2.onholdstarttime AS time) - CAST(th.starttime AS time))
                  WHEN a.status = 'Ongoing'
                      AND th.starttime IS NOT NULL
                      AND (d.droptime IS NOT NULL OR CURRENT_TIME IS NOT NULL) THEN 
                      (COALESCE(CAST(d.droptime AS time), CURRENT_TIME::time) - CAST(th.starttime AS time))
                  WHEN a.status = 'Dropped'
                      AND th.starttime IS NOT NULL
                      AND d.droptime IS NOT NULL THEN 
                      (CAST(d.droptime AS time) - CAST(th.starttime AS time))
                  WHEN a.status = 'Informed Delay' AND th.starttime IS NOT NULL THEN '0'
                  ELSE 
                      (CAST(t1.completiontime AS time) - CAST(th.starttime AS time))
              END, 'HH24:MI:SS'
          ) AS tasktime,
          TO_CHAR(
              COALESCE(
                  (CAST(t2.onholdendtime AS time) - CAST(t2.onholdstarttime AS time)), 
                  INTERVAL '0 minutes'
              ), 'HH24:MI:SS'
          ) AS breaktime, 
          TO_CHAR(
              CASE 
                  WHEN a.status = 'On hold' AND t2.onholdendtime IS NULL THEN
                      (CAST(t2.onholdstarttime AS time) - CAST(th.starttime AS time))
                  WHEN a.status = 'On hold' THEN 
                      ((CAST(t2.onholdendtime AS time) - CAST(th.starttime AS time)) - 
                       COALESCE((CAST(t2.onholdendtime AS time) - CAST(t2.onholdstarttime AS time)), INTERVAL '0 minutes'))
                  WHEN a.status = 'Ongoing'
                      AND th.starttime IS NOT NULL
                      AND (d.droptime IS NOT NULL OR CURRENT_TIME IS NOT NULL) THEN 
                      ((COALESCE(CAST(d.droptime AS time), CURRENT_TIME::time) - CAST(th.starttime AS time)) - 
                       COALESCE((CAST(t2.onholdendtime AS time) - CAST(t2.onholdstarttime AS time)), INTERVAL '0 minutes'))
                  WHEN a.status = 'Dropped'
                      AND th.starttime IS NOT NULL
                      AND d.droptime IS NOT NULL THEN 
                      ((CAST(d.droptime AS time) - CAST(th.starttime AS time)) - 
                       COALESCE((CAST(t2.onholdendtime AS time) - CAST(t2.onholdstarttime AS time)), INTERVAL '0 minutes'))
                  WHEN a.status = 'Informed Delay' AND th.starttime IS NOT NULL THEN '0'
                  ELSE 
                      ((CAST(t1.completiontime AS time) - CAST(th.starttime AS time)) - 
                       COALESCE((CAST(t2.onholdendtime AS time) - CAST(t2.onholdstarttime AS time)), INTERVAL '0 minutes'))
              END, 'HH24:MI:SS'
          ) AS Timetaken
      FROM taskf_hdr a
      LEFT JOIN taskinformdelay_hdr t ON t.taskname = a.taskname
      LEFT JOIN (
          SELECT taskname, MIN(starttime) AS starttime
          FROM taskstart_hdr 
          GROUP BY taskname
      ) th ON a.taskname = th.taskname
      LEFT JOIN (
          SELECT taskname, MAX(completiontime) AS completiontime
          FROM taskcomplete_hdr 
          GROUP BY taskname
      ) t1 ON a.taskname = t1.taskname
      LEFT JOIN (
          SELECT taskname, MIN(onholdstarttime) AS onholdstarttime, MAX(onholdendtime) AS onholdendtime
          FROM taskputonhold_hdr
          GROUP BY taskname
      ) t2 ON a.taskname = t2.taskname
      LEFT JOIN taskaccepthdr ta ON a.taskname = ta.taskname 
      LEFT JOIN drop1 d ON a.taskname = d.taskname 
      WHERE a.assignto LIKE '%' || p_username || '%'
      ORDER BY a.taskname
    LOOP
        html_output := html_output || '<tr>';
        html_output := html_output || '<td>' || COALESCE(rec.taskname, '') || '</td>';
        html_output := html_output || '<td>' || COALESCE(rec.status, '') || '</td>';
        html_output := html_output || '<td>' || COALESCE(rec.taskdescription, '') || '</td>';
        html_output := html_output || '<td>' || COALESCE(TO_CHAR(rec.expectedcompletiondate::date, 'YYYY-MM-DD'), '') || '</td>';
        html_output := html_output || '<td>' || COALESCE(rec.assignby, '') || '</td>';
        html_output := html_output || '<td title="' || COALESCE(rec.Assignment, 'Assignment Details') || '">Assignment Details</td>';
        html_output := html_output || '<td>' || COALESCE(rec.axrowoptions, '') || '</td>';
        html_output := html_output || '<td>' || COALESCE(TO_CHAR(rec.duedate::date, 'YYYY-MM-DD'), '') || '</td>';
        html_output := html_output || '<td>' || COALESCE(TO_CHAR(rec.rescheduledate::date, 'YYYY-MM-DD'), '') || '</td>';
        html_output := html_output || '<td>' || COALESCE(TO_CHAR(rec.onholdstarttime::time, 'HH24:MI:SS'), '') || '</td>';
        html_output := html_output || '<td>' || COALESCE(TO_CHAR(rec.onholdendtime::time, 'HH24:MI:SS'), '') || '</td>';
        html_output := html_output || '<td>' || COALESCE(rec.delay_by, '') || '</td>';
        html_output := html_output || '<td>' || COALESCE(TO_CHAR(rec.starttime::time, 'HH24:MI:SS'), '') || '</td>';
        html_output := html_output || '<td>' || COALESCE(TO_CHAR(rec.completiontime::time, 'HH24:MI:SS'), '') || '</td>';
        html_output := html_output || '<td>' || COALESCE(rec.tasktime, '') || '</td>';
        html_output := html_output || '<td>' || COALESCE(rec.breaktime, '') || '</td>';
        html_output := html_output || '<td>' || COALESCE(rec.Timetaken, '') || '</td>';
        html_output := html_output || '</tr>';
    END LOOP;
    
    html_output := html_output || '</table></body></html>';
    RETURN html_output;
END;
$$;


ALTER FUNCTION agilespacefresh.get_task_details_html(p_username text) OWNER TO agilespace;

--
-- TOC entry 857 (class 1255 OID 2004730)
-- Name: get_users_in_task(text, text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.get_users_in_task(taskcategory text, p_username text) RETURNS text
    LANGUAGE plpgsql
    AS $$
BEGIN
    RETURN (
        SELECT 
            string_agg(DISTINCT au.pusername, ',') AS all_users_in_task
        FROM 
            tasktype tt
        LEFT JOIN 
            axusers au 
            ON au.pusername = ANY(string_to_array(tt.ausername, ',')) 
               OR au.usergroups = ANY(string_to_array(tt.ausergroups, ','))
        WHERE 
            tt.type = taskcategory
            AND (tt.ausergroups IS NOT NULL OR tt.ausername IS NOT NULL)
            AND au.pusername <> p_username  -- Use the function parameter name explicitly
    );
END;
$$;


ALTER FUNCTION agilespacefresh.get_users_in_task(taskcategory text, p_username text) OWNER TO agilespace;

--
-- TOC entry 858 (class 1255 OID 2004731)
-- Name: getiview(character varying, numeric, numeric, numeric, refcursor, refcursor); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.getiview(isql character varying, inoofrec numeric, ipageno numeric, icountflag numeric, oresult refcursor, oiviewcount refcursor) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare
  v_frompos numeric;
 QRY VARCHAR(31000); 
 cnt numeric; 
    BEGIN     
    QRY := ISql; 
 cnt := 0; 
 IF (ICountFlag = 1 AND IPageNo = 1) THEN QRY := 'select count(*) recno from ('|| QRY ||')a';
  EXECUTE  QRY INTO cnt; 
  End If; 
  open OIviewCount for execute 'select '||to_char(cnt)||' as IviewCount from dual';
   QRY := ISql; 
   IF (INoofRec > 0 AND IPageNo > 0) THEN QRY:= 'select a.* from (select row_number()over() AS Rowno, '''' as axrowtype, a.* from (' || QRY||') a )a where a.Rowno > ' || cast( INoofRec * (IpageNo-1.00) as varchar ) || ' and ' || cast( INoofRec * (IpageNo) as varchar)|| ' >= a.Rowno'; 
   else QRY:='select row_number()over() AS Rowno, '''' as axrowtype, a.* from (' || QRY||') a '; 
   END IF; 
   open OResult for execute QRY; 
  exception when others then null;
    END;
$$;


ALTER FUNCTION agilespacefresh.getiview(isql character varying, inoofrec numeric, ipageno numeric, icountflag numeric, oresult refcursor, oiviewcount refcursor) OWNER TO agilespace;

--
-- TOC entry 859 (class 1255 OID 2004732)
-- Name: insert_tasktype_subtype(text, text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.insert_tasktype_subtype(p_tasktype text, p_subtype text) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF EXISTS (
        SELECT 1 FROM tasktype
        WHERE type = p_tasktype AND subtype = p_subtype
    ) THEN
        RAISE EXCEPTION 'This task type and subtype combination already exists.';
    ELSE
        INSERT INTO tasktype (type, subtype)
        VALUES (p_tasktype, p_subtype);
    END IF;
END;
$$;


ALTER FUNCTION agilespacefresh.insert_tasktype_subtype(p_tasktype text, p_subtype text) OWNER TO agilespace;

--
-- TOC entry 860 (class 1255 OID 2004733)
-- Name: is_number(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.is_number(p_value character varying) RETURNS numeric
    LANGUAGE plpgsql
    AS $$
Declare 
v_num NUMERIC;
BEGIN
v_num:=cast(p_value as numeric);
RETURN 1;
EXCEPTION
WHEN OTHERS THEN
RETURN 0;
END; $$;


ALTER FUNCTION agilespacefresh.is_number(p_value character varying) OWNER TO agilespace;

--
-- TOC entry 861 (class 1255 OID 2004734)
-- Name: join_comma(refcursor, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.join_comma(p_cursor refcursor, p_del character varying DEFAULT ','::character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare
    l_value   varchar(32767);
    l_result  varchar(32767);
begin
    loop
        fetch p_cursor into l_value;
        exit when p_cursor%notfound;
        if l_result is not null then
            l_result := l_result || p_del;
        end if;
        l_result := l_result || l_value;
    end loop;
    return l_result;
end;
$$;


ALTER FUNCTION agilespacefresh.join_comma(p_cursor refcursor, p_del character varying) OWNER TO agilespace;

--
-- TOC entry 847 (class 1255 OID 2004735)
-- Name: pr_axcnfg_tab_create(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pr_axcnfg_tab_create(structtransid character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
v_cnt numeric(2) ;
v_sql varchar(4000);
begin
      select COALESCE(count(table_name),0) into v_cnt from information_schema.tables where lower(table_name) = lower( 'axpconfigs'||chr(95)||structtransid );
      if v_cnt = 0
      then
      v_sql := 'create table axpconfigs'||chr(95)||structtransid||' ( configname varchar(30),cvalue varchar(2000),condition varchar(240))' ;
        execute v_sql;

        end if;
end;
$$;


ALTER FUNCTION agilespacefresh.pr_axcnfg_tab_create(structtransid character varying) OWNER TO agilespace;

--
-- TOC entry 833 (class 1255 OID 2004736)
-- Name: pr_axcnfgiv_tab_create(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pr_axcnfgiv_tab_create(structtransid character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
v_cnt numeric(2) ;
v_sql varchar(4000);
begin
      select COALESCE(count(table_name),0) into v_cnt from information_schema.tables where lower(table_name) = lower( 'axpconfigsiv'||chr(95)||structtransid );
      if v_cnt = 0
      then
        v_sql := 'create table axpconfigsiv'||chr(95)||structtransid||' ( configname varchar(30),cvalue varchar(240),condition varchar(240))' ;
        execute  v_sql;

      end if;
end;
$$;


ALTER FUNCTION agilespacefresh.pr_axcnfgiv_tab_create(structtransid character varying) OWNER TO agilespace;

--
-- TOC entry 834 (class 1255 OID 2004737)
-- Name: pr_bulk_page_delete(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pr_bulk_page_delete() RETURNS void
    LANGUAGE plpgsql
    AS $$ 
declare 
i varchar(3000);
begin
for i in (Select name from axpages where pagetype='web' and blobno=1) 
loop
begin
execute axp_pr_page_creation( i.name,null,null,null,'delete',null);
exception when others then
null;
end ;
end loop;
end; $$;


ALTER FUNCTION agilespacefresh.pr_bulk_page_delete() OWNER TO agilespace;

--
-- TOC entry 835 (class 1255 OID 2004738)
-- Name: pr_bulkexecute(character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pr_bulkexecute(pintext character varying, pintrg character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
Declare 
v_rowcount numeric(15) :=0;
v_trgdis varchar(500)  := 'ALTER TRIGGER '||pintrg||'  DISABLE';
v_trgena varchar(500) := 'ALTER TRIGGER '||pintrg||'  ENABLE';
begin

if pintrg = 'NA' then
  EXECUTE  pintext;
else
  EXECUTE v_trgdis;
  EXECUTE pintext;
  EXECUTE v_trgena;
end if;

end; $$;


ALTER FUNCTION agilespacefresh.pr_bulkexecute(pintext character varying, pintrg character varying) OWNER TO agilespace;

--
-- TOC entry 836 (class 1255 OID 2004739)
-- Name: pr_executescript_new(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pr_executescript_new(ptablename character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$ declare 	sqlstmt refcursor; rec record; temp1 varchar(1000); begin truncate table axonlineconvlog; open sqlstmt for execute 'SELECT case when substring(lower(psqlquery),1,1) in (''i'',''u'',''d'')  then psqlquery else substring(psqlquery,2,length(psqlquery)) end as psqlquery  FROM ' || ptablename; fetch next from sqlstmt into rec; while found loop begin execute rec.psqlquery; exception when others then insert into axonlineconvlog(script,tablename,errmsg ) values(rec.psqlquery,ptablename,SQLERRM); end; fetch next from sqlstmt into rec; end loop; close sqlstmt; temp1 := 'drop table ' || ptablename; execute temp1; end; $$;


ALTER FUNCTION agilespacefresh.pr_executescript_new(ptablename character varying) OWNER TO agilespace;

--
-- TOC entry 862 (class 1255 OID 2004740)
-- Name: pr_executescript_thread_new(character varying, character varying, character varying, numeric); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pr_executescript_thread_new(ptablename character varying, pfieldname character varying, pgroupfield character varying, pthread numeric) RETURNS void
    LANGUAGE plpgsql
    AS $$ declare sqlstmt  varchar(4000); createtblstmt  varchar(4000); createindexstmt varchar(4000); BEGIN createtblstmt := 'create temp table '||ptablename||'_t on commit drop  as select  b1.'||pgroupfield||',mod(rank()over(order by b1.'||pgroupfield||'),'||pthread||')  as '||pfieldname||' from (select '||pgroupfield||' from '||ptablename||' group by '||pgroupfield||' ) b1'; createindexstmt := 'create index i_'||ptablename||' on '||ptablename||'_t ('||pgroupfield||')'; sqlstmt := ' update '||ptablename||' a set '||pfieldname||'= ( select b.'||pfieldname||' from '||ptablename||'_t b where b.'||pgroupfield||'=a.'||pgroupfield||') where exists (select  1 from  '||ptablename||'_t b where  b.'||pgroupfield||'=a.'||pgroupfield||') ';  execute createtblstmt; execute createindexstmt; execute sqlstmt  ; end; $$;


ALTER FUNCTION agilespacefresh.pr_executescript_thread_new(ptablename character varying, pfieldname character varying, pgroupfield character varying, pthread numeric) OWNER TO agilespace;

--
-- TOC entry 863 (class 1255 OID 2004741)
-- Name: pr_homeconfig_pagelist(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pr_homeconfig_pagelist(ppageid character varying) RETURNS TABLE(pcaption character varying, pname character varying)
    LANGUAGE plpgsql
    AS $$
begin

return  query
WITH RECURSIVE cte AS (
   SELECT name, caption, 1 AS level,pagetype,caption a,name b
   FROM   axpages
--WHERE   length(parent)=0 
   UNION  ALL
   SELECT t.name, t.caption, c.level + 1,t.pagetype,c.a,c.b
   FROM   cte    c
   JOIN   axpages t ON t.parent = c.name    
   )
   select a,b from (
SELECT a,b,row_number() over (order by level desc) rnum
FROM   cte where name=ppageid
ORDER  BY level)a where rnum=1;	
END; $$;


ALTER FUNCTION agilespacefresh.pr_homeconfig_pagelist(ppageid character varying) OWNER TO agilespace;

--
-- TOC entry 864 (class 1255 OID 2004742)
-- Name: pr_pegv2_processlist(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pr_pegv2_processlist(pprocessname character varying) RETURNS TABLE(taskname character varying, tasktype character varying, tasktime character varying, taskfromuser character varying, taskstatus character varying, displayicon character varying, displaytitle text, taskid character varying, keyfield character varying, keyvalue character varying, recordid numeric, transid character varying)
    LANGUAGE plpgsql
    AS $$
declare 
v_createtblscr varchar(4000);
v_processtable varchar(100);

begin
	
	select processtable into v_processtable from axpdef_peg_processmaster where lower(caption) = lower(pprocessname);
	
	v_createtblscr :='select taskname,tasktype,cast(to_char(to_timestamp(eventdatetime, ''YYYYMMDDHH24MISSSSS''),''dd/mm/yyyy hh24:mi:ss'')as varchar) eventdatetime,username,taskstatus,displayicon,displaytitle,taskid,keyfield,keyvalue,recordid,transid from '|| v_processtable;
	
    RETURN QUERY    execute v_createtblscr;
END; $$;


ALTER FUNCTION agilespacefresh.pr_pegv2_processlist(pprocessname character varying) OWNER TO agilespace;

--
-- TOC entry 867 (class 1255 OID 2004743)
-- Name: pr_pegv2_processprogress(character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pr_pegv2_processprogress(pprocessname character varying, pkeyvalue character varying) RETURNS TABLE(processname character varying, taskname character varying, indexno numeric, eventdatetime character varying, taskstatus character varying, taskid character varying, transid character varying, keyfield character varying, keyvalue character varying, recordid numeric, rnum numeric)
    LANGUAGE plpgsql
    AS $$
declare 
v_createtblscr varchar(4000);
v_processtable varchar(100);
v_keyvalue varchar(2000);

begin
    
    select processtable into v_processtable from axpdef_peg_processmaster where lower(caption) = lower(pprocessname);
   
   
   v_createtblscr :=concat('with c as (select distinct a.processname,a.taskname,a.indexno,
    a.eventdatetime,
    coalesce(b.taskstatus, ''active'')taskstatus,a.taskid,
    a.transid,a.keyfield,a.keyvalue,a.recordid from ', v_processtable ,' a 
    join(select processname,taskname,indexno,transid,keyvalue,taskstatus,
    eventdatetime from axactivetaskstatus
    where lower(processname) ='''||lower(pprocessname)||    ''' and lower(keyvalue) = ''',lower(pkeyvalue),''' )b 
    on a.taskname = b.taskname and a.indexno = b.indexno 
    and a.eventdatetime =  b.eventdatetime    
     where lower(a.processname) ='''||lower(pprocessname)||
    ''' and lower(a.keyvalue) = ''',lower(pkeyvalue),''' ) select 
    coalesce(c.processname,d.processname) processname,coalesce(c.taskname,d.taskname) taskname,
    coalesce(c.indexno,d.indexno)indexno,
cast(to_char(to_timestamp(left(coalesce(c.eventdatetime,d.eventdatetime),14) , ''YYYYMMDDHH24MISSSSS''),''dd/mm/yyyy hh24:mi:ss'') as varchar)eventdatetime,
    coalesce(c.taskstatus,''Active'') taskstatus,coalesce(c.taskid,d.taskid) taskid,coalesce(c.transid,d.transid)transid,
    coalesce(c.keyfield,d.keyfield) keyfield,coalesce(c.keyvalue,d.keyvalue)keyvalue,coalesce(c.recordid,d.recordid) recordid,
    cast(row_number() over(partition by coalesce(c.indexno,d.indexno) order by coalesce(c.indexno,d.indexno),coalesce(c.eventdatetime,d.eventdatetime) desc) as numeric)rnum
    from c   right join (select j.indexno,j.transid,j.keyfield,j.keyvalue,j.eventdatetime,
j.processname,j.taskname,j.taskid,j.recordid    from axactivetasks j 
    where lower(processname) = ''',lower(pprocessname),''' and lower(keyvalue) = ''',lower(pkeyvalue) ,''' and removeflg=''F'') d on
    c.indexno = d.indexno and c.transid = d.transid and c.keyfield = d.keyfield and c.keyvalue = d.keyvalue and c.taskid = d.taskid
    group by   coalesce(c.processname,d.processname) ,coalesce(c.taskname,d.taskname) ,coalesce(c.indexno,d.indexno),coalesce(c.eventdatetime,d.eventdatetime),
    coalesce(c.taskstatus,''Active'') ,coalesce(c.taskid,d.taskid) ,coalesce(c.transid,d.transid),
    coalesce(c.keyfield,d.keyfield) ,coalesce(c.keyvalue,d.keyvalue),coalesce(c.recordid,d.recordid)
    order by coalesce(c.indexno,d.indexno)'); 
  
   
RETURN QUERY   execute v_createtblscr;


END; $$;


ALTER FUNCTION agilespacefresh.pr_pegv2_processprogress(pprocessname character varying, pkeyvalue character varying) OWNER TO agilespace;

--
-- TOC entry 868 (class 1255 OID 2004744)
-- Name: pr_pegv2_sendto_userslist(numeric, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pr_pegv2_sendto_userslist(pallowsendflg numeric, pactor character varying, pprocessname character varying, pkeyvalue character varying, ptaskname character varying) RETURNS TABLE(pusername character varying)
    LANGUAGE plpgsql
    AS $$
declare
v_usergroup_in varchar;
v_usergroup_notin varchar;
v_usergroup_in_cnt numeric;
v_usergroup_notin_cnt numeric;
begin
	
/*
 * 2 - Any user
 * 3 - Users in this process
 * 4 - Actor
 */

select senduser_in,senduser_notin,
coalesce(length(senduser_in),0),coalesce(length(senduser_notin),0) 
into v_usergroup_in,v_usergroup_notin,v_usergroup_in_cnt,v_usergroup_notin_cnt
from axprocessdefv2 where processname = pprocessname and taskname = ptaskname;	
	
RETURN QUERY 

----------  Any user & Both In & Not in usergroup is empty
select username from axusers 
where pallowsendflg = 2 and v_usergroup_in_cnt=0 and v_usergroup_notin_cnt=0
union all
---------- Any user & not in is empty
select a.username from axusers a,axpdef_peg_usergroups b 
where pallowsendflg = 2 and v_usergroup_in_cnt>0 and v_usergroup_notin_cnt=0
and a.username = b.username
and b.usergroupname in(select unnest(string_to_array(v_usergroup_in,','))) 
union all ---------- Any user & in is empty
select a.username from axusers a,axpdef_peg_usergroups b
where pallowsendflg = 2 and v_usergroup_in_cnt=0 and v_usergroup_notin_cnt>0
and a.username= b.username
and b.usergroupname not in(select unnest(string_to_array(v_usergroup_in,',')))
union all ---------- Any user & both in & not in is selected
select a.username from axusers a,axpdef_peg_usergroups b
where pallowsendflg = 2 and v_usergroup_in_cnt=0 and v_usergroup_notin_cnt>0
and a.username= b.username
and b.usergroupname not in(select unnest(string_to_array(v_usergroup_notin,',')))
and b.usergroupname in(select unnest(string_to_array(v_usergroup_in,',')))
union all
select touser from axactivetasks where grouped='T' 
and 3 = pallowsendflg  and processname = pprocessname and keyvalue = pkeyvalue and removeflg='F'
group by touser;
	
   
END; $$;


ALTER FUNCTION agilespacefresh.pr_pegv2_sendto_userslist(pallowsendflg numeric, pactor character varying, pprocessname character varying, pkeyvalue character varying, ptaskname character varying) OWNER TO agilespace;

--
-- TOC entry 869 (class 1255 OID 2004745)
-- Name: pr_pegv2_transactionstatus(character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pr_pegv2_transactionstatus(ptransid character varying, pkeyvalue character varying) RETURNS TABLE(processname character varying, taskname character varying, status character varying, statustext character varying, recordid numeric, keyvalue character varying, username character varying, eventdatetime character varying, indexno numeric, cnd numeric)
    LANGUAGE plpgsql
    AS $$
declare 
v_qry text;
v_processes varchar(8000);
v_logrec record;
v_logqry text[] DEFAULT  ARRAY[]::varchar[];
v_logqrytxt text;

begin
	
execute 'select distinct string_agg(b.processtable,'','') from axpeg_'||ptransid||' a join  axpdef_peg_processmaster b on a.processname = b.caption 
where a.keyvalue ='''||pkeyvalue||'''' into v_processes;  	

for v_logrec in select regexp_split_to_table(v_processes,',') tblname,
'select processname,taskname,taskstatus,tasktype,recordid,keyvalue,username,eventdatetime,cast(indexno as numeric) ,cast(1 as numeric) cnd from '||regexp_split_to_table(v_processes,',')
||' where keyvalue='''||pkeyvalue||'''' logqry from dual
loop
v_logqry := array_append(v_logqry,v_logrec.logqry);
end loop;
v_logqrytxt := array_to_string(v_logqry,' union all ');

if array_length(v_logqry,1) > 0 then

v_qry := concat('select processname,null taskname,cast(status as varchar(2)) status,statustext,recordid,keyvalue,cast(''NA'' as varchar(2)) username,
cast(eventdatetime as varchar(100)),0 indexno,cast(0 as numeric) cnd from axpeg_'||ptransid||' 
where status in (1,2) and keyvalue ='''||pkeyvalue||'''
union all
select a.processname,taskname,cast(b.status as varchar(20)) status,concat(a.taskname,'' is pending '',string_agg(a.touser,'','')) statustext,
b.recordid,b.keyvalue,cast(''NA'' as varchar(2)) username,null eventdatetime,0 indexno,cast(0 as numeric) cnd
from vw_pegv2_activetasks a join axpeg_'||ptransid||' b on a.processname=b.processname 
and a.keyvalue=b.keyvalue
where b.status=0
and a.keyvalue ='''||pkeyvalue||'''
group by a.processname,a.transid,a.keyvalue,a.taskname,b.recordid,b.keyvalue,b.status',chr(10),' union all ',chr(10),v_logqrytxt);

else 

v_qry := 'select processname,null taskname,cast(status as varchar(2)) status,statustext,recordid,keyvalue,cast(''NA'' as varchar(2)) username,
cast(eventdatetime as varchar(100)),cast(0 as numeric) indexno,cast(0 as numeric) cnd from axpeg_'||ptransid||' 
where status in (1,2) and keyvalue ='''||pkeyvalue||'''
union all
select a.processname,taskname,cast(b.status as varchar(20)) status,concat(a.taskname,'' is pending '',string_agg(a.touser,'','')) statustext,
b.recordid,b.keyvalue,cast(''NA'' as varchar(2)) username,null eventdatetime,cast(indexno as numeric),cast(0 as numeric) cnd
from vw_pegv2_activetasks a join axpeg_'||ptransid||' b on a.processname=b.processname 
and a.keyvalue=b.keyvalue
where b.status=0
and a.keyvalue ='''||pkeyvalue||'''
group by a.processname,a.transid,a.keyvalue,a.taskname,b.recordid,b.keyvalue,b.status,a.indexno';


end if;


RETURN QUERY   execute v_qry;

END; $$;


ALTER FUNCTION agilespacefresh.pr_pegv2_transactionstatus(ptransid character varying, pkeyvalue character varying) OWNER TO agilespace;

--
-- TOC entry 870 (class 1255 OID 2004746)
-- Name: pr_pegv2_transcurstatus(character varying, character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pr_pegv2_transcurstatus(ptransid character varying, pkeyvalue character varying, pprocess character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare 
v_qry text;
v_output numeric;
begin
	

v_qry := concat('select cast(status as varchar(2)) status from axpeg_',ptransid,' 
where keyvalue =''',pkeyvalue,'''and processname=''',pprocess,'''');


execute v_qry into  v_output;


return case v_output when 1 then 'Approved' when 2 then 'Rejected' when 3 then 'Withdrawn' else 'In Progress' end;

END; $$;


ALTER FUNCTION agilespacefresh.pr_pegv2_transcurstatus(ptransid character varying, pkeyvalue character varying, pprocess character varying) OWNER TO agilespace;

--
-- TOC entry 874 (class 1255 OID 2004747)
-- Name: pr_source_trigger(character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pr_source_trigger(phltype character varying, pstructname character varying, psearchtext character varying, psrctable character varying, psrcfield character varying, pparams character varying, pdocid character varying, psrcmultipletransid character varying, pparamchange character varying) RETURNS void
    LANGUAGE plpgsql
    AS $_$
declare
   pscripts   VARCHAR (3000);
   pcnt       NUMERIC (15);
    BEGIN     
    --To insert  or update dynamic param value from the source table

   IF psrctable IS NOT NULL AND psrcfield IS NOT NULL
   THEN
      --To drop existing trigger if any source field or source table has been changed

      IF pparamchange = 'T'
      THEN
         SELECT COUNT (1)
           INTO pcnt
         FROM information_schema.triggers where trigger_schema=current_user
                AND TRIM (UPPER (TRIGGER_name)) =
                       TRIM (UPPER ('axp_sch_' || pdocid));

         IF pcnt > 0
         THEN
            EXECUTE  'drop trigger if exists axp_sch_' || TRIM (pdocid)||' on '||psrctable||';';
             EXECUTE  'drop trigger if exists axp_sch_' || TRIM (pdocid)||'_delete on '||psrctable||';';
         END IF;

         DELETE FROM axp_appsearch_data_v2
          WHERE docid = pdocid;

      END IF;

      --To create the source table trigger

      pscripts :=
            ' create or replace function axp_sch_'|| pdocid|| '() 
RETURNS trigger
    LANGUAGE ''plpgsql''
    COST 100
    VOLATILE AS 
	$$
begin 
if tg_op=''INSERT''  then 

insert  into axp_appsearch_data_v2 (hltype,structname,searchtext,params,docid) values('''
         || phltype
         || ''','''
         || pstructname
         || ''','
         || 'new.'
         || psrcfield
         || '||  '''
         || psearchtext
         || ''','''
         || REPLACE (REPLACE (pparams, '@', '''||' || 'new.'),
                     '&',
                     '&''||''')
         || ','''
         || pdocid
         || ''');

else if  tg_op=''UPDATE''   then

insert  into axp_appsearch_data_v2 (hltype,structname,searchtext,params,docid) values('''
         || phltype
         || ''','''
         || pstructname
         || ''','
         || 'new.'
         || psrcfield
         || '||  '''
         || psearchtext
         || ''','''
         || REPLACE (REPLACE (pparams, '@', '''||' || 'old.'),
                     '&',
                     '&''||''')
         || ','''
         || pdocid
         || ''');

else  delete  FROM axp_appsearch_data_v2 where hltype='''
         || phltype
         || ''' and params='''
         || REPLACE (REPLACE (pparams, '@', '''||' || 'old.'),
                     '&',
                     '&''||''')
         || ';

 end if;

 end if;
return new;
exception

      when unique_violation then

if tg_op=''INSERT''  then 
      update axp_appsearch_data_v2 set searchtext='
         || 'new.'
         || psrcfield
         || '||  '''
         || psearchtext
         || ''',params='''
         || REPLACE (REPLACE (pparams, '@', '''||' || 'new.'),
                     '&',
                     '&''||''')
         || ' where hltype='''
         || phltype
         || ''' and params='''
         || REPLACE (REPLACE (pparams, '@', '''||' || 'new.'),
                     '&',
                     '&''||''')
         || ' and docid='''
         || pdocid
         || ''';
else 
  update axp_appsearch_data_v2 set searchtext='
         || 'new.'
         || psrcfield
         || '||  '''
         || psearchtext
         || ''',params='''
         || REPLACE (REPLACE (pparams, '@', '''||' || 'new.'),
                     '&',
                     '&''||''')
         || ' where hltype='''
         || phltype
         || ''' and params='''
         || REPLACE (REPLACE (pparams, '@', '''||' || 'old.'),
                     '&',
                     '&''||''')
         || ' and docid='''
         || pdocid
         || ''';
end if;

return new;
   when others then 

return new;

 end ;  
 $$
 ';

      EXECUTE    pscripts;
	  
	  execute  ' drop trigger IF EXISTS axp_sch_'|| pdocid||' on '||psrctable ||';';
	  execute  ' drop trigger IF EXISTS axp_sch_'|| pdocid||'_delete on '||psrctable ||';';
	  
	 --inster and update event
	EXECUTE   'CREATE TRIGGER axp_sch_'|| pdocid||'
    AFTER INSERT OR UPDATE 
    ON '||psrctable ||
	 ' FOR EACH ROW '||
		case when psrcmultipletransid is not null and psrcmultipletransid<>'' 
	then ' when (new.transid='''||psrcmultipletransid||''')' else '' end||'
    EXECUTE PROCEDURE axp_sch_'||pdocid||'();' ;
   
   --delete event
   if psrcmultipletransid is not null and psrcmultipletransid<>'' then
   	EXECUTE   'CREATE TRIGGER axp_sch_'|| pdocid||'_delete
    AFTER delete
    ON '||psrctable ||
	 ' FOR EACH ROW '||
		case when psrcmultipletransid is not null and psrcmultipletransid<>'' 
	then ' when (old.transid='''||psrcmultipletransid||''')' else '' end||'
    EXECUTE PROCEDURE axp_sch_'||pdocid||'();' ;   
   end if;
	
	

      --Rebuild the exsting recordid from source table to appsearch data table

      EXECUTE  'update  ' || psrctable || ' set cancel=cancel';

   END IF;   
  
    
   
    END;
$_$;


ALTER FUNCTION agilespacefresh.pr_source_trigger(phltype character varying, pstructname character varying, psearchtext character varying, psrctable character varying, psrcfield character varying, pparams character varying, pdocid character varying, psrcmultipletransid character varying, pparamchange character varying) OWNER TO agilespace;

--
-- TOC entry 875 (class 1255 OID 2004748)
-- Name: pr_utl_forms_menutree(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pr_utl_forms_menutree(ppagetype character varying) RETURNS character varying
    LANGUAGE plpgsql
    AS $$
declare v_mtree varchar(1000);
begin

WITH RECURSIVE cte AS (
   SELECT name, caption, 1 AS level,pagetype,caption a,name b,visible
   FROM   axpages 
   UNION  ALL
   SELECT t.name, t.caption, c.level + 1,t.pagetype,c.a,c.b,t.visible
   FROM   cte    c
   JOIN   axpages t ON t.parent = c.name    
   )
   select a.mtree into v_mtree from
(SELECT string_agg(a,'/') over(order by level desc) mtree,row_number() over(order by level) rnum
FROM   cte where substring(pagetype,1,1)='t'  and visible ='T'
and pagetype =ppagetype)a where rnum=1;
return 'Menu - '|| v_mtree||'</br>';
END; $$;


ALTER FUNCTION agilespacefresh.pr_utl_forms_menutree(ppagetype character varying) OWNER TO agilespace;

--
-- TOC entry 876 (class 1255 OID 2004749)
-- Name: pro_axplogstatextract(date); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pro_axplogstatextract(fdate date) RETURNS void
    LANGUAGE plpgsql
    AS $$
BEGIN
   ------ usage details
   delete from usagedtl  where executeddate=fdate;
   INSERT INTO usagedtl (executeddate,
                         code,
                         title,
                         cnt)
        SELECT cast(calledon as date) cdate,
               'NOT' CODE,
               'Total No. of Transactions' title,
               COUNT (*) cnt
          FROM axpertlog
         WHERE cast(calledon as date) = fdate 
      GROUP BY cast(calledon as date)
      UNION ALL
        SELECT cast(calledon as date) cdate,
               'NOL' CODE,
               'Total No. of Logins' title,
               COUNT (*) cnt
          FROM axpertlog
         WHERE cast(calledon as date) = fdate AND servicename = 'Login'
      GROUP BY cast(calledon as date)
      UNION ALL
        SELECT cast(calledon as date) cdate,
               'NOU' CODE,
               'Total No. of Users' title,
               COUNT (DISTINCT username) cnt
          FROM axpertlog
         WHERE cast(calledon as date) = fdate AND servicename = 'Login'
      GROUP BY cast(calledon as date)
      UNION ALL
        SELECT cast(calledon as date) cdate,
               'NOD' CODE,
               'Total No. of Deadlock Execptions' title,
               COUNT (*) cnt
          FROM axpertlog
         WHERE cast(calledon as date) = fdate
               AND serviceresult LIKE 'trans%dead%'
      GROUP BY cast(calledon as date)
      UNION ALL
        SELECT cast(calledon as date) cdate,
               'MTJ' CODE,
               'More time taken Saves (> 8 Sec)' title,
               COUNT (*) cnt
          FROM axpertlog
         WHERE     cast(calledon as date) = fdate
               AND servicename = 'saving data'
               AND serviceresult = 'success'
               AND recordid = 0
               AND (timetaken / 1000) > 8
      GROUP BY cast(calledon as date)
      UNION ALL
        SELECT cast(calledon as date) cdate,
               'MTL' CODE,
               'More time taken Loads (> 8 Sec)' title,
               COUNT (*) cnt
          FROM axpertlog
         WHERE     cast(calledon as date) = fdate 
               AND servicename = 'load data'
               AND serviceresult = 'success'
               AND (timetaken / 1000) > 8
      GROUP BY cast(calledon as date)
      UNION ALL
      SELECT cast(calledon as date) cdate,
             'MTL' CODE,
             'More time taken reports (> 8 Sec)' title,
             COUNT (*) cnt
        FROM axpertlog
       WHERE     cast(calledon as date) = fdate 
             AND servicename = 'Get IView'
             AND serviceresult = 'success'
             AND (timetaken / 1000) > 8
GROUP BY cast(calledon as date);

   ----- exceptions
    delete from axpexception   where exp_date = fdate;
   INSERT INTO axpexception (EXP_DATE,
                             STRUCTNAME,
                             SERVICENAME,
                             SERVICERESULT,
                             COUNT)
        SELECT TRUNC (calledon),
               structname,
               servicename,
               serviceresult,
               COUNT (*)
          FROM axpertlog
         WHERE SERVICERESULT <> 'success' AND calledon = fdate
      GROUP BY calledon,
               structname,
               servicename,
               serviceresult;

   ----- time taken
    delete from ut_timetaken  where executed_date=fdate;
   INSERT INTO ut_timetaken (executed_date,
                             object_type,
                             service_name,
                             object_name,
                             tot_count,
                             count_8s,
                             count_30s,
                             count_90s,
                             min_time,
                             max_time,
                             avg_time)
        SELECT cast(SYSDATE as date) exec_date,
               'tstruct' obj_type,
               'Saving Data' service_name,
               b.caption,
               COUNT (*) cnt,
               SUM (CASE WHEN timetaken > 8000 THEN 1 ELSE 0 END) cnt8,
               SUM (CASE WHEN timetaken > 30000 THEN 1 ELSE 0 END) cnt30,
               SUM (CASE WHEN timetaken > 90000 THEN 1 ELSE 0 END) cnt90,
               MIN (timetaken) / 1000 mintime,
               MAX (timetaken) / 1000 maxtime,
               AVG (timetaken) / 1000 avgtime
          FROM    axpertlog a
               JOIN
                  (  SELECT name, caption
                       FROM tstructs
                   GROUP BY name, caption) b
               ON a.structname = b.name
         WHERE     LOWER (servicename) = 'saving data'
               AND serviceresult = 'success'
               AND a.recordid = 0
               AND cast(calledon as date) = cast(fdate as date)
      GROUP BY b.caption;

   INSERT INTO ut_timetaken (executed_date,
                             object_type,
                             service_name,
                             object_name,
                             tot_count,
                             count_8s,
                             count_30s,
                             count_90s,
                             min_time,
                             max_time,
                             avg_time)
        SELECT cast(SYSDATE as date) exec_date,
               'tstruct' obj_type,
               'Load Data' service_name,
               b.caption,
               COUNT (*) cnt,
               SUM (CASE WHEN timetaken > 8000 THEN 1 ELSE 0 END) cnt8,
               SUM (CASE WHEN timetaken > 30000 THEN 1 ELSE 0 END) cnt30,
               SUM (CASE WHEN timetaken > 90000 THEN 1 ELSE 0 END) cnt90,
               MIN (timetaken) / 1000 mintime,
               MAX (timetaken) / 1000 maxtime,
               AVG (timetaken) / 1000 avgtime
          FROM    axpertlog a
               JOIN
                  (  SELECT name, caption
                       FROM tstructs
                   GROUP BY name, caption) b
               ON a.structname = b.name
         WHERE     LOWER (servicename) = 'load data'
               AND serviceresult = 'success'
               AND cast(calledon as date) = cast(fdate as date)
      GROUP BY b.caption;

   INSERT INTO ut_timetaken (executed_date,
                             object_type,
                             service_name,
                             object_name,
                             tot_count,
                             count_8s,
                             count_30s,
                             count_90s,
                             min_time,
                             max_time,
                             avg_time)
        SELECT cast(SYSDATE as date) exec_date,
               'tstruct' obj_type,
               'Load Report' service_name,
               b.caption,
               COUNT (*) cnt,
               SUM (CASE WHEN timetaken > 8000 THEN 1 ELSE 0 END) cnt8,
               SUM (CASE WHEN timetaken > 30000 THEN 1 ELSE 0 END) cnt30,
               SUM (CASE WHEN timetaken > 90000 THEN 1 ELSE 0 END) cnt90,
               MIN (timetaken) / 1000 mintime,
               MAX (timetaken) / 1000 maxtime,
               AVG (timetaken) / 1000 avgtime
          FROM    axpertlog a
               JOIN
                  (  SELECT name, caption
                       FROM iviews
                   GROUP BY name, caption) b
               ON a.structname = b.name
         WHERE     LOWER (servicename) = 'get iview'
               AND serviceresult = 'success'
               AND cast(calledon as date) = cast(fdate as date)
      GROUP BY b.caption;

END;$$;


ALTER FUNCTION agilespacefresh.pro_axplogstatextract(fdate date) OWNER TO agilespace;

--
-- TOC entry 877 (class 1255 OID 2004750)
-- Name: pro_emailformat(character varying, character varying, character varying, character varying, character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.pro_emailformat(ptemplate character varying, pkeyword character varying, ptype character varying, psendto character varying, psendcc character varying) RETURNS void
    LANGUAGE plpgsql
    AS $$
declare 
v_subject varchar(3500);
v_body varchar(3500);
v_sms  varchar(3500);
v_count numeric(5);
v_keyword varchar(350);
v_keyvalue varchar(1000);
i varchar(3500);
begin

select count(*) into v_count from  sendmsg
 where lower(template) = lower( ptemplate);
 
if v_count=1 then
 
 select MSGSUBJECT,MSGCONTENT,SMSMSG into v_subject,v_body,v_sms from sendmsg
 where lower(template) = lower( ptemplate);
 
for i in (select regexp_split_to_table(pkeyword,',') as vkeyword from dual)
loop

v_keyword := SUBSTR(i.vkeyword, 1 ,INSTR(i.vkeyword, '=', 1, 1)-1);

v_keyvalue :=  SUBSTR( i.vkeyword, INSTR( i.vkeyword,'=', 1, 1)+1);

v_subject := replace(v_subject,v_keyword,v_keyvalue);

v_body := replace(v_body,v_keyword,v_keyvalue);

v_sms := replace(v_sms,v_keyword,v_keyvalue);
end loop;

if ptype='S' then

insert into axsms(createdon,mobileno,msg,status) values ( now() :: timestamp without time zone,psendto,v_sms,0);

elsif ptype='E' then

INSERT INTO AXP_MAILJOBS (MAILTO,
                          MAILCC,
                          SUBJECT,
                          BODY,
                          ATTACHMENTS,
                          IVIEWNAME,
                          IVIEWPARAMS,
                          STATUS,
                          ERRORMESSAGE,
                          SENTON,JOBDATE)
     VALUES (psendto,psendcc,v_subject ,v_body,null,null,null,0,null,null,now() :: timestamp without time zone );



end if;
end if;
end ; 
$$;


ALTER FUNCTION agilespacefresh.pro_emailformat(ptemplate character varying, pkeyword character varying, ptype character varying, psendto character varying, psendcc character varying) OWNER TO agilespace;

--
-- TOC entry 878 (class 1255 OID 2004751)
-- Name: random_number(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.random_number() RETURNS numeric
    LANGUAGE plpgsql
    AS $$
DECLARE
   v_num   numeric (20);
BEGIN
   SELECT ROUND (random() * (9999999-1111111) + 1111111)
          || TO_CHAR (now(), 'DDDSSSS')
             AS rno
     INTO v_num
     FROM DUAL;
   RETURN v_num;
END;
$$;


ALTER FUNCTION agilespacefresh.random_number() OWNER TO agilespace;

--
-- TOC entry 879 (class 1255 OID 2004752)
-- Name: sp_rapiddefinition(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.sp_rapiddefinition(itid character varying) RETURNS refcursor
    LANGUAGE plpgsql
    AS $$
declare 
	ORes1 refcursor;
	ORes2 refcursor;
    Qry1 VARCHAR(2000);
    Qry2 VARCHAR(2000);
BEGIN
	-- Qry1 will fetch the 'Form Load' fields and their params.
    Qry1 := 'SELECT a.context, a.fieldname, c.expression, a.fldsql as fldsql, coalesce(b.paramname,'''') as paramname 
              FROM axp_formload a 
              LEFT JOIN axp_params b on b.tstruct = '''||ITid||''' and a.fieldname = b.childfield and b.context = ''new'' and b.active = ''T'' 
              INNER JOIN  axpflds c on c.tstruct = '''||ITid||''' and a.fieldname=c.fname 
              WHERE a.tstruct = '''||ITid||''' and a.active=''T'' and a.context = ''new'' ';
			  
	-- Qry2 will fetch all dependents and all parents of fields and fillgrids. (Includes the parents of all dependents and parents of all parents)
    Qry2 := 'SELECT a.parentfield, a.childfield, a.dependenttype, coalesce(b.paramname,'''') as paramname,    
              coalesce(b.allrows,''F'') as allrows, coalesce(b.dirparam,''F'') as dirparam, c.frmno, c.ordno FROM axp_dependent a 
              LEFT JOIN axp_params b on b.tstruct = '''||ITid||''' and a.parentfield = b.childfield and b.context = ''dep'' and b.active = ''T''
              JOIN axpflds c on c.tstruct = '''||ITid||''' and a.childfield=c.fname 
              WHERE a.tstruct = '''||ITid||'''
              UNION
              SELECT distinct par.paramname parentfield, dep1.childfield, ''g'' as dependenttype, coalesce(b.paramname,'''') as paramname, ''F'' as allrows, ''F'' as dirparam, flds.frmno,flds.ordno  
              FROM axp_dependent dep1
              JOIN (select paramname, childfield from axp_params par where par.tstruct = '''||ITid||''' and par.context = ''fg'') par on par.childfield = dep1.parentfield
              JOIN axp_dependent dep2 on dep2.tstruct = '''||ITid||'''  and dep2.parentfield = par.paramname and dep2.dependenttype = ''g''
              JOIN axp_params b on b.tstruct = '''||ITid||''' and par.childfield = b.childfield and b.context = ''fg'' and b.active = ''T''
              JOIN axpflds flds on flds.tstruct = '''||ITid||''' and dep1.childfield = flds.fname
              WHERE dep1.tstruct = '''||ITid||'''
              ORDER BY frmno asc, ordno asc ';   
			  
    Return ORes1;
	Return ORes2;
END;
$$;


ALTER FUNCTION agilespacefresh.sp_rapiddefinition(itid character varying) OWNER TO agilespace;

--
-- TOC entry 880 (class 1255 OID 2004753)
-- Name: sum_durations_in_hhmmss(text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.sum_durations_in_hhmmss(time_str text) RETURNS text
    LANGUAGE plpgsql
    AS $$
DECLARE
    total_seconds INTEGER := 0;
    durations TEXT[];  -- Declare the array to hold split values
    duration TEXT;     -- Loop variable
    hours INTEGER;
    minutes INTEGER;
    seconds INTEGER;
   milliseconds Integer;
BEGIN
    -- Split the input string into an array of durations
    durations := string_to_array(time_str, ',');
 
    -- Loop through the array and process each duration
    FOREACH duration IN ARRAY durations
    LOOP
        SELECT 
            split_part(duration, ':', 1)::INTEGER * 3600 +  -- Convert hours to seconds
            split_part(duration, ':', 2)::INTEGER * 60 +   -- Convert minutes to seconds
            split_part(duration, ':', 3)::INTEGER  +
            split_part(duration, ':', 4)::INTEGER  -- Add seconds
        INTO seconds;
        total_seconds := total_seconds + seconds;
    END LOOP;
 
    -- Convert total seconds back to HH:MM:SS
    hours := total_seconds / 3600;
    minutes := (total_seconds % 3600) / 60;
    seconds := total_seconds % 60;
 
    RETURN LPAD(hours::TEXT, 2, '0') || ':' || 
           LPAD(minutes::TEXT, 2, '0') || ':' || 
           LPAD(seconds::TEXT, 2, '0')|| ':' || 
          LPAD(milliseconds::TEXT,2,0);
END;
$$;


ALTER FUNCTION agilespacefresh.sum_durations_in_hhmmss(time_str text) OWNER TO agilespace;

--
-- TOC entry 881 (class 1255 OID 2004754)
-- Name: sysdate(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.sysdate() RETURNS timestamp without time zone
    LANGUAGE plpgsql
    AS $$
BEGIN
RETURN to_CHAR(CURRENT_TIMESTAMP,'DD/MM/YYYY hh24:mi:ss');
END; $$;


ALTER FUNCTION agilespacefresh.sysdate() OWNER TO agilespace;

--
-- TOC entry 882 (class 1255 OID 2004755)
-- Name: t1_axlanguage11x(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.t1_axlanguage11x() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    BEGIN
	
	    begin
	 insert into axlanguage(lngname,sname,fontname,fontsize,compname,compcaption,comphint,dispname) 
	 values(new.lngname,new.sname,new.fontname,new.fontsize,new.compname,new.compcaption,new.comphint,new.dispname );
	

EXCEPTION
   WHEN unique_violation
  then update 	axlanguage set fontname=new.fontname,fontsize=new.fontsize,compcaption=new.compcaption,comphint=new.comphint,dispname=new.dispname
 where  concat(lngname,sname,compname)=concat(new.lngname,new.sname,new.compname);
end;


 RETURN NEW;

end;    
$$;


ALTER FUNCTION agilespacefresh.t1_axlanguage11x() OWNER TO agilespace;

--
-- TOC entry 883 (class 1255 OID 2004756)
-- Name: taskstatus_onhold_endtime(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.taskstatus_onhold_endtime() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Check if the task was previously 'on hold' and is moving to another status
    IF OLD.status = 'On hold' AND NEW.status IN ('Completed', 'Ongoing', 'Dropped', 'Reassigned', 'Informed delay', 'Closed') THEN
        -- Update the onholdend and onholdendtime based on the current timestamp
        -- Update the onholdend and onholdendtime in the taskputonhold_hdr table based on taskname
        UPDATE taskstatus 
        SET onholdenddate = CURRENT_DATE, 
            onholdendtime = CURRENT_TIME
        WHERE taskid = NEW.taskid;
    END IF;
    -- Return the new record
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.taskstatus_onhold_endtime() OWNER TO agilespace;

--
-- TOC entry 884 (class 1255 OID 2004757)
-- Name: tbl_fn_form_dc_info(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.tbl_fn_form_dc_info(ptransid character varying DEFAULT 'ALL'::character varying) RETURNS TABLE(transid character varying, dcname character varying, caption character varying, tablename character varying, asgrid character varying, rnk integer)
    LANGUAGE plpgsql
    AS $_$
declare
 T_SCRIPTS TEXT;
pdefschema varchar;
  
begin
	
pdefschema := current_schema||'axdef';
 
   T_SCRIPTS := 'select tstruct::varchar as transid,dname::varchar as dcname,
caption::varchar  as caption,tablename::varchar as tablename,asgrid::varchar as asgrid ,
dense_rank()over(partition by tablename order by dname)::integer as rnk
from axpdc where (lower(tstruct)= $1 or ''all''= lower($1))order by tstruct,dname ';
    
    
return query EXECUTE  T_SCRIPTS using lower(ptransid) ;
 exception when others then 
 null ;
         -- SELECT * FROM tbl_fn_form_dc_info(ptransid) ;
      
     end $_$;


ALTER FUNCTION agilespacefresh.tbl_fn_form_dc_info(ptransid character varying) OWNER TO agilespace;

--
-- TOC entry 885 (class 1255 OID 2004758)
-- Name: tbl_fn_form_fields_info(character varying); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.tbl_fn_form_fields_info(ptransid character varying DEFAULT 'ALL'::character varying) RETURNS TABLE(transid character varying, name character varying, caption character varying, datatype character varying, datawidth numeric, fdecimal numeric, hidden character varying, savevalue character varying, allowduplicate character varying, fldordno numeric, dcname character varying, modeofentry character varying, datasource character varying, expression character varying, validateexpression character varying, sql character varying, savenormalized character varying, sourcefield character varying, source_table character varying, listvalues character varying, applyrule character varying)
    LANGUAGE plpgsql
    AS $_$
declare
 T_SCRIPTS TEXT;
pdefschema varchar;
  
begin
	
pdefschema := current_schema||'axdef';
 
   T_SCRIPTS := 'select transid,name,caption,"datatype",datawidth,fdecimal,hidden::varchar as hidden,savevalue::varchar as savevalue,allowduplicate::varchar as allowduplicate,fldordno ,dcname,modeofentry,
datasource::varchar as datasource,"expression"::varchar as expression,validateexpression,sql::varchar as sql,
savenormalized::varchar as savenormalized,
case when sourcefield is not null and sourcefield<>'''' then sourcefield else selectfield end::varchar  as sourcefield,
source_table::varchar as source_table,listvalues::varchar as listvalues,applyrule ::varchar as applyrule
from '||pdefschema||'.vw_field_informations where (lower(transid)= $1 or ''all''= lower($1))
order by transid,dcname,fldordno';
    
    
return query EXECUTE  T_SCRIPTS using lower(ptransid)  ;
 exception when others then 
 null ;
         -- SELECT * FROM tbl_fn_form_fields_info() ;
      
     end $_$;


ALTER FUNCTION agilespacefresh.tbl_fn_form_fields_info(ptransid character varying) OWNER TO agilespace;

--
-- TOC entry 886 (class 1255 OID 2004759)
-- Name: tr_axpconfigs_iviews(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.tr_axpconfigs_iviews() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
 v_cnt NUMERIC(2);
v_sql varchar(4000);
    BEGIN 	 
	  if TG_OP='INSERT'
    then
	 select  count(1)  into v_cnt from information_schema.tables where table_schema=current_schema and lower(table_name) = lower( 'axpconfigsiv'||chr(95)||new.structtransid  );
     
	 if v_cnt = 0
      then
        v_sql := 'create table axpconfigsiv'||chr(95)||new.structtransid ||' ( configname varchar(30),cvalue varchar(240),condition varchar(240))' ;
        execute  v_sql;
		end if;
		
if new.cv_groupbuttons is not null
      then
        v_sql = 'insert into axpconfigsiv'||chr(95)||new.structtransid||' ( configname,cvalue,condition ) values ('''||new.configname2||''','''||new.cv_groupbuttons||''',null)';
        execute  v_sql;
      end if;
	  
end if;	  
	  
    if TG_OP='UPDATE'
    then
        v_sql = 'delete from axpconfigsiv'||chr(95)||old.structtransid;
        execute  v_sql;  
		
      if new.cv_groupbuttons is not null
      then
        v_sql = 'insert into axpconfigsiv'||chr(95)||new.structtransid||' ( configname,cvalue,condition ) values ('''||new.configname2||''','''||new.cv_groupbuttons||''',null)';
        execute  v_sql;
      end if;
	  
	end if;  
     if TG_OP='DELETE' 
    then
        v_sql = 'delete from axpconfigsiv'||chr(95)||old.structtransid;
        execute  v_sql;   
    end if;
  
	
       RETURN NEW;
    END;$$;


ALTER FUNCTION agilespacefresh.tr_axpconfigs_iviews() OWNER TO agilespace;

--
-- TOC entry 887 (class 1255 OID 2004760)
-- Name: tr_axpconfigs_tstructs(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.tr_axpconfigs_tstructs() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
 V_CNT NUMERIC(2);
V_SQL VARCHAR(4000);
    BEGIN      
     IF TG_OP='INSERT' OR TG_OP='UPDATE'
    THEN 
    

     IF TG_OP='INSERT' THEN
     SELECT COALESCE(COUNT(TABLE_NAME),0) INTO V_CNT FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA=CURRENT_SCHEMA AND  LOWER(TABLE_NAME) = LOWER( 'axpconfigs'||CHR(95)||NEW.STRUCTTRANSID );
      IF V_CNT = 0
      THEN
      V_SQL := 'create table axpconfigs'||CHR(95)||NEW.STRUCTTRANSID||' ( configname varchar(30),cvalue varchar(2000),condition varchar(2000))' ;
        EXECUTE  V_SQL;
        END IF;
    ELSIF TG_OP='UPDATE'
    THEN
	
        V_SQL = 'delete from axpconfigs'||CHR(95)||OLD.STRUCTTRANSID;
		begin
        EXECUTE  V_SQL; 
		exception when others then null;
		end ;
        END IF;
        
     IF NEW.CV_SEARCHFLDS IS NOT NULL and NEW.CV_SEARCHFLDS  <> ''
      THEN
        V_SQL = 'insert into axpconfigs'||CHR(95)||NEW.STRUCTTRANSID||' ( configname,cvalue,condition ) values ('''||NEW.CONFIGNAME1||''','''||NEW.CV_SEARCHFLDS||''',null)';
        EXECUTE  V_SQL;
      END IF;
      
      IF NEW.CV_GROUPBUTTONS IS NOT NULL and NEW.CV_GROUPBUTTONS <>''
      THEN
        V_SQL = 'insert into axpconfigs'||CHR(95)||NEW.STRUCTTRANSID||' ( configname,cvalue,condition ) values ('''||NEW.CONFIGNAME2||''','''||NEW.CV_GROUPBUTTONS||''',null)';
        EXECUTE  V_SQL;
      END IF;
      
      IF NEW.CV_HTMLPRINTS IS NOT NULL and NEW.CV_HTMLPRINTS <> ''
      THEN
        V_SQL = 'insert into axpconfigs'||CHR(95)||NEW.STRUCTTRANSID||' ( configname,cvalue,condition ) values ('''||NEW.CONFIGNAME3||''','''||NEW.CV_HTMLPRINTS||''',null)';
        EXECUTE  V_SQL;
      END IF;     
              
      IF NEW.CV_MASTERFLDS IS NOT NULL and NEW.CV_MASTERFLDS <>''
      THEN
        V_SQL = 'insert into axpconfigs'||CHR(95)||NEW.STRUCTTRANSID||' ( configname,cvalue,condition ) values ('''||NEW.CONFIGNAME4||''','''||NEW.CV_MASTERFLDS||''',null)';
        EXECUTE  V_SQL;
      END IF;
      
    END IF;
    
    
    IF TG_OP='DELETE'
    THEN
        V_SQL = 'delete from axpconfigs'||CHR(95)||OLD.STRUCTTRANSID;
        EXECUTE  V_SQL;   
        END IF;
       RETURN NEW;
    END;
$$;


ALTER FUNCTION agilespacefresh.tr_axpconfigs_tstructs() OWNER TO agilespace;

--
-- TOC entry 842 (class 1255 OID 2004761)
-- Name: trg_axpeg_sendmsg(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.trg_axpeg_sendmsg() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
   	
    begin

insert into axactivemessages(eventdatetime,msgtype,fromuser,touser,displaytitle,displaycontent,effectivefrom,effectiveto,hlink_transid,hlink_params)
	select
	to_char(current_timestamp,'YYYYMMDDHH24MISSSS'),new.msgtype,new.fromuser,new.touser,new.msgtitle,new.message,current_date,
	new.effectiveto,new.hlink_transid,new.hlink_params;
	 
		return new;

end; 
$$;


ALTER FUNCTION agilespacefresh.trg_axpeg_sendmsg() OWNER TO agilespace;

--
-- TOC entry 888 (class 1255 OID 2004762)
-- Name: trg_axprocessdefv2(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.trg_axprocessdefv2() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
    declare 
   	v_rem_esc_sfrom varchar;
   	v_rem_esc_taskparam varchar;
   	
    begin
	    
	   select string_agg(sfrom,',') into v_rem_esc_sfrom  from (
    select distinct regexp_split_to_table(new.rem_esc_startfrom,',') sfrom)a;
   
   select string_agg(fname, ',') from (select	substring(unnest(string_to_array( v_rem_esc_sfrom , ',')), position('-(' in unnest(string_to_array( v_rem_esc_sfrom , ',')))+ 2, abs((position('-(' in unnest(string_to_array( v_rem_esc_sfrom , ',')))+ 2) - length(substring(unnest(string_to_array( v_rem_esc_sfrom , ',')), 1, length(unnest(string_to_array( v_rem_esc_sfrom , ',')))))))fname where v_rem_esc_sfrom is not null) a
    into v_rem_esc_taskparam;

        IF (TG_OP = 'INSERT')   THEN
		
        if length(v_rem_esc_taskparam)>2 then 
		new.taskparamsui = concat(new.taskparamsui,',',v_rem_esc_sfrom);
		new.taskparams=concat(new.taskparams,',',v_rem_esc_taskparam);
		end if;
		return new;
	end if;
		
		IF (TG_OP = 'UPDATE')  THEN
		if length(v_rem_esc_taskparam)>2 then 
		new.taskparamsui = concat(new.taskparamsui,',',v_rem_esc_sfrom);
		new.taskparams=concat(new.taskparams,',',v_rem_esc_taskparam);
	end if;
		
		return new;
	end if;

	
	
end; 
$$;


ALTER FUNCTION agilespacefresh.trg_axprocessdefv2() OWNER TO agilespace;

--
-- TOC entry 889 (class 1255 OID 2004763)
-- Name: trg_manage_taskusers(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.trg_manage_taskusers() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF TG_OP = 'INSERT' OR TG_OP = 'UPDATE' THEN
        -- Insert or update taskusers
        IF EXISTS (SELECT 1 FROM taskusers WHERE taskid = NEW.taskid) THEN
            UPDATE taskusers
            SET usern = NEW.lastactionby
            WHERE taskid = NEW.taskid;
        ELSE
            INSERT INTO taskusers (taskid, usern)
            VALUES (NEW.taskid, NEW.lastactionby);
        END IF;
    ELSIF TG_OP = 'DELETE' THEN
        -- Delete corresponding record from taskusers
        DELETE FROM taskusers
        WHERE taskid = OLD.taskid;
    END IF;
 
    RETURN NULL; -- For AFTER triggers, result is ignored
END;
$$;


ALTER FUNCTION agilespacefresh.trg_manage_taskusers() OWNER TO agilespace;

--
-- TOC entry 890 (class 1255 OID 2004764)
-- Name: trg_update_taskf_hdr_from_accept(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_accept() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_cnt INT;
BEGIN
    -- Update taskf_hdr based on the new values from taskaccepthdr
    UPDATE taskf_hdr
    SET 
        lastaction = NEW.status,
        lastactionby = NEW.acceptedby,
        lastactiondate = NEW.acceptedon,
        lastactiontime=new.acccepttime
    WHERE taskid = NEW.taskid;
 
    -- Check if entry already exists in taskusers
    SELECT COUNT(1) INTO v_cnt
    FROM taskusers
    WHERE taskid = NEW.taskid AND usern = NEW.acceptedby;
    IF v_cnt = 0 THEN
        -- Insert into taskusers only if it does not exist
        INSERT INTO taskusers (taskid, usern)
        VALUES (NEW.taskid, NEW.acceptedby);
    END IF;
 
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.trg_update_taskf_hdr_from_accept() OWNER TO agilespace;

--
-- TOC entry 891 (class 1255 OID 2004765)
-- Name: trg_update_taskf_hdr_from_close(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_close() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_cnt INT;
BEGIN
    -- Update taskf_hdr based on the new values from taskaccepthdr
    UPDATE taskf_hdr
    SET 
        lastaction = NEW.status,
        lastactionby = NEW.closedby,
        lastactiondate = NEW.taskclosedate,
        lastactionremarks=new.remarks,
lastactiontime=new.closetime
    WHERE taskid = NEW.taskid;
    -- Check if entry already exists in taskusers
    SELECT COUNT(1) INTO v_cnt
    FROM taskusers
   WHERE taskid = NEW.taskid AND usern = NEW.closedby;
    IF v_cnt = 0 THEN
        -- Insert into taskusers only if it does not exist
       INSERT INTO taskusers (taskid, usern)
       VALUES (NEW.taskid, NEW.closedby);
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.trg_update_taskf_hdr_from_close() OWNER TO agilespace;

--
-- TOC entry 865 (class 1255 OID 2004766)
-- Name: trg_update_taskf_hdr_from_complete(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_complete() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_cnt INT;
BEGIN
    -- Update taskf_hdr based on the new values from taskaccepthdr
    UPDATE taskf_hdr
    SET 
        lastaction = NEW.status,
        lastactionby = NEW.completedby,
        lastactiondate = NEW.cdate,
        lastactionremarks=new.comments,
        lastactiontime=new.ctime
    WHERE taskid = NEW.taskid;
    -- Check if entry already exists in taskusers
    SELECT COUNT(1) INTO v_cnt
    FROM taskusers
    WHERE taskid = NEW.taskid AND usern = NEW.completedby;
    IF v_cnt = 0 THEN
        -- Insert into taskusers only if it does not exist
        INSERT INTO taskusers (taskid, usern)
        VALUES (NEW.taskid, NEW.completedby);
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.trg_update_taskf_hdr_from_complete() OWNER TO agilespace;

--
-- TOC entry 866 (class 1255 OID 2004767)
-- Name: trg_update_taskf_hdr_from_delay(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_delay() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_cnt INT;
BEGIN
    -- Update taskf_hdr based on the new values from taskaccepthdr
    UPDATE taskf_hdr
    SET 
        lastaction = NEW.status,
        lastactionby = NEW.rescheduledby,
        lastactiondate = NEW.rescheduledon,
        lastactionremarks=NEW.Reason,
       lastactiontime=new.rescheduledtime
    WHERE taskid = NEW.taskid;
    -- Check if entry already exists in taskusers
    SELECT COUNT(1) INTO v_cnt
    FROM taskusers
   WHERE taskid = NEW.taskid AND usern = NEW.rescheduledby;
    IF v_cnt = 0 THEN
        -- Insert into taskusers only if it does not exist
       INSERT INTO taskusers (taskid, usern)
       VALUES (NEW.taskid, NEW.rescheduledby);
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.trg_update_taskf_hdr_from_delay() OWNER TO agilespace;

--
-- TOC entry 892 (class 1255 OID 2004768)
-- Name: trg_update_taskf_hdr_from_drop(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_drop() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_cnt INT;
BEGIN
    -- Update taskf_hdr based on the new values from taskaccepthdr
    UPDATE taskf_hdr
    SET 
        lastaction = NEW.status,
        lastactionby = NEW.droppedby,
        lastactiondate = NEW.dropdate,
        lastactionremarks=new.reason,
lastactiontime=new.droptime
    WHERE taskid = NEW.taskid;
    -- Check if entry already exists in taskusers
    SELECT COUNT(1) INTO v_cnt
    FROM taskusers
   WHERE taskid = NEW.taskid AND usern = NEW.droppedby;
    IF v_cnt = 0 THEN
        -- Insert into taskusers only if it does not exist
       INSERT INTO taskusers (taskid, usern)
       VALUES (NEW.taskid, NEW.droppedby);
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.trg_update_taskf_hdr_from_drop() OWNER TO agilespace;

--
-- TOC entry 893 (class 1255 OID 2004769)
-- Name: trg_update_taskf_hdr_from_reassign(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_reassign() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_cnt INT;
BEGIN
    -- Update taskf_hdr based on the new values from taskaccepthdr
    UPDATE taskf_hdr
    SET 
        lastaction = NEW.status,
        lastactionby = NEW.createdby,
        lastactiondate = NEW.reassigneddate,
        lastactionremarks=new.reasonforassigning
    WHERE taskid = NEW.taskid;
    -- Check if entry already exists in taskusers
    SELECT COUNT(1) INTO v_cnt
    FROM taskusers
   WHERE taskid = NEW.taskid AND usern = NEW.createdby;
    IF v_cnt = 0 THEN
        -- Insert into taskusers only if it does not exist
       INSERT INTO taskusers (taskid, usern)
       VALUES (NEW.taskid, NEW.createdby);
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.trg_update_taskf_hdr_from_reassign() OWNER TO agilespace;

--
-- TOC entry 894 (class 1255 OID 2004770)
-- Name: trg_update_taskf_hdr_from_return(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_return() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_cnt INT;
BEGIN
    -- Update taskf_hdr based on the new values from taskaccepthdr
    UPDATE taskf_hdr
    SET 
        lastaction = NEW.status,
        lastactionby = NEW.createdby,
        lastactiondate = NEW.returnedon,
        lastactionremarks=new.remarks,
lastactiontime=new.returntime,
lastactionto=new.returnto
    WHERE taskid = NEW.taskid;
    -- Check if entry already exists in taskusers
    SELECT COUNT(1) INTO v_cnt
    FROM taskusers
   WHERE taskid = NEW.taskid AND usern = NEW.createdby;
    IF v_cnt = 0 THEN
        -- Insert into taskusers only if it does not exist
       INSERT INTO taskusers (taskid, usern)
       VALUES (NEW.taskid, NEW.createdby);
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.trg_update_taskf_hdr_from_return() OWNER TO agilespace;

--
-- TOC entry 895 (class 1255 OID 2004771)
-- Name: trg_update_taskf_hdr_from_send(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_send() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_cnt INT;
BEGIN
    -- Update taskf_hdr based on the new values from taskaccepthdr
    UPDATE taskf_hdr
    SET 
        lastaction = NEW.status,
        lastactionby = NEW.forwardedby,
        lastactiondate = NEW.senton,
        lastactionremarks=new.comments,
        lastactiontime=new.senttime,
        lastactionto=new.sendto
    WHERE taskid = NEW.taskid;
    -- Check if entry already exists in taskusers
    SELECT COUNT(1) INTO v_cnt
    FROM taskusers
   WHERE taskid = NEW.taskid AND usern = NEW.forwardedby;
    IF v_cnt = 0 THEN
        -- Insert into taskusers only if it does not exist
       INSERT INTO taskusers (taskid, usern)
       VALUES (NEW.taskid, NEW.forwardedby);
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.trg_update_taskf_hdr_from_send() OWNER TO agilespace;

--
-- TOC entry 896 (class 1255 OID 2004772)
-- Name: trg_update_taskf_hdr_from_statusupdate(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_statusupdate() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_cnt INT;
BEGIN
    -- Update taskf_hdr based on the new values from taskaccepthdr
    UPDATE taskf_hdr
    SET 
        lastaction = NEW.status,
        lastactionby = NEW.pusername,
        lastactiondate = NEW.updatedon,
        lastactiontime=new.updatetime,
        lastactionremarks=new.Remarks
    WHERE taskid = NEW.taskid;
    -- Check if entry already exists in taskusers
    SELECT COUNT(1) INTO v_cnt
    FROM taskusers
    WHERE taskid = NEW.taskid AND usern = NEW.pusername;
    IF v_cnt = 0 THEN
        -- Insert into taskusers only if it does not exist
        INSERT INTO agilespace.taskusers (taskid, usern)
        VALUES (NEW.taskid, NEW.pusername);
    END IF;
 
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.trg_update_taskf_hdr_from_statusupdate() OWNER TO agilespace;

--
-- TOC entry 897 (class 1255 OID 2004773)
-- Name: trg_update_taskf_hdr_status_update(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.trg_update_taskf_hdr_status_update() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_cnt INT;
BEGIN
    -- Update taskf_hdr based on the new values from taskaccepthdr
    UPDATE taskf_hdr
    SET 
        sttausupdateremarks=new.Remarks
    WHERE taskid = NEW.taskid;
    -- Check if entry already exists in taskusers
    SELECT COUNT(1) INTO v_cnt
    FROM taskusers
   WHERE taskid = NEW.taskid AND usern = NEW.pusername;
    IF v_cnt = 0 THEN
        -- Insert into taskusers only if it does not exist
       INSERT INTO taskusers (taskid, usern)
       VALUES (NEW.taskid, NEW.pusername);
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.trg_update_taskf_hdr_status_update() OWNER TO agilespace;

--
-- TOC entry 898 (class 1255 OID 2004774)
-- Name: trigger_fn_updateaxuser(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.trigger_fn_updateaxuser() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
	delete from axuserlevelgroups where axusername = new.user_name_onroles;
	delete from users_roles where user_name_onroles = new.user_name_onroles;
	
	insert into axuserlevelgroups (username, usergroup, startdate, enddate, axusername, axusergroup, axusersid, axuserlevelgroupsid)
	(      
      select a.user_name_onroles, a.user_roles_name as usergroup, a.effective_from, a.effective_to, a.user_name_onroles, 
	  a.user_roles_name as axusergroup,
      a.axusersid,  nextval('manual_sequence') from users_logincontrolsroles a       
      where a.users_logincontrolsid = new.users_logincontrolsid and upper(a.add_remove_roles) != 'REMOVE' ) ;
	  
	insert into USERS_ROLES ( users_rolesid, users_logindetailsid, users_role_name, effective_from, effective_to, user_name_onroles)
	(
		select nextval('manual_sequence') as users_rolesid, a.users_logindetailsid, a.user_roles_name, a.effective_from, a.effective_to, 
	a.user_name_onroles as user_name_onroles
	from  users_logincontrolsroles a where a.users_logincontrolsid = new.users_logincontrolsid and upper(a.add_remove_roles) != 'REMOVE'  ) ;

    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.trigger_fn_updateaxuser() OWNER TO agilespace;

--
-- TOC entry 899 (class 1255 OID 2004775)
-- Name: trigger_fn_updateaxuserbasic(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.trigger_fn_updateaxuserbasic() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE 
	musersname varchar(50);
	mactive varchar(1):='F';
	mbasic varchar(1):='F';
	mpersonal varchar(1):='F';
	mdataaccess varchar(1):='F';
	mpassword varchar(1):='F';
	madmin varchar(1):='F';
	mgroups varchar(1):='F';
	mactors varchar(1):='F';
	muserroles varchar(1):='F';
BEGIN

	select  substr(new.axp_dcstate,1,1),substr(new.axp_dcstate,2,1),substr(new.axp_dcstate,3,1), 
			substr(new.axp_dcstate,4,1),substr(new.axp_dcstate,5,1),substr(new.axp_dcstate,6,1),
			substr(new.axp_dcstate,7,1),substr(new.axp_dcstate,8,1),substr(new.axp_dcstate,9,1)
		into mactive, mbasic, mpersonal, mdataaccess, mpassword, madmin, mgroups, mactors, muserroles;
	
	select user_name into musersname from  users_logindetails a where a.users_logindetailsid = new.user_name;

	if new.present_isactive != new.isactive then
		update users_logindetails set isactive = new.isactive where user_name  = musersname;
		update axusers set (actflag,active ) = (select new.isactive, new.isactive from dual)
		where username = musersname ;
	end if;		

	if new.isactive = 'T' then 
	    
		if mbasic = 'T' then 
			update users_logindetails set (login_name, user_mobilenumber, user_email) = 
			(select new.login_name, new.user_mobilenumber, new.user_email from dual ) 
			where user_name  = musersname;
			
			update axusers set (nickname, mobile, email ) = 
			(select new.login_name, new.user_mobilenumber, new.user_email from dual )
			where username = musersname ;				
		end if;
	
		if mpersonal = 'T' then 
			update users_logindetails set 
			( primary_reporting_manager, team_leader,users_branchlocationname)= 
			(select new.primary_reporting_manager, new.team_leader, new.users_branchlocationname
				from dual
			)
			where user_name = musersname;
		
			update axusers set (  reportingto, team_leader, branchlocationname) =
			(select new.primary_reporting_manager, new.team_leader, 
	    	(select users_branchlocationname from users_branchlocations a where a.users_branchlocationsid = new.users_branchlocationname)
				from dual
			)
			where username = musersname;				
		end if;
	
		if mdataaccess = 'T' then 
		
			update users_logindetails set 
			( access_alldata, access_teamsdata, access_subordinatesdata,access_officelocation) =
			(select new.access_alldata, new.access_teamsdata, new.access_subordinatesdata, new.access_officelocation
				from dual
			)
			where user_name = musersname;
	
			update axusers set ( access_alldata, access_teamsdata, access_subordinatesdata, access_officelocation) =
			(select new.access_alldata, new.access_teamsdata, new.access_subordinatesdata,  new.access_officelocation
			from dual)
			where username = musersname;
		
		end if;
	
		if mpassword = 'T' then 
		
			update axusers set pwd = new.new_password, ppassword = new.ppassword, 
			password =  new.ppassword where username = musersname;      
	
		end if;
	
		if madmin = 'T' then 
			
			update users_logindetails set consolidated_adminaccess = new.consolidated_adminaccess  where user_name = musersname;
		
			update axusers set ( build, manage, workflow, tools, import_data, export_data) = 
					(select case when position( 'developer studio' in lower(new.consolidated_adminaccess) ) = 0  then 'F' else 'T' end  as build, 
							case when position( 'config studio' in lower(new.consolidated_adminaccess)  ) = 0 then 'F' else 'T' end as manage, 
							case when position( 'config studio' in lower(new.consolidated_adminaccess) ) = 0 then 'F' else 'T' end  as workflow,   
							case when position( 'developer studio' in lower(new.consolidated_adminaccess)  ) = 0 then 'F' else 'T' end tools, 
							case when position( 'import data' in lower(new.consolidated_adminaccess)  ) = 0 then 'F' else 'T' end as import_data, 
							case when position( 'export data' in lower(new.consolidated_adminaccess)  ) = 0 then 'F' else 'T' end as export_data
					from dual ) where username = musersname;
				
		end if;
	
		if mgroups = 'T' then
		
			update users_logindetails set consolidated_usergroups = new.consolidated_usergroups where user_name = musersname;
		
	        update axusers set consolidated_usergroups = new.consolidated_usergroups where username =  musersname;
	       
		end if;
	
		if mactors = 'T' then 		
	
			update users_logindetails set consolidated_actors = new.consolidated_actors where user_name = musersname; 
		
	        update axusers set actors = new.consolidated_actors where username = musersname;    	
	       
	       
		end if;
	
		if muserroles = 'T' then 
	
			update users_logindetails set consolidated_user_roles  = new.consolidated_user_roles where user_name = musersname; 
		
	        update axusers set allusergroup  = new.consolidated_user_roles  where username = musersname;    	
	             
	     end if;
		
	
	end if;

    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.trigger_fn_updateaxuserbasic() OWNER TO agilespace;

--
-- TOC entry 900 (class 1255 OID 2004776)
-- Name: update_comma_separated_column(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.update_comma_separated_column() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    NEW.comma_separated_column := (
        CASE 
            WHEN NEW.comma_separated_column IS NULL THEN
                NEW.value_column
            ELSE
                NEW.comma_separated_column || ',' || NEW.value_column
        END
    );

    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.update_comma_separated_column() OWNER TO agilespace;

--
-- TOC entry 901 (class 1255 OID 2004777)
-- Name: update_onhold_endtime(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.update_onhold_endtime() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Check if the task was previously 'on hold' and is moving to another status
    IF OLD.status = 'On hold' AND NEW.status IN ('Completed', 'Ongoing', 'Dropped', 'Assigned', 'Informed delay', 'Closed') THEN
        -- Update the onholdend and onholdendtime based on the current timestamp
        -- Update the onholdend and onholdendtime in the taskputonhold_hdr table based on taskname
        UPDATE taskputonhold_hdr
        SET onholdend = CURRENT_DATE, 
            onholdendtime = CURRENT_TIME
        WHERE taskid = NEW.taskid;
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.update_onhold_endtime() OWNER TO agilespace;

--
-- TOC entry 902 (class 1255 OID 2004778)
-- Name: update_onhold_endtime_taskstatus(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.update_onhold_endtime_taskstatus() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Check if the task was previously 'on hold' and is moving to another status
    IF OLD.status = 'On hold' AND NEW.status IN ('Completed', 'Ongoing', 'Dropped', 'Reassigned', 'Informed delay', 'Closed') THEN
        -- Update the onholdend and onholdendtime based on the current timestamp
        -- Update the onholdend and onholdendtime in the taskputonhold_hdr table based on taskname
        UPDATE taskstatus 
        SET onholdenddate = CURRENT_DATE, 
            onholdendtime = CURRENT_TIME
        WHERE taskid = NEW.taskid;
    END IF;
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.update_onhold_endtime_taskstatus() OWNER TO agilespace;

--
-- TOC entry 871 (class 1255 OID 2004779)
-- Name: update_task_status_on_completion(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.update_task_status_on_completion() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Update status to 'Completed' when task is inserted in taskcomplete_hdr
    UPDATE taskf_hdr
    SET status = 'Completed'
    WHERE taskid = NEW.taskid;
    -- Return the new row after update
    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.update_task_status_on_completion() OWNER TO agilespace;

--
-- TOC entry 872 (class 1255 OID 2004780)
-- Name: update_viewby_column(); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.update_viewby_column() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
BEGIN
    -- Check if the new user is already in the viewby list
    IF POSITION(NEW.users IN COALESCE(OLD.users,'')) = 0 THEN
        NEW.users := (
            CASE 
                WHEN OLD.users IS NULL THEN
                    NEW.users
                ELSE
                    OLD.users || ',' || NEW.users
            END
        );
    ELSE
        NEW.users := OLD.users; -- Keep the old value if the user is already included
    END IF;

    RETURN NEW;
END;
$$;


ALTER FUNCTION agilespacefresh.update_viewby_column() OWNER TO agilespace;

--
-- TOC entry 873 (class 1255 OID 2004781)
-- Name: validate_and_normalize_time(text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.validate_and_normalize_time(time_text text) RETURNS time without time zone
    LANGUAGE plpgsql
    AS $_$
DECLARE
    parts text[];
    normalized_time text;
BEGIN
    -- Only hours (e.g., '5' or '05')
    IF time_text ~ '^\d{1,2}$' THEN
        normalized_time := lpad(time_text, 2, '0') || ':00:00';

    -- Hours and minutes (e.g., '5:16')
    ELSIF time_text ~ '^\d{1,2}:\d{2}$' THEN
        parts := string_to_array(time_text, ':');
        normalized_time := lpad(parts[1], 2, '0') || ':' || parts[2] || ':00';

    -- Hours, minutes, and seconds (e.g., '5:00:19')
    ELSIF time_text ~ '^\d{1,2}:\d{2}:\d{2}$' THEN
        parts := string_to_array(time_text, ':');
        normalized_time := lpad(parts[1], 2, '0') || ':' || parts[2] || ':' || parts[3];

    ELSE
        RAISE EXCEPTION 'Invalid time format! Please use H, H:MM, or H:MM:SS';
    END IF;

    RETURN normalized_time::time;

END;
$_$;


ALTER FUNCTION agilespacefresh.validate_and_normalize_time(time_text text) OWNER TO agilespace;

--
-- TOC entry 903 (class 1255 OID 2004782)
-- Name: validate_task_action(text, text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.validate_task_action(p_taskid text, p_action text) RETURNS void
    LANGUAGE plpgsql
    AS $$
DECLARE
    v_status TEXT;
BEGIN
    -- Get the current status of the task
    SELECT status INTO v_status FROM taskf_hdr WHERE taskname = p_taskid;
    -- Raise an error if the task does not exist
    IF v_status IS NULL THEN
        RAISE EXCEPTION 'Task ID % does not exist.', p_taskid;
    END IF;
    -- Enforce status rules
    CASE 
        -- Task must be accepted before it can be started or put on hold
        WHEN p_action IN ('start', 'putonhold') AND v_status <> 'Accepted' THEN
            RAISE EXCEPTION 'Task must be accepted before it can be started or put on hold.';
        -- Completed or Dropped tasks cannot be modified
        WHEN v_status IN ('Completed', 'Dropped') THEN
            RAISE EXCEPTION 'Cannot % task. The task is already %.', p_action, v_status;
        -- A task cannot be accepted again if it was put on hold
        WHEN p_action = 'accept' AND v_status = 'On Hold' THEN
            RAISE EXCEPTION 'A task that is put on hold cannot be accepted again.';
        -- A task that is already ongoing cannot be started again
        WHEN p_action = 'start' AND v_status = 'Ongoing' THEN
            RAISE EXCEPTION 'Task is already in progress. Cannot start again.';
        -- A task that is already on hold cannot be put on hold again
        WHEN p_action = 'putonhold' AND v_status = 'On Hold' THEN
            RAISE EXCEPTION 'Task is already on hold. Cannot put on hold again.';
    END CASE;
END;
$$;


ALTER FUNCTION agilespacefresh.validate_task_action(p_taskid text, p_action text) OWNER TO agilespace;

--
-- TOC entry 904 (class 1255 OID 2004783)
-- Name: validate_tasktype_subtype(text, text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.validate_tasktype_subtype(p_tasktype text, p_subtype text) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF EXISTS (
        SELECT 1 FROM tasktype
        WHERE type = p_tasktype AND subtype = p_subtype
    ) THEN
        RETURN 'F'; -- Already exists
    ELSE
        RETURN 'T';  -- It's safe to insert
    END IF;
END;
$$;


ALTER FUNCTION agilespacefresh.validate_tasktype_subtype(p_tasktype text, p_subtype text) OWNER TO agilespace;

--
-- TOC entry 905 (class 1255 OID 2004784)
-- Name: validate_tasktype_subtype(numeric, text, text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.validate_tasktype_subtype(record_id numeric, p_tasktype text, p_subtype text) RETURNS boolean
    LANGUAGE plpgsql
    AS $$
BEGIN
    IF EXISTS (
        SELECT 1 FROM tasktype
        WHERE type = p_tasktype AND subtype = p_subtype
    ) THEN
        RETURN 'F'; -- Already exists
    ELSE
        RETURN 'T';  -- It's safe to insert
    END IF;
END;
$$;


ALTER FUNCTION agilespacefresh.validate_tasktype_subtype(record_id numeric, p_tasktype text, p_subtype text) OWNER TO agilespace;

--
-- TOC entry 906 (class 1255 OID 2004785)
-- Name: validate_time_format(text); Type: FUNCTION; Schema: agilespacefresh; Owner: agilespace
--

CREATE FUNCTION agilespacefresh.validate_time_format(time_text text) RETURNS boolean
    LANGUAGE plpgsql
    AS $_$
BEGIN
    -- Check if the input matches the valid time format (HH:MI:SS or H:MI:SS)
     IF time_text ~ '^\d{1,2}$' OR
       time_text ~ '^\d{1,2}:\d{2}$' OR
       time_text ~ '^\d{1,2}:\d{2}:\d{2}$' THEN
        RETURN true;
    ELSE
        RAISE EXCEPTION 'Invalid time format! Please enter time in HH:MI:SS or H:MI:SS format.';
    END IF;
END;
$_$;


ALTER FUNCTION agilespacefresh.validate_time_format(time_text text) OWNER TO agilespace;

--
-- TOC entry 211 (class 1259 OID 2004786)
-- Name: a__cocompany_logo; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.a__cocompany_logo (
    recordid numeric(16,0),
    img bytea,
    blobno numeric(3,0),
    ftype character varying(4)
);


ALTER TABLE agilespacefresh.a__cocompany_logo OWNER TO agilespace;

--
-- TOC entry 212 (class 1259 OID 2004791)
-- Name: a__cohistory; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.a__cohistory (
    recordid numeric(16,0),
    modifieddate timestamp without time zone,
    username character varying(30),
    fieldname character varying(30),
    oldvalue character varying(250),
    newvalue character varying(250),
    rowno numeric(38,0),
    delflag character varying(1),
    modno numeric(10,0),
    frameno numeric(10,0),
    parentrow numeric(10,0),
    tablerecid numeric(16,0),
    idvalue numeric(16,0),
    oldidvalue numeric(16,0),
    transdeleted character varying(5),
    newtrans character varying(5),
    canceltrans character varying(1),
    cancelremarks character varying(250)
);


ALTER TABLE agilespacefresh.a__cohistory OWNER TO agilespace;

--
-- TOC entry 213 (class 1259 OID 2004796)
-- Name: a__naeventimg; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.a__naeventimg (
    recordid numeric(16,0),
    img bytea,
    blobno numeric(3,0),
    ftype character varying(4)
);


ALTER TABLE agilespacefresh.a__naeventimg OWNER TO agilespace;

--
-- TOC entry 214 (class 1259 OID 2004801)
-- Name: a__ulhistory; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.a__ulhistory (
    recordid numeric(16,0),
    modifieddate timestamp without time zone,
    username character varying(30),
    fieldname character varying(30),
    oldvalue character varying(250),
    newvalue character varying(250),
    rowno numeric(38,0),
    delflag character varying(1),
    modno numeric(10,0),
    frameno numeric(10,0),
    parentrow numeric(10,0),
    tablerecid numeric(16,0),
    idvalue numeric(16,0),
    oldidvalue numeric(16,0),
    transdeleted character varying(5),
    newtrans character varying(5),
    canceltrans character varying(1),
    cancelremarks character varying(250)
);


ALTER TABLE agilespacefresh.a__ulhistory OWNER TO agilespace;

--
-- TOC entry 215 (class 1259 OID 2004806)
-- Name: ad_prhistory; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ad_prhistory (
    recordid numeric(16,0),
    modifieddate timestamp without time zone,
    username character varying(30),
    fieldname character varying(30),
    oldvalue character varying(250),
    newvalue character varying(250),
    rowno numeric(38,0),
    delflag character varying(1),
    modno numeric(10,0),
    frameno numeric(10,0),
    parentrow numeric(10,0),
    tablerecid numeric(16,0),
    idvalue numeric(16,0),
    oldidvalue numeric(16,0),
    transdeleted character varying(5),
    newtrans character varying(5),
    canceltrans character varying(1),
    cancelremarks character varying(250)
);


ALTER TABLE agilespacefresh.ad_prhistory OWNER TO agilespace;

--
-- TOC entry 216 (class 1259 OID 2004811)
-- Name: astcpattach; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.astcpattach (
    recordid numeric(16,0),
    filename character varying(200),
    template bytea,
    blobno numeric(3,0),
    recid character varying(217)
);


ALTER TABLE agilespacefresh.astcpattach OWNER TO agilespace;

--
-- TOC entry 217 (class 1259 OID 2004816)
-- Name: attendance; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.attendance (
    attendanceid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    empname character varying(50),
    docid character varying(20),
    punchdate date,
    latitude character varying(50),
    longitude character varying(50),
    intime character varying(50),
    outtime character varying(50),
    punchin character varying(50),
    punchout character varying(50),
    signin_lat character varying(50),
    signin_long character varying(50),
    signout_lat character varying(50),
    signout_long character varying(50),
    userr character varying(50)
);


ALTER TABLE agilespacefresh.attendance OWNER TO agilespace;

--
-- TOC entry 218 (class 1259 OID 2004821)
-- Name: ax_configure_fast_prints; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_configure_fast_prints (
    ax_configure_fast_printsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    template_name character varying(250),
    template_validname character varying(10),
    form_templateui character varying(50),
    form_template character varying(50),
    form_caption character varying(250),
    form_name character varying(250),
    form_source character varying(20),
    tstructsql text,
    master_data_source character varying(250),
    mssqltext text,
    sql_text text,
    paper_size character varying(250),
    pheight numeric(15,0),
    paper_width numeric(15,0),
    report_outputformat character varying(20),
    print_app_logo character varying(1),
    print_app_title character varying(1),
    print_app_subtitle character varying(1),
    autoprint character varying(1),
    report_title text,
    report_title_height numeric(15,0),
    rt_image_leftui character varying(250),
    rt_image_left character varying(100),
    rt_image_left_height numeric(15,0),
    rt_image_left_width numeric(15,2),
    rt_image_rightui character varying(250),
    rt_image_right character varying(250),
    rt_image_right_height numeric(15,0),
    rt_image_right_width numeric(10,2),
    page_header text,
    page_header_height numeric(15,0),
    ph_image_leftui character varying(250),
    ph_image_left character varying(250),
    ph_image_left_height numeric(15,0),
    ph_image_left_width numeric(10,2),
    ph_image_rightui character varying(250),
    ph_image_right character varying(250),
    ph_image_right_height numeric(15,0),
    ph_image_right_width numeric(10,2),
    fr_body text,
    fr_body_height numeric(15,0),
    detail_data_frame_type character varying(30),
    detail_source character varying(20),
    detail_data_source character varying(250),
    detail_datasource_sql_text text,
    detail_qry_cols character varying(200),
    tbl_detail_band character varying(8000),
    tbl_fstyle character varying(20),
    page_footer text,
    page_footer_height numeric(15,0),
    pf_image_leftui character varying(250),
    pf_image_left character varying(50),
    pf_image_left_height numeric(15,0),
    pf_image_left_width numeric(10,2),
    pf_image_rightui character varying(250),
    pf_image_right character varying(50),
    pf_image_right_height numeric(15,0),
    pf_image_right_width numeric(10,2),
    report_summary text,
    report_summary_height numeric(15,0),
    rs_image_leftui character varying(250),
    rs_image_left character varying(50),
    rs_image_left_height numeric(15,0),
    rs_image_left_width numeric(10,2),
    rs_image_rightui character varying(250),
    rs_image_right character varying(100),
    rs_image_right_height numeric(15,0),
    rs_image_right_width numeric(10,2),
    annx_data_src character varying(100),
    tbl_annexure character varying(8000),
    iview_name character varying(250),
    iviewsql text,
    key_field character varying(250),
    fr_parameter character varying(4000),
    detail_data_columnheadstring character varying(4000)
);


ALTER TABLE agilespacefresh.ax_configure_fast_prints OWNER TO agilespace;

--
-- TOC entry 219 (class 1259 OID 2004826)
-- Name: ax_entity_relseq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.ax_entity_relseq
    START WITH 101
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.ax_entity_relseq OWNER TO agilespace;

--
-- TOC entry 220 (class 1259 OID 2004827)
-- Name: ax_homebuild_master; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_homebuild_master (
    homebuild_id integer NOT NULL,
    title character varying(255),
    widget_type character varying(255),
    content text,
    target character varying(255),
    is_private character varying(1) DEFAULT 'N'::character varying,
    created_by character varying(255),
    updated_by character varying(255),
    responsibility character varying(255),
    is_deleted character varying(1) DEFAULT 'N'::character varying,
    is_lock character varying(1) DEFAULT 'N'::character varying,
    order_by numeric(10,0),
    created_on timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_on timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    is_migrated character varying(1) DEFAULT 'N'::character varying
);


ALTER TABLE agilespacefresh.ax_homebuild_master OWNER TO agilespace;

--
-- TOC entry 221 (class 1259 OID 2004838)
-- Name: ax_homebuild_master_homebuild_id_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.ax_homebuild_master_homebuild_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.ax_homebuild_master_homebuild_id_seq OWNER TO agilespace;

--
-- TOC entry 6763 (class 0 OID 0)
-- Dependencies: 221
-- Name: ax_homebuild_master_homebuild_id_seq; Type: SEQUENCE OWNED BY; Schema: agilespacefresh; Owner: agilespace
--

ALTER SEQUENCE agilespacefresh.ax_homebuild_master_homebuild_id_seq OWNED BY agilespacefresh.ax_homebuild_master.homebuild_id;


--
-- TOC entry 222 (class 1259 OID 2004839)
-- Name: ax_homebuild_master_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.ax_homebuild_master_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.ax_homebuild_master_seq OWNER TO agilespace;

--
-- TOC entry 223 (class 1259 OID 2004840)
-- Name: ax_homebuild_responsibility; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_homebuild_responsibility (
    homebuild_id integer,
    responsibility character varying(255),
    responsibility_id numeric(10,0)
);


ALTER TABLE agilespacefresh.ax_homebuild_responsibility OWNER TO agilespace;

--
-- TOC entry 224 (class 1259 OID 2004843)
-- Name: ax_homebuild_saved; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_homebuild_saved (
    homebuild_id integer NOT NULL,
    title character varying(255),
    widget_type character varying(255),
    content text,
    target character varying(255),
    is_private character varying(1) DEFAULT 'N'::character varying,
    created_by character varying(255),
    updated_by character varying(255),
    responsibility character varying(255),
    is_deleted character varying(1) DEFAULT 'N'::character varying,
    is_lock character varying(1) DEFAULT 'N'::character varying,
    order_by numeric(10,0),
    is_publish character varying(1) DEFAULT 'N'::character varying,
    parent_homebuild_id numeric(10,0),
    created_on timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_on timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    is_migrated character varying(1) DEFAULT 'N'::character varying
);


ALTER TABLE agilespacefresh.ax_homebuild_saved OWNER TO agilespace;

--
-- TOC entry 225 (class 1259 OID 2004855)
-- Name: ax_homebuild_saved_homebuild_id_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.ax_homebuild_saved_homebuild_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.ax_homebuild_saved_homebuild_id_seq OWNER TO agilespace;

--
-- TOC entry 6764 (class 0 OID 0)
-- Dependencies: 225
-- Name: ax_homebuild_saved_homebuild_id_seq; Type: SEQUENCE OWNED BY; Schema: agilespacefresh; Owner: agilespace
--

ALTER SEQUENCE agilespacefresh.ax_homebuild_saved_homebuild_id_seq OWNED BY agilespacefresh.ax_homebuild_saved.homebuild_id;


--
-- TOC entry 226 (class 1259 OID 2004856)
-- Name: ax_homebuild_saved_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.ax_homebuild_saved_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.ax_homebuild_saved_seq OWNER TO agilespace;

--
-- TOC entry 227 (class 1259 OID 2004857)
-- Name: ax_homebuild_sd_responsibility; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_homebuild_sd_responsibility (
    homebuild_id integer,
    responsibility character varying(255),
    responsibility_id numeric(10,0)
);


ALTER TABLE agilespacefresh.ax_homebuild_sd_responsibility OWNER TO agilespace;

--
-- TOC entry 228 (class 1259 OID 2004860)
-- Name: ax_hp_user_level_widget; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_hp_user_level_widget (
    page_id numeric,
    widgets text,
    username character varying(255),
    is_deleted character varying(1) DEFAULT 'N'::character varying,
    created_on timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_on timestamp without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE agilespacefresh.ax_hp_user_level_widget OWNER TO agilespace;

--
-- TOC entry 229 (class 1259 OID 2004868)
-- Name: ax_htmlplugins; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_htmlplugins (
    name character varying(200) NOT NULL,
    htmltext text,
    context character varying(20)
);


ALTER TABLE agilespacefresh.ax_htmlplugins OWNER TO agilespace;

--
-- TOC entry 230 (class 1259 OID 2004873)
-- Name: inbound; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.inbound (
    inboundid integer NOT NULL,
    filename character varying(100),
    recdon character varying(30),
    transid character varying(5),
    instatus character varying(250)
);


ALTER TABLE agilespacefresh.inbound OWNER TO agilespace;

--
-- TOC entry 231 (class 1259 OID 2004876)
-- Name: tstructs; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.tstructs (
    name character varying(15) NOT NULL,
    caption character varying(2000),
    props bytea,
    blobno numeric(3,0) NOT NULL,
    updatedon character varying(25),
    createdon character varying(25),
    importedon character varying(25),
    createdby character varying(25),
    updatedby character varying(25),
    importedby character varying(25),
    readonly character varying(1),
    updusername character varying(25),
    workflow character varying(1),
    runtimetstruct character varying(1),
    runtimemod character varying(1)
);


ALTER TABLE agilespacefresh.tstructs OWNER TO agilespace;

--
-- TOC entry 232 (class 1259 OID 2004881)
-- Name: ax_inbound_status; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.ax_inbound_status AS
 SELECT a.filename,
    (a.recdon)::date AS recdon,
    (a.recdon)::date AS indate,
    a.transid,
    b.caption AS tstructname,
    a.instatus
   FROM agilespacefresh.inbound a,
    agilespacefresh.tstructs b
  WHERE ((a.transid)::text = (b.name)::text);


ALTER TABLE agilespacefresh.ax_inbound_status OWNER TO agilespace;

--
-- TOC entry 233 (class 1259 OID 2004885)
-- Name: ax_layoutdesign; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_layoutdesign (
    design_id numeric(16,0) NOT NULL,
    transid character varying(255),
    module character varying(255),
    content text,
    created_by character varying(255),
    updated_by character varying(255),
    is_deleted character varying(1) DEFAULT 'N'::character varying,
    is_private character varying(1) DEFAULT 'N'::character varying,
    created_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    is_migrated character varying(1) DEFAULT 'N'::character varying
);


ALTER TABLE agilespacefresh.ax_layoutdesign OWNER TO agilespace;

--
-- TOC entry 234 (class 1259 OID 2004895)
-- Name: ax_layoutdesign_saved; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_layoutdesign_saved (
    design_id numeric(16,0) NOT NULL,
    transid character varying(255),
    module character varying(255),
    content text,
    created_by character varying(255),
    updated_by character varying(255),
    is_deleted character varying(1) DEFAULT 'N'::character varying,
    created_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    is_migrated character varying(1) DEFAULT 'N'::character varying,
    is_publish character varying(1) DEFAULT 'N'::character varying,
    is_private character varying(1) DEFAULT 'N'::character varying,
    parent_design_id numeric(16,0),
    responsibility text,
    order_by numeric
);


ALTER TABLE agilespacefresh.ax_layoutdesign_saved OWNER TO agilespace;

--
-- TOC entry 235 (class 1259 OID 2004906)
-- Name: ax_layoutdesign_saved_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.ax_layoutdesign_saved_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.ax_layoutdesign_saved_seq OWNER TO agilespace;

--
-- TOC entry 236 (class 1259 OID 2004907)
-- Name: ax_layoutdesign_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.ax_layoutdesign_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.ax_layoutdesign_seq OWNER TO agilespace;

--
-- TOC entry 237 (class 1259 OID 2004908)
-- Name: ax_mobile_response; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_mobile_response (
    notification_id numeric(10,0),
    user_id character varying(255),
    response text,
    project_id character varying(255)
);


ALTER TABLE agilespacefresh.ax_mobile_response OWNER TO agilespace;

--
-- TOC entry 238 (class 1259 OID 2004913)
-- Name: ax_mobile_user; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_mobile_user (
    imei character varying(255),
    user_id character varying(255),
    project_id character varying(255),
    firebase_id character varying(255),
    groupname character varying(255),
    active character varying(1)
);


ALTER TABLE agilespacefresh.ax_mobile_user OWNER TO agilespace;

--
-- TOC entry 239 (class 1259 OID 2004918)
-- Name: ax_mobilenotify; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_mobilenotify (
    username character varying(50),
    projectname character varying(50),
    guid character varying(200),
    firebase_id character varying(500),
    imei_no character varying(50),
    status character varying(2)
);


ALTER TABLE agilespacefresh.ax_mobilenotify OWNER TO agilespace;

--
-- TOC entry 240 (class 1259 OID 2004923)
-- Name: ax_notify; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_notify (
    notification_id numeric(10,0) NOT NULL,
    title character varying(255),
    message text,
    actions text,
    fromuser character varying(255),
    broadcast character varying(1) DEFAULT 'N'::character varying,
    status character varying(255),
    created_by character varying(255),
    created_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    workflow_id character varying(255),
    project_id character varying(255),
    purge_on_first_action character varying(1) DEFAULT 'N'::character varying,
    notification_sent_datetime timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    recordid character varying(255),
    lno character varying(255),
    elno character varying(255)
);


ALTER TABLE agilespacefresh.ax_notify OWNER TO agilespace;

--
-- TOC entry 241 (class 1259 OID 2004932)
-- Name: ax_notify_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.ax_notify_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.ax_notify_seq OWNER TO agilespace;

--
-- TOC entry 242 (class 1259 OID 2004933)
-- Name: ax_notify_users; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_notify_users (
    notification_id numeric(10,0),
    user_id character varying(255),
    status character varying(255),
    project_id character varying(255)
);


ALTER TABLE agilespacefresh.ax_notify_users OWNER TO agilespace;

--
-- TOC entry 243 (class 1259 OID 2004938)
-- Name: ax_notify_workflow; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_notify_workflow (
    notification_id numeric(10,0),
    recordid character varying(255),
    app_level character varying(2),
    app_desc character varying(2),
    created_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    workflow_id character varying(255),
    project_id character varying(255),
    lno character varying(255),
    elno character varying(255)
);


ALTER TABLE agilespacefresh.ax_notify_workflow OWNER TO agilespace;

--
-- TOC entry 244 (class 1259 OID 2004944)
-- Name: outbound; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.outbound (
    outboundid integer NOT NULL,
    transid character varying(5) NOT NULL,
    recordid numeric(17,0) NOT NULL,
    oaction character varying(1),
    username character varying(50) NOT NULL,
    modifiedon character varying(30),
    senton character varying(30),
    sap_integration_status character varying(30)
);


ALTER TABLE agilespacefresh.outbound OWNER TO agilespace;

--
-- TOC entry 245 (class 1259 OID 2004947)
-- Name: ax_outbound_status; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.ax_outbound_status AS
 SELECT a.recordid AS filename,
    (a.senton)::date AS senton,
    (a.senton)::date AS outdate,
    a.transid,
    b.caption AS tstructname,
        CASE
            WHEN (a.senton IS NULL) THEN 'Pending'::text
            ELSE 'Sent'::text
        END AS outstatus
   FROM agilespacefresh.outbound a,
    agilespacefresh.tstructs b
  WHERE ((a.transid)::text = (b.name)::text);


ALTER TABLE agilespacefresh.ax_outbound_status OWNER TO agilespace;

--
-- TOC entry 246 (class 1259 OID 2004951)
-- Name: ax_page_responsibility; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_page_responsibility (
    page_id numeric,
    responsibility character varying(255),
    responsibility_id numeric
);


ALTER TABLE agilespacefresh.ax_page_responsibility OWNER TO agilespace;

--
-- TOC entry 247 (class 1259 OID 2004956)
-- Name: ax_page_saved; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_page_saved (
    page_id numeric(10,0) NOT NULL,
    title character varying(255),
    type character varying(255),
    module character varying(255),
    template character varying(255),
    page_menu character varying(255),
    content text,
    created_by character varying(255),
    updated_by character varying(255),
    is_deleted character varying(1) DEFAULT 'N'::character varying,
    created_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    is_migrated character varying(1) DEFAULT 'N'::character varying,
    is_lock character varying(1) DEFAULT 'N'::character varying,
    is_publish character varying(1) DEFAULT 'N'::character varying,
    is_private character varying(1) DEFAULT 'N'::character varying,
    is_default character varying(1) DEFAULT 'N'::character varying,
    parent_page_id numeric(10,0),
    responsibility text,
    order_by numeric,
    widget_groups character varying(1)
);


ALTER TABLE agilespacefresh.ax_page_saved OWNER TO agilespace;

--
-- TOC entry 248 (class 1259 OID 2004969)
-- Name: ax_page_saved_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.ax_page_saved_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.ax_page_saved_seq OWNER TO agilespace;

--
-- TOC entry 249 (class 1259 OID 2004970)
-- Name: ax_page_sd_responsibility; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_page_sd_responsibility (
    page_id numeric,
    responsibility character varying(255),
    responsibility_id numeric
);


ALTER TABLE agilespacefresh.ax_page_sd_responsibility OWNER TO agilespace;

--
-- TOC entry 250 (class 1259 OID 2004975)
-- Name: ax_page_template_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.ax_page_template_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.ax_page_template_seq OWNER TO agilespace;

--
-- TOC entry 251 (class 1259 OID 2004976)
-- Name: ax_page_templates; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_page_templates (
    template_id numeric(16,0) NOT NULL,
    title character varying(255),
    module character varying(255),
    content text,
    created_by character varying(255),
    updated_by character varying(255),
    is_deleted character varying(1) DEFAULT 'N'::character varying,
    created_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE agilespacefresh.ax_page_templates OWNER TO agilespace;

--
-- TOC entry 252 (class 1259 OID 2004984)
-- Name: ax_pages; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_pages (
    page_id numeric(10,0) NOT NULL,
    title character varying(255),
    type character varying(255),
    module character varying(255),
    template character varying(255),
    page_menu character varying(255),
    content text,
    created_by character varying(255),
    updated_by character varying(255),
    is_deleted character varying(1) DEFAULT 'N'::character varying,
    is_private character varying(1) DEFAULT 'N'::character varying,
    created_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    is_migrated character varying(1) DEFAULT 'N'::character varying,
    is_default character varying(1) DEFAULT 'N'::character varying,
    order_by numeric,
    widget_groups character varying(1)
);


ALTER TABLE agilespacefresh.ax_pages OWNER TO agilespace;

--
-- TOC entry 253 (class 1259 OID 2004995)
-- Name: ax_pages_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.ax_pages_seq
    START WITH 10
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.ax_pages_seq OWNER TO agilespace;

--
-- TOC entry 254 (class 1259 OID 2004996)
-- Name: ax_template_fast_prints; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_template_fast_prints (
    ax_template_fast_printsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    docid character varying(50)
);


ALTER TABLE agilespacefresh.ax_template_fast_prints OWNER TO agilespace;

--
-- TOC entry 255 (class 1259 OID 2005001)
-- Name: ax_user_settings; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_user_settings (
    username character varying(50),
    ir_config character varying(4000),
    appsettings character varying(4000)
);


ALTER TABLE agilespacefresh.ax_user_settings OWNER TO agilespace;

--
-- TOC entry 256 (class 1259 OID 2005006)
-- Name: ax_userconfigdata; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_userconfigdata (
    page character varying(100),
    struct character varying(100),
    keyname character varying(100),
    username character varying(100),
    value text
);


ALTER TABLE agilespacefresh.ax_userconfigdata OWNER TO agilespace;

--
-- TOC entry 257 (class 1259 OID 2005011)
-- Name: ax_wfcomments; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_wfcomments (
    ax_wfcommentsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    stransid character varying(10),
    wfid character varying(100),
    wfrole character varying(500),
    wfaction character varying(10),
    wfcomments character varying(250)
);


ALTER TABLE agilespacefresh.ax_wfcomments OWNER TO agilespace;

--
-- TOC entry 258 (class 1259 OID 2005016)
-- Name: ax_widg_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.ax_widg_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.ax_widg_seq OWNER TO agilespace;

--
-- TOC entry 259 (class 1259 OID 2005017)
-- Name: ax_widget; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_widget (
    widget_id integer NOT NULL,
    widget_type character varying(50),
    sub_type character varying(50),
    title character varying(255),
    sqltext text,
    tabletext text,
    attributes text,
    created_by character varying(255),
    created_on timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_on timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    charttype character varying(45),
    is_migrated character varying(1) DEFAULT 'N'::character varying,
    is_public character varying(1) DEFAULT 'N'::character varying
);


ALTER TABLE agilespacefresh.ax_widget OWNER TO agilespace;

--
-- TOC entry 260 (class 1259 OID 2005026)
-- Name: ax_widget_publish_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.ax_widget_publish_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.ax_widget_publish_seq OWNER TO agilespace;

--
-- TOC entry 261 (class 1259 OID 2005027)
-- Name: ax_widget_published; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_widget_published (
    widget_id numeric(16,0) NOT NULL,
    title character varying(255),
    widget_type character varying(255),
    content text,
    target character varying(255),
    is_private character varying(1) DEFAULT 'N'::character varying,
    created_by character varying(255),
    updated_by character varying(255),
    is_deleted character varying(1) DEFAULT 'N'::character varying,
    is_lock character varying(1) DEFAULT 'N'::character varying,
    order_by numeric,
    is_publish character varying(1) DEFAULT 'N'::character varying,
    parent_widget_id numeric,
    page_id numeric,
    created_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    is_migrated character varying(1) DEFAULT 'N'::character varying
);


ALTER TABLE agilespacefresh.ax_widget_published OWNER TO agilespace;

--
-- TOC entry 262 (class 1259 OID 2005039)
-- Name: ax_widget_responsibility; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_widget_responsibility (
    widget_id integer,
    responsibility character varying(255),
    responsibility_id integer
);


ALTER TABLE agilespacefresh.ax_widget_responsibility OWNER TO agilespace;

--
-- TOC entry 263 (class 1259 OID 2005042)
-- Name: ax_widget_saved; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ax_widget_saved (
    widget_id numeric(10,0) NOT NULL,
    title character varying(255),
    widget_type character varying(255),
    content text,
    target character varying(255),
    is_private character varying(1) DEFAULT 'N'::character varying,
    created_by character varying(255),
    updated_by character varying(255),
    is_deleted character varying(1) DEFAULT 'N'::character varying,
    is_lock character varying(1) DEFAULT 'N'::character varying,
    order_by numeric,
    is_publish character varying(1) DEFAULT 'N'::character varying,
    parent_widget_id numeric,
    page_id numeric,
    created_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    updated_on timestamp(6) without time zone DEFAULT CURRENT_TIMESTAMP,
    is_migrated character varying(1) DEFAULT 'N'::character varying
);


ALTER TABLE agilespacefresh.ax_widget_saved OWNER TO agilespace;

--
-- TOC entry 264 (class 1259 OID 2005054)
-- Name: ax_widget_saved_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.ax_widget_saved_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.ax_widget_saved_seq OWNER TO agilespace;

--
-- TOC entry 265 (class 1259 OID 2005055)
-- Name: ax_widget_widget_id_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.ax_widget_widget_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.ax_widget_widget_id_seq OWNER TO agilespace;

--
-- TOC entry 6765 (class 0 OID 0)
-- Dependencies: 265
-- Name: ax_widget_widget_id_seq; Type: SEQUENCE OWNED BY; Schema: agilespacefresh; Owner: agilespace
--

ALTER SEQUENCE agilespacefresh.ax_widget_widget_id_seq OWNED BY agilespacefresh.ax_widget.widget_id;


--
-- TOC entry 266 (class 1259 OID 2005056)
-- Name: axaction; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axaction (
    actionname character varying(50),
    structname character varying(8),
    structtype character varying(10),
    actnode text
);


ALTER TABLE agilespacefresh.axaction OWNER TO agilespace;

--
-- TOC entry 267 (class 1259 OID 2005061)
-- Name: axactivemessages; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axactivemessages (
    eventdatetime character varying(30),
    msgtype character varying(30),
    fromuser character varying(30),
    touser character varying(500),
    taskid character varying(15),
    tasktype character varying(30),
    processname character varying(500),
    taskname character varying(500),
    indexno numeric(10,0),
    keyfield character varying(30),
    keyvalue character varying(30),
    transid character varying(8),
    displaytitle character varying(500),
    displaycontent text,
    effectivefrom timestamp without time zone,
    effectiveto timestamp without time zone,
    html text,
    scripts text,
    hide character varying(1),
    displayicon character varying(200),
    hlink character varying(500),
    hlink_transid character varying(50),
    hlink_params character varying(2000),
    requestpayload text
);


ALTER TABLE agilespacefresh.axactivemessages OWNER TO agilespace;

--
-- TOC entry 268 (class 1259 OID 2005066)
-- Name: axactivetaskdata; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axactivetaskdata (
    eventdatetime character varying(30),
    taskid character varying(15),
    transid character varying(8),
    keyfield character varying(30),
    keyvalue character varying(500),
    datavalues character varying(4000)
);


ALTER TABLE agilespacefresh.axactivetaskdata OWNER TO agilespace;

--
-- TOC entry 269 (class 1259 OID 2005071)
-- Name: axactivetaskparams; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axactivetaskparams (
    eventdatetime character varying(30),
    taskid character varying(30),
    transid character varying(8),
    keyfield character varying(30),
    keyvalue character varying(500),
    taskstatus character varying(15),
    username character varying(30),
    tasktype character varying(500),
    taskname character varying(500),
    processname character varying(500),
    priorindex numeric(10,0),
    indexno numeric(10,0),
    subindexno numeric(10,0),
    recordid numeric(20,0),
    taskparams character varying(4000)
);


ALTER TABLE agilespacefresh.axactivetaskparams OWNER TO agilespace;

--
-- TOC entry 270 (class 1259 OID 2005076)
-- Name: axactivetasks; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axactivetasks (
    eventdatetime character varying(30),
    taskid character varying(15),
    processname character varying(500),
    tasktype character varying(30),
    taskname character varying(500),
    taskdescription character varying(4000),
    assigntorole character varying(50),
    transid character varying(8),
    keyfield character varying(30),
    execonapprove character varying(5),
    keyvalue character varying(500),
    transdata character varying(4000),
    fromrole character varying(30),
    fromuser character varying(30),
    touser character varying(500),
    priorindex numeric(10,0),
    priortaskname character varying(200),
    corpdimension character varying(10),
    orgdimension character varying(10),
    department character varying(30),
    grade character varying(10),
    datavalue character varying(4000),
    displayicon character varying(200),
    displaytitle character varying(500),
    displaysubtitle character varying(250),
    displaycontent text,
    displaybuttons character varying(250),
    groupfield character varying(4000),
    groupvalue character varying(4000),
    priorusername character varying(100),
    initiator character varying(100),
    mapfieldvalue character varying(4000),
    useridentificationfilter character varying(1000),
    useridentificationfilter_of character varying(1000),
    mapfield_group character varying(1000),
    mapfield character varying(1000),
    grouped character varying(1),
    indexno numeric(10,0),
    subindexno numeric(10,0),
    processowner character varying(100),
    assigntoflg character varying(1),
    assigntoactor character varying(1000),
    actorfilter text,
    recordid numeric(20,0),
    processownerflg numeric(1,0),
    pownerfilter character varying(4000),
    approvereasons character varying(4000),
    defapptext character varying(4000),
    returnreasons character varying(4000),
    defrettext character varying(4000),
    rejectreasons character varying(4000),
    defregtext character varying(4000),
    approvalcomments character varying(1),
    rejectcomments character varying(1),
    returncomments character varying(1),
    escalation character varying(1),
    reminder character varying(1),
    displaymcontent text,
    groupwithpriorindex numeric(2,0),
    delegation character varying(1) DEFAULT 'F'::character varying,
    returnable character varying(1),
    sendtoactor character varying(4000),
    allowsend character varying(30),
    allowsendflg character varying(1),
    sendtocomments character varying(4000),
    usebusinessdatelogic character varying(1),
    initiator_approval character varying(1),
    initonbehalf character varying(100),
    removeflg character varying(1) DEFAULT 'F'::character varying,
    pownerflg character varying(1) DEFAULT 'F'::character varying,
    changedusr character varying(1) DEFAULT 'F'::character varying,
    actor_user_groups text,
    actor_default_users character varying(1),
    actor_data_grp character varying(200),
    cancel character varying(1) DEFAULT 'F'::character varying,
    cancelledby character varying(100),
    cancelledon timestamp without time zone,
    cancelremarks text,
    action_buttons character varying(100),
    autoapprove character varying(1),
    isoptional character varying(1),
    reminderstartdate date,
    escalationstartdate date,
    reminderjsondata text,
    escalationjsondata text
);


ALTER TABLE agilespacefresh.axactivetasks OWNER TO agilespace;

--
-- TOC entry 271 (class 1259 OID 2005086)
-- Name: axactivetaskstatus; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axactivetaskstatus (
    eventdatetime character varying(30),
    taskid character varying(15),
    transid character varying(8),
    keyfield character varying(30),
    keyvalue character varying(500),
    taskstatus character varying(15),
    username character varying(30),
    tasktype character varying(500),
    taskname character varying(500),
    processname character varying(500),
    priorindex numeric(10,0),
    indexno numeric(10,0),
    subindexno numeric(10,0),
    recordid numeric(20,0),
    statusreason character varying(4000),
    statustext character varying(4000),
    cancelremarks text,
    cancelledby character varying(100),
    cancelledon timestamp without time zone,
    cancel character varying(1)
);


ALTER TABLE agilespacefresh.axactivetaskstatus OWNER TO agilespace;

--
-- TOC entry 272 (class 1259 OID 2005091)
-- Name: axamend; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axamend (
    transid character varying(5),
    usersession character varying(50),
    primaryrecordid numeric(20,0),
    amendno character varying(25),
    amendedby character varying(100),
    amendedon timestamp without time zone,
    fieldlist text,
    parselist text,
    recidlist text
);


ALTER TABLE agilespacefresh.axamend OWNER TO agilespace;

--
-- TOC entry 273 (class 1259 OID 2005096)
-- Name: axapijobdetails; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axapijobdetails (
    jobid character varying(100),
    requestid character varying(50),
    url character varying(500),
    servicename character varying(50),
    method character varying(10),
    requeststr text,
    params character varying(2000),
    bparams character varying(2000),
    header character varying(2000),
    responsestr text,
    status character varying(20),
    starttime timestamp without time zone,
    endtime timestamp without time zone,
    schjobid character varying(100),
    sessionid character varying(30),
    username character varying(50),
    context character varying(10),
    act_script_name character varying(100),
    authstr character varying(2000)
);


ALTER TABLE agilespacefresh.axapijobdetails OWNER TO agilespace;

--
-- TOC entry 274 (class 1259 OID 2005101)
-- Name: axappconfig; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axappconfig (
    ordno numeric(5,0),
    rolename character varying(50),
    username character varying(50),
    userlevel numeric(2,0),
    propname character varying(10),
    propvalue character varying(4000)
);


ALTER TABLE agilespacefresh.axappconfig OWNER TO agilespace;

--
-- TOC entry 275 (class 1259 OID 2005106)
-- Name: axattachworkflow; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axattachworkflow (
    wkid character varying(15) NOT NULL,
    transid character varying(5) NOT NULL,
    wf_condition text,
    condtext text,
    blobno numeric(3,0),
    updatedon character varying(25),
    readonly character varying(1),
    updusername character varying(25),
    wf_edit character varying(1),
    wf_cancel character varying(1),
    subtype character varying(50),
    wf_reapproval character varying(1)
);


ALTER TABLE agilespacefresh.axattachworkflow OWNER TO agilespace;

--
-- TOC entry 276 (class 1259 OID 2005111)
-- Name: axaudit; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axaudit (
    sessionid character varying(30) NOT NULL,
    username character varying(50),
    logintime timestamp without time zone,
    status character varying(20),
    reason character varying(150),
    ip character varying(20),
    mac character varying(20),
    other character varying(200),
    logouttime timestamp without time zone,
    nologout character varying(1),
    exeverdet character varying(125)
);


ALTER TABLE agilespacefresh.axaudit OWNER TO agilespace;

--
-- TOC entry 277 (class 1259 OID 2005116)
-- Name: axautoprints; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axautoprints (
    axautoprintsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    autoprintid character varying(20),
    form character varying(250),
    stransid character varying(10),
    fast_prt character varying(1),
    fp_name character varying(50),
    printdoc character varying(250),
    dupchk character varying(500),
    directprint character varying(1),
    formula character varying(4000),
    formula_expr character varying(4000)
);


ALTER TABLE agilespacefresh.axautoprints OWNER TO agilespace;

--
-- TOC entry 278 (class 1259 OID 2005121)
-- Name: axcalendar; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axcalendar (
    axcalendarid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    calendarevent numeric(10,0),
    aftsaveflg character varying(1),
    transid character varying(5),
    eventname character varying(100),
    notifiedon date,
    sendername character varying(100),
    uname character varying(4000),
    unameemail text,
    messagetext text,
    eventtype character varying(250),
    axpdef_axcalendar_eventid numeric(15,0),
    startdate date,
    axptm_starttime character varying(10),
    enddate date,
    axptm_endtime character varying(10),
    location character varying(500),
    recurring character varying(20),
    isrecevent character varying(1),
    statusui character varying(30),
    status character varying(10),
    sqltext text,
    parenteventid numeric(15,0),
    emailalert character varying(1),
    eventstatus character varying(100),
    axpdef_axcalendar_eventstatusid numeric(15,0)
);


ALTER TABLE agilespacefresh.axcalendar OWNER TO agilespace;

--
-- TOC entry 279 (class 1259 OID 2005126)
-- Name: axcardtypemaster; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axcardtypemaster (
    axcardtypemasterid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    cardtype character varying(15),
    cardcaption character varying(100),
    cardicon character varying(500),
    axpfile_cardimg character varying(4000),
    axpfilepath_cardimg character varying(1000)
);


ALTER TABLE agilespacefresh.axcardtypemaster OWNER TO agilespace;

--
-- TOC entry 280 (class 1259 OID 2005131)
-- Name: axconstraints; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axconstraints (
    axconstraintsid numeric,
    cancel character varying(1),
    sourceid numeric,
    mapname character varying(20),
    username character varying(50),
    modifiedon date,
    createdby character varying(50),
    createdon date,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    constraint_name character varying(50),
    msg character varying(1000),
    completiondate date
);


ALTER TABLE agilespacefresh.axconstraints OWNER TO agilespace;

--
-- TOC entry 281 (class 1259 OID 2005136)
-- Name: axctx1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axctx1 (
    atype character varying(10),
    axcontext character varying(75)
);


ALTER TABLE agilespacefresh.axctx1 OWNER TO agilespace;

--
-- TOC entry 282 (class 1259 OID 2005139)
-- Name: axcustomviews; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axcustomviews (
    name character varying(25) NOT NULL,
    caption character varying(25),
    props text,
    blobno numeric(3,0) NOT NULL,
    updatedon character varying(25),
    createdon character varying(25),
    importedon character varying(25),
    createdby character varying(25),
    updatedby character varying(25),
    importedby character varying(25),
    readonly character varying(1),
    updusername character varying(25),
    username character varying(30) NOT NULL,
    transid character varying(30) NOT NULL
);


ALTER TABLE agilespacefresh.axcustomviews OWNER TO agilespace;

--
-- TOC entry 283 (class 1259 OID 2005144)
-- Name: axdef_newfield; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axdef_newfield (
    axdef_newfieldid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    formcaption character varying(500),
    stransid character varying(10),
    formtype numeric(10,0),
    dcname character varying(100),
    name character varying(50),
    caption character varying(200),
    flddupchk character varying(200),
    ftype character varying(100),
    fieldtype character varying(100),
    datatype character varying(20),
    width numeric(10,0),
    flddecimal numeric(4,0),
    dsformcaptionui character varying(250),
    dsformcaption character varying(250),
    dsform character varying(10),
    dsfieldui character varying(200),
    dsfield character varying(100),
    dsfieldcaption character varying(200),
    deflist text,
    apinamemo numeric(16,0),
    defsrcfieldui character varying(100),
    defsrcfield character varying(50),
    defsrcfieldcaption character varying(200),
    deftable text,
    rangeperiod character varying(1500),
    autogenprefix character varying(50),
    autogenprefixfld character varying(50),
    autogensno numeric(5,0),
    autogenno numeric(8,0),
    autogenstr character varying(50),
    exp_editor_formula text,
    exp_editor_valexpr text,
    allowduplicate character varying(1),
    allowempty character varying(1),
    fldposition character varying(30),
    "position" character varying(100),
    moe character varying(50),
    source character varying(50),
    sql_editor_psql text,
    savenormalised character varying(1),
    srcfield character varying(100),
    srctable character varying(100),
    savevalue character varying(1),
    hidden character varying(1),
    masterdl character varying(500),
    sourcedl character varying(500)
);


ALTER TABLE agilespacefresh.axdef_newfield OWNER TO agilespace;

--
-- TOC entry 284 (class 1259 OID 2005149)
-- Name: axdelegatedtasks; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axdelegatedtasks (
    fromuser character varying(30),
    sname character varying(5),
    recordid numeric(16,0),
    delegated character varying(1),
    del_user character varying(30),
    finalapprove character varying(1),
    uroles character varying(100)
);


ALTER TABLE agilespacefresh.axdelegatedtasks OWNER TO agilespace;

--
-- TOC entry 285 (class 1259 OID 2005152)
-- Name: axdelegateusers; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axdelegateusers (
    fromuser character varying(30),
    touser character varying(30),
    fromdate timestamp without time zone,
    todate timestamp without time zone
);


ALTER TABLE agilespacefresh.axdelegateusers OWNER TO agilespace;

--
-- TOC entry 286 (class 1259 OID 2005155)
-- Name: axdirectsql; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axdirectsql (
    axdirectsqlid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon date,
    createdby character varying(50),
    createdon date,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    sqlname character varying(50),
    ddldatatype character varying(20),
    sqltext text,
    paramcal character varying(200),
    sqlparams character varying(2000),
    accessstring character varying(500),
    groupname character varying(50),
    sqlsrc character varying(30),
    sqlsrccnd numeric(10,0),
    sqlquerycols character varying(4000),
    cachedata character varying(1),
    cacheinterval character varying(10)
);


ALTER TABLE agilespacefresh.axdirectsql OWNER TO agilespace;

--
-- TOC entry 287 (class 1259 OID 2005160)
-- Name: axdsignconfig; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axdsignconfig (
    axdsignconfigid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    stransid character varying(10),
    printdocname character varying(50),
    docnamefield character varying(50),
    pusername character varying(100),
    ordno character varying(10),
    doctype character varying(50),
    axpmailid numeric(15,0),
    mailid character varying(100),
    mobileno character varying(10),
    sendemail character varying(1),
    sendsms character varying(1),
    prolename character varying(50),
    rolename character varying(60)
);


ALTER TABLE agilespacefresh.axdsignconfig OWNER TO agilespace;

--
-- TOC entry 288 (class 1259 OID 2005165)
-- Name: axdsignmail; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axdsignmail (
    axdsignmailid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    docid character varying(10),
    axpmailid numeric(15,0),
    docdate date,
    mailtype character varying(70),
    filename character varying(30),
    subject character varying(100),
    mailcontent character varying(2000),
    smscontent character varying(500)
);


ALTER TABLE agilespacefresh.axdsignmail OWNER TO agilespace;

--
-- TOC entry 289 (class 1259 OID 2005170)
-- Name: axdsignmail_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.axdsignmail_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.axdsignmail_seq OWNER TO agilespace;

--
-- TOC entry 290 (class 1259 OID 2005171)
-- Name: axdsigntrans; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axdsigntrans (
    stransid character varying(5),
    doctype character varying(30),
    docdate timestamp without time zone,
    documentname character varying(50),
    username character varying(30),
    ordno numeric(5,0),
    status numeric(1,0),
    signedon timestamp without time zone,
    axpmailid integer,
    mailid character varying(30),
    mobileno character varying(10),
    sendmail character varying(1),
    sendsms character varying(1),
    mailstatus numeric(1,0) DEFAULT 0,
    smsstatus numeric(1,0) DEFAULT 0
);


ALTER TABLE agilespacefresh.axdsigntrans OWNER TO agilespace;

--
-- TOC entry 291 (class 1259 OID 2005176)
-- Name: axentityrelations; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axentityrelations (
    axentityrelationsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    rtypeui character varying(10),
    rtype character varying(10),
    mstructui character varying(200),
    mstruct character varying(10),
    primarytable character varying(50),
    mfieldui character varying(200),
    mfield character varying(100),
    mtable character varying(50),
    dstructui character varying(200),
    dstruct character varying(10),
    dprimarytable character varying(50),
    dfieldui character varying(200),
    dfield character varying(100),
    dtable character varying(50),
    dupchk character varying(200)
);


ALTER TABLE agilespacefresh.axentityrelations OWNER TO agilespace;

--
-- TOC entry 292 (class 1259 OID 2005181)
-- Name: axerrorlog; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axerrorlog (
    username character varying(15) NOT NULL,
    eventdate timestamp without time zone NOT NULL,
    sname character varying(15),
    actname character varying(15),
    errormsg character varying(250)
);


ALTER TABLE agilespacefresh.axerrorlog OWNER TO agilespace;

--
-- TOC entry 293 (class 1259 OID 2005184)
-- Name: axexportjobs; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axexportjobs (
    jobid character varying(50),
    jobdate timestamp(0) without time zone,
    taskname character varying(25),
    datasource character varying(25),
    owner character varying(50),
    iviewname character varying(10),
    tstructname character varying(5),
    recordid numeric(16,0),
    starttime timestamp(0) without time zone,
    endtime timestamp(0) without time zone,
    status character varying(1000)
);


ALTER TABLE agilespacefresh.axexportjobs OWNER TO agilespace;

--
-- TOC entry 294 (class 1259 OID 2005189)
-- Name: axexportjobsexception; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axexportjobsexception (
    jobid character varying(50),
    recordid numeric(16,0),
    errormsg character varying(1000)
);


ALTER TABLE agilespacefresh.axexportjobsexception OWNER TO agilespace;

--
-- TOC entry 295 (class 1259 OID 2005194)
-- Name: axfastlink; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axfastlink (
    transid character varying(15),
    caption character varying(50),
    output character varying(50),
    efont character varying(1),
    istemplate character varying(1)
);


ALTER TABLE agilespacefresh.axfastlink OWNER TO agilespace;

--
-- TOC entry 296 (class 1259 OID 2005197)
-- Name: axfinworkflow; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axfinworkflow (
    recordid numeric(16,0),
    comments character varying(250),
    updusername character varying(50),
    app_datetime character varying(25),
    app_level numeric(3,0),
    app_desc numeric(1,0)
);


ALTER TABLE agilespacefresh.axfinworkflow OWNER TO agilespace;

--
-- TOC entry 297 (class 1259 OID 2005200)
-- Name: axformnotify; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axformnotify (
    axformnotifyid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    form character varying(250),
    stransid character varying(10),
    active character varying(1),
    formula character varying(4000),
    formula_expr character varying(4000),
    notifyto character varying(500),
    notifytocnd character varying(20),
    usergroups character varying(4000),
    usernames character varying(4000),
    formfield character varying(250),
    formfieldname character varying(100),
    whatsapp_usernames character varying(4000),
    whatsapp_formfield character varying(250),
    sms_usernames character varying(4000),
    sms_formfield character varying(250),
    sms_formfieldname character varying(100),
    whatsapp_formfieldname character varying(100),
    notify_msg_prints character varying(100),
    notify_msg_new text,
    notify_msg_edit text,
    notify_msg_cancel text,
    notify_msg_delete text,
    emailto character varying(250),
    emailto_usergroups character varying(4000),
    emailto_usernames character varying(4000),
    emailto_formfield character varying(500),
    emailto_formfieldname character varying(100),
    emailcc character varying(250),
    emailcc_usergroups character varying(4000),
    emailcc_usernames character varying(4000),
    emailcc_formfield character varying(250),
    emailcc_formfieldname character varying(100),
    emailbcc character varying(250),
    emailbcc_usergroups character varying(4000),
    emailbcc_usernames character varying(4000),
    emailbcc_formfield character varying(250),
    emailbcc_formfieldname character varying(100),
    email_msg_prints character varying(1000),
    email_msg_new text,
    email_msg_edit text,
    email_msg_cancel text,
    email_msg_delete text,
    isemailreq character varying(1),
    navigateto character varying(500),
    pagetype character varying(50),
    loadopen character varying(5),
    tbl_params character varying(250),
    tbl_paramval character varying(250),
    tbl_navigationparam character varying(8000),
    notify_sub_new character varying(4000),
    notify_sub_edit character varying(4000),
    notify_sub_cancel character varying(4000),
    notify_sub_delete character varying(4000),
    email_msg_attachmentsui character varying(300),
    email_msg_attachments character varying(100),
    email_sub_new character varying(4000),
    email_sub_edit character varying(4000),
    email_sub_cancel character varying(4000),
    email_sub_delete character varying(4000)
);


ALTER TABLE agilespacefresh.axformnotify OWNER TO agilespace;

--
-- TOC entry 298 (class 1259 OID 2005205)
-- Name: axfscpf_image_left; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axfscpf_image_left (
    recordid numeric(16,0),
    img bytea,
    blobno numeric(3,0),
    ftype character varying(4)
);


ALTER TABLE agilespacefresh.axfscpf_image_left OWNER TO agilespace;

--
-- TOC entry 299 (class 1259 OID 2005210)
-- Name: axfscpf_image_right; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axfscpf_image_right (
    recordid numeric(16,0),
    img bytea,
    blobno numeric(3,0),
    ftype character varying(4)
);


ALTER TABLE agilespacefresh.axfscpf_image_right OWNER TO agilespace;

--
-- TOC entry 300 (class 1259 OID 2005215)
-- Name: axfscph_image_left; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axfscph_image_left (
    recordid numeric(16,0),
    img bytea,
    blobno numeric(3,0),
    ftype character varying(4)
);


ALTER TABLE agilespacefresh.axfscph_image_left OWNER TO agilespace;

--
-- TOC entry 301 (class 1259 OID 2005220)
-- Name: axfscph_image_right; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axfscph_image_right (
    recordid numeric(16,0),
    img bytea,
    blobno numeric(3,0),
    ftype character varying(4)
);


ALTER TABLE agilespacefresh.axfscph_image_right OWNER TO agilespace;

--
-- TOC entry 302 (class 1259 OID 2005225)
-- Name: axfscrs_image_left; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axfscrs_image_left (
    recordid numeric(16,0),
    img bytea,
    blobno numeric(3,0),
    ftype character varying(4)
);


ALTER TABLE agilespacefresh.axfscrs_image_left OWNER TO agilespace;

--
-- TOC entry 303 (class 1259 OID 2005230)
-- Name: axfscrs_image_right; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axfscrs_image_right (
    recordid numeric(16,0),
    img bytea,
    blobno numeric(3,0),
    ftype character varying(4)
);


ALTER TABLE agilespacefresh.axfscrs_image_right OWNER TO agilespace;

--
-- TOC entry 304 (class 1259 OID 2005235)
-- Name: axfscrt_image_left; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axfscrt_image_left (
    recordid numeric(16,0),
    img bytea,
    blobno numeric(3,0),
    ftype character varying(4)
);


ALTER TABLE agilespacefresh.axfscrt_image_left OWNER TO agilespace;

--
-- TOC entry 305 (class 1259 OID 2005240)
-- Name: axfscrt_image_right; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axfscrt_image_right (
    recordid numeric(16,0),
    img bytea,
    blobno numeric(3,0),
    ftype character varying(4)
);


ALTER TABLE agilespacefresh.axfscrt_image_right OWNER TO agilespace;

--
-- TOC entry 306 (class 1259 OID 2005245)
-- Name: axglovar; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axglovar (
    axglovarid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    fromuserlogin character varying(1),
    axglo_user character varying(50),
    axp_displaytext character varying(1500),
    axglo_hide character varying(50),
    axpimageserver character varying(400),
    axpimagepath character varying(400)
);


ALTER TABLE agilespacefresh.axglovar OWNER TO agilespace;

--
-- TOC entry 307 (class 1259 OID 2005250)
-- Name: axgraphcols; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axgraphcols (
    name character varying(15),
    xaxiscolumn character varying(25),
    yaxiscolumn character varying(25),
    groupbycolumn character varying(25),
    filtercolumn character varying(25)
);


ALTER TABLE agilespacefresh.axgraphcols OWNER TO agilespace;

--
-- TOC entry 308 (class 1259 OID 2005253)
-- Name: axgraphsetting; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axgraphsetting (
    name character varying(15),
    graphstyle numeric(1,0),
    barstyle character varying(255),
    barposition numeric(1,0),
    bottomaxis numeric(4,0),
    leftaxis numeric(4,0),
    rotation numeric(4,0),
    dvalue numeric(4,0),
    xlabelangle numeric(4,0),
    horizontallines numeric(1,0),
    verticallines numeric(1,0),
    showlegend numeric(1,0),
    view3d numeric(1,0),
    marks numeric(1,0),
    legendposition numeric(1,0),
    legendvalues numeric(1,0),
    markstyle numeric(1,0),
    piecircled numeric(1,0),
    piepattern numeric(1,0),
    formheight numeric(6,0),
    formwidth numeric(6,0),
    formtop numeric(6,0),
    formleft numeric(6,0),
    xaxisfsize numeric(4,0),
    xaxisfname character varying(100),
    xaxisfbold numeric(1,0),
    xaxisfitallic numeric(1,0),
    xaxisfunderline numeric(1,0),
    xaxisfst numeric(1,0),
    xaxisfcolor character varying(100),
    xcaptionfsize numeric(4,0),
    xcaptionfname character varying(100),
    xcaptionfbold numeric(1,0),
    xcaptionfitallic numeric(1,0),
    xcaptionfunderline numeric(1,0),
    xcaptionfst numeric(1,0),
    xcaptionfcolor character varying(100),
    yaxisfunderline numeric(1,0),
    yaxisfst numeric(1,0),
    yaxisfcolor character varying(100),
    ycaptionfsize numeric(4,0),
    ycaptionfname character varying(100),
    ycaptionfbold numeric(1,0),
    ycaptionfitallic numeric(1,0),
    ycaptionfunderline numeric(1,0),
    ycaptionfst numeric(1,0),
    ycaptionfcolor character varying(100),
    titlefsize numeric(4,0),
    titlefname character varying(100),
    titlefbold numeric(1,0),
    titlefitallic numeric(1,0),
    titlefunderline numeric(1,0),
    titlefst numeric(1,0),
    titlefcolor character varying(100),
    legendfsize numeric(4,0),
    legendfname character varying(100),
    legendfbold numeric(1,0),
    legendfitallic numeric(1,0),
    legendfunderline numeric(1,0),
    legendfst numeric(1,0),
    legendfcolor character varying(100),
    barcolor character varying(100),
    linecolor character varying(100),
    areacolor character varying(100),
    xcaption character varying(100),
    ycaption character varying(100),
    title character varying(100),
    legenddrawing numeric(1,0),
    legendtextstyle numeric(1,0),
    horizlinewidth numeric(3,0),
    horizlinecolor character varying(25),
    hlinestyle numeric(1,0),
    vertlinewidth numeric(3,0),
    vertlinecolor character varying(25),
    vlinestyle numeric(1,0),
    pierotationspeed numeric(5,0),
    invertyaxis numeric(1,0),
    invertxaxis numeric(1,0),
    showtoolbar numeric(1,0),
    showsettingbar numeric(1,0),
    formborderstyle numeric(1,0)
);


ALTER TABLE agilespacefresh.axgraphsetting OWNER TO agilespace;

--
-- TOC entry 309 (class 1259 OID 2005258)
-- Name: axgrouping; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axgrouping (
    axgroupingid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    grpname character varying(250),
    grpvalue character varying(4000),
    dupchk character varying(4000),
    grpparent character varying(4000),
    grpnamedb character varying(100)
);


ALTER TABLE agilespacefresh.axgrouping OWNER TO agilespace;

--
-- TOC entry 310 (class 1259 OID 2005263)
-- Name: axgroupingmst; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axgroupingmst (
    axgroupingmstid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    grpname character varying(25),
    grpcaption character varying(250),
    dc2fldprops character varying(4000),
    dc3fldprops character varying(4000)
);


ALTER TABLE agilespacefresh.axgroupingmst OWNER TO agilespace;

--
-- TOC entry 311 (class 1259 OID 2005268)
-- Name: axgrouptstructs; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axgrouptstructs (
    axgrouptstructsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    formcap character varying(500),
    ftransid character varying(10)
);


ALTER TABLE agilespacefresh.axgrouptstructs OWNER TO agilespace;

--
-- TOC entry 312 (class 1259 OID 2005273)
-- Name: axhomeconfig; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axhomeconfig (
    axhomeconfigid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    pagetype character varying(20),
    pagecaption character varying(250),
    caption character varying(200),
    carddesc text,
    displayicon character varying(100),
    stransid character varying(50),
    pgname character varying(50),
    grouped character varying(1),
    groupfolder character varying(500),
    grppageid character varying(50),
    datasource character varying(100),
    moreoption character varying(4000),
    disporder numeric(10,0),
    active character varying(1),
    colorcode character varying(50),
    cardlayout character varying(50),
    btnstyle character varying(50),
    cardhide character varying(1),
    paneltype character varying(50),
    paneltypecnd numeric(2,0),
    menufoldercapui character varying(2000),
    menufoldercap character varying(250),
    menufolderptype character varying(50),
    menufoldername character varying(50),
    menuoptioncap character varying(500),
    menuoptionname character varying(50),
    menuoptionptype character varying(50),
    dupchk character varying(2000),
    html_editor_card text,
    cardwidth character varying(20)
);


ALTER TABLE agilespacefresh.axhomeconfig OWNER TO agilespace;

--
-- TOC entry 313 (class 1259 OID 2005278)
-- Name: axhomeconfigdtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axhomeconfigdtl (
    axhomeconfigdtlid numeric(16,0) NOT NULL,
    axhomeconfigid numeric(16,0),
    axhomeconfigdtlrow integer,
    btnname character varying(15),
    btntitle character varying(100),
    btnaction character varying(20),
    axpstruct character varying(200),
    btnstransid character varying(10),
    custompage character varying(100)
);


ALTER TABLE agilespacefresh.axhomeconfigdtl OWNER TO agilespace;

--
-- TOC entry 314 (class 1259 OID 2005281)
-- Name: axiconmenu; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axiconmenu (
    parentpagename character varying(50) NOT NULL,
    iconname character varying(50)
);


ALTER TABLE agilespacefresh.axiconmenu OWNER TO agilespace;

--
-- TOC entry 315 (class 1259 OID 2005284)
-- Name: aximpappping; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.aximpappping (
    ttransid character varying(5),
    jobid character varying(100),
    application character varying(10),
    threadno character varying(3),
    username character varying(30),
    pingedon character varying(25),
    status character varying(30),
    remarks character varying(4000)
);


ALTER TABLE agilespacefresh.aximpappping OWNER TO agilespace;

--
-- TOC entry 316 (class 1259 OID 2005289)
-- Name: aximpdatauploadjobs; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.aximpdatauploadjobs (
    jobid character varying(100),
    ttransid character varying(5),
    dnstructure character varying(5),
    actname character varying(15),
    temptablename character varying(30),
    primaryfield character varying(30),
    groupfield character varying(30),
    selectscript character varying(4000),
    username character varying(20),
    createdon timestamp without time zone,
    updatedon timestamp without time zone,
    starttime timestamp without time zone,
    endtime timestamp without time zone,
    status character varying(50),
    remarks character varying(1000)
);


ALTER TABLE agilespacefresh.aximpdatauploadjobs OWNER TO agilespace;

--
-- TOC entry 317 (class 1259 OID 2005294)
-- Name: aximpdef; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.aximpdef (
    aximpdefid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon date,
    createdby character varying(50),
    createdon date,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    aximpdefname character varying(100),
    aximpform character varying(100),
    aximptransid character varying(10),
    aximptextqualifier character varying(1),
    aximpmapinfile character varying(1),
    aximpheaderrows numeric(3,0),
    aximpprimayfield character varying(50),
    aximpgroupfield character varying(50),
    aximpfieldseperator character varying(15),
    aximpmapfields character varying(2000),
    aximpthreadcount numeric(2,0),
    aximpprocname character varying(100),
    aximpbindtotstruct character varying(1),
    aximpstdcolumnwidth numeric(5,0),
    aximpignorefldexception character varying(1),
    aximponlyappend character varying(1),
    aximpprocessmode character varying(30),
    aximpfilefromtable character varying(1),
    aximpfieldseperatorui character varying(100),
    aximpprimaryfield_details character varying(200)
);


ALTER TABLE agilespacefresh.aximpdef OWNER TO agilespace;

--
-- TOC entry 318 (class 1259 OID 2005299)
-- Name: aximpfailedrecords; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.aximpfailedrecords (
    jobid character varying(100),
    ttransid character varying(5),
    recordid numeric(15,0),
    primaryfield character varying(500),
    status character varying(4000),
    createdon timestamp without time zone,
    mapname character varying(10),
    parenttransid character varying(5),
    parentrecordid numeric(15,0)
);


ALTER TABLE agilespacefresh.aximpfailedrecords OWNER TO agilespace;

--
-- TOC entry 319 (class 1259 OID 2005304)
-- Name: aximpjobs; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.aximpjobs (
    jobid character varying(100),
    sessionid character varying(30),
    jobdate timestamp without time zone,
    aximpdefname character varying(100),
    act_script_name character varying(100),
    aximptransid character varying(10),
    aximptextqualifier character varying(1),
    aximpmapinfile character varying(1),
    aximpheaderrows numeric(10,0),
    aximpprimayfield character varying(50),
    aximpgroupfield character varying(50),
    aximpfieldseperator character varying(1),
    aximpmapfields character varying(2000),
    aximpthreadcount numeric(2,0),
    aximpprocname character varying(100),
    aximpbindtotstruct character varying(1),
    aximpstdcolumnwidth numeric(5,0),
    aximpignorefldexception character varying(1),
    aximponlyappend character varying(1),
    aximpprocessmode character varying(30),
    dbdirpath character varying(250),
    filename character varying(500),
    threadcount numeric(2,0),
    username character varying(20),
    status character varying(500)
);


ALTER TABLE agilespacefresh.aximpjobs OWNER TO agilespace;

--
-- TOC entry 320 (class 1259 OID 2005309)
-- Name: aximportdef; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.aximportdef (
    actname character varying(30),
    ttransid character varying(5),
    transcaption character varying(100),
    textqualifier character varying(1),
    mapinfile character varying(1),
    bgact character varying(1),
    headerrows numeric(2,0),
    primaryfield character varying(50),
    groupfield character varying(50),
    fieldseperator character varying(1),
    mapfields character varying(4000),
    dbdirpath character varying(200),
    filepath character varying(200),
    threadcount character varying(3),
    procname character varying(100),
    bindtotstruct character varying(1),
    stdcolumnwidth numeric(4,0),
    ignorefldexception character varying(1),
    onlyappend character varying(1),
    transid character varying(5),
    impprocessmode numeric(1,0),
    filefromtable character varying(1)
);


ALTER TABLE agilespacefresh.aximportdef OWNER TO agilespace;

--
-- TOC entry 321 (class 1259 OID 2005314)
-- Name: aximportjobs; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.aximportjobs (
    jobid character varying(30),
    jobdate timestamp(0) without time zone,
    actname character varying(30),
    ttransid character varying(5),
    dbdirpath character varying(250),
    filepath character varying(250),
    filename character varying(100),
    threadcount numeric(2,0),
    ip character varying(15),
    username character varying(20),
    status character varying(500),
    uname character varying(20),
    ordseq numeric(3,0),
    transid character varying(5)
);


ALTER TABLE agilespacefresh.aximportjobs OWNER TO agilespace;

--
-- TOC entry 322 (class 1259 OID 2005319)
-- Name: axinqueues; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axinqueues (
    axinqueuesid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    axqueuename character varying(100),
    axqueuedesc text,
    unameui character varying(200),
    uname character varying(100),
    secretkey character varying(16),
    active character varying(1),
    defqueu character varying(1)
);


ALTER TABLE agilespacefresh.axinqueues OWNER TO agilespace;

--
-- TOC entry 323 (class 1259 OID 2005324)
-- Name: axinqueuesdata; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axinqueuesdata (
    createdon timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    axqueuename character varying(100),
    transid character varying(10),
    recordid numeric,
    queuedata text
);


ALTER TABLE agilespacefresh.axinqueuesdata OWNER TO agilespace;

--
-- TOC entry 324 (class 1259 OID 2005330)
-- Name: axintelliviewdet; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axintelliviewdet (
    axintelliviewdetid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    repid character varying(100),
    ivname character varying(100),
    ax_user character varying(100),
    companyname character varying(100),
    reportname character varying(100),
    filtername character varying(100),
    filtervalues character varying(100),
    reporttype character varying(1),
    pusername character varying(30),
    ppassword character varying(30)
);


ALTER TABLE agilespacefresh.axintelliviewdet OWNER TO agilespace;

--
-- TOC entry 325 (class 1259 OID 2005335)
-- Name: axivuserconfig; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axivuserconfig (
    rolename character varying(50),
    username character varying(50),
    userlevel numeric(2,0),
    reportname character varying(10),
    paramname character varying(50),
    propname character varying(10),
    propvalue character varying(4000)
);


ALTER TABLE agilespacefresh.axivuserconfig OWNER TO agilespace;

--
-- TOC entry 326 (class 1259 OID 2005340)
-- Name: axlangsource; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axlangsource (
    langname character varying(15),
    fontcharset character varying(25),
    fontname character varying(25),
    fontsize numeric(3,0)
);


ALTER TABLE agilespacefresh.axlangsource OWNER TO agilespace;

--
-- TOC entry 327 (class 1259 OID 2005343)
-- Name: axlanguage; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axlanguage (
    lngname character varying(25) NOT NULL,
    sname character varying(16) NOT NULL,
    fontname character varying(30),
    fontsize numeric(3,0),
    compname character varying(50) NOT NULL,
    compcaption character varying(300),
    comphint character varying(300),
    dispname character varying(75)
);


ALTER TABLE agilespacefresh.axlanguage OWNER TO agilespace;

--
-- TOC entry 328 (class 1259 OID 2005348)
-- Name: axlanguage11x; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axlanguage11x (
    axlanguage11xid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    dispname character varying(100),
    sname character varying(100),
    compname character varying(100),
    compengcap character varying(4000),
    compcaption character varying(4000),
    comphint character varying(4000),
    lngname character varying(20),
    fontname character varying(100),
    fontsize numeric(3,0)
);


ALTER TABLE agilespacefresh.axlanguage11x OWNER TO agilespace;

--
-- TOC entry 329 (class 1259 OID 2005353)
-- Name: axliccontrol; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axliccontrol (
    licid character varying(10),
    regkey bytea,
    mlicid bytea,
    alicid bytea,
    dlicid bytea,
    llicid bytea,
    lictrans bytea,
    mdt character varying(25),
    adt character varying(25),
    blobno numeric(1,0)
);


ALTER TABLE agilespacefresh.axliccontrol OWNER TO agilespace;

--
-- TOC entry 330 (class 1259 OID 2005358)
-- Name: axlictrans; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axlictrans (
    licid character varying(19) NOT NULL,
    lictrans character varying(15)
);


ALTER TABLE agilespacefresh.axlictrans OWNER TO agilespace;

--
-- TOC entry 331 (class 1259 OID 2005361)
-- Name: axlov; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axlov (
    axlovid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    group_name character varying(30),
    value_name character varying(30),
    dupcheck character varying(60),
    identifier character varying(10),
    disp_order numeric(10,0),
    activeyes character varying(10)
);


ALTER TABLE agilespacefresh.axlov OWNER TO agilespace;

--
-- TOC entry 332 (class 1259 OID 2005366)
-- Name: axmaudit; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axmaudit (
    sessionid character varying(30),
    username character varying(50),
    logintime timestamp without time zone,
    status character varying(20),
    reason character varying(150),
    other character varying(200),
    logouttime timestamp without time zone,
    nologout character varying(1)
);


ALTER TABLE agilespacefresh.axmaudit OWNER TO agilespace;

--
-- TOC entry 333 (class 1259 OID 2005369)
-- Name: axmconnections; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axmconnections (
    sessionid character varying(50),
    logintime timestamp without time zone,
    username character varying(50),
    usergroup character varying(250),
    groupno numeric(7,0),
    project character varying(50),
    pageaccess character varying(250),
    appvars text,
    userroles character varying(250),
    transidlist text
);


ALTER TABLE agilespacefresh.axmconnections OWNER TO agilespace;

--
-- TOC entry 334 (class 1259 OID 2005374)
-- Name: axmeetingstatus; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axmeetingstatus (
    axmeetingstatusid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    meetingid numeric(16,0),
    employeename character varying(50),
    tdate date,
    status character varying(50)
);


ALTER TABLE agilespacefresh.axmeetingstatus OWNER TO agilespace;

--
-- TOC entry 335 (class 1259 OID 2005379)
-- Name: axmessage; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axmessage (
    msgid numeric(15,0),
    groupid numeric(15,0),
    fromwhom character varying(30),
    towhom character varying(30),
    fromstatus numeric(2,0),
    status numeric(2,0),
    upddatetime character varying(30),
    readstatus numeric(2,0),
    message character varying(4000),
    towhoms character varying(3000)
);


ALTER TABLE agilespacefresh.axmessage OWNER TO agilespace;

--
-- TOC entry 336 (class 1259 OID 2005384)
-- Name: axmessage_archive; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axmessage_archive (
    msgid numeric(15,0),
    groupid numeric(15,0),
    fromwhom character varying(30),
    towhom character varying(30),
    fromstatus numeric(2,0),
    tostatus numeric(2,0),
    upddatetime character varying(30),
    readstatus numeric(2,0),
    message character varying(4000),
    towhoms character varying(3000)
);


ALTER TABLE agilespacefresh.axmessage_archive OWNER TO agilespace;

--
-- TOC entry 337 (class 1259 OID 2005389)
-- Name: axmmenodb_icon; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axmmenodb_icon (
    recordid numeric(16,0),
    img bytea,
    blobno numeric(3,0),
    ftype character varying(4)
);


ALTER TABLE agilespacefresh.axmmenodb_icon OWNER TO agilespace;

--
-- TOC entry 338 (class 1259 OID 2005394)
-- Name: axmmetadatamaster; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axmmetadatamaster (
    structtype character varying(10),
    structname character varying(15),
    structcaption character varying(50),
    structstatus character varying(50),
    ordno integer,
    createdon timestamp without time zone DEFAULT now(),
    updatedon timestamp without time zone DEFAULT now(),
    createdby character varying(50),
    updatedby character varying(50)
);


ALTER TABLE agilespacefresh.axmmetadatamaster OWNER TO agilespace;

--
-- TOC entry 339 (class 1259 OID 2005399)
-- Name: axmpagedtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axmpagedtl (
    axmpagedtlid numeric(16,0) NOT NULL,
    axmpagehdrid numeric(16,0),
    axmpagedtlrow integer,
    sno numeric(15,0),
    fld_name character varying(50),
    fld_caption character varying(100),
    data_type character varying(10),
    data_width character varying(10),
    fld_decimal character varying(10),
    modeofentry character varying(100),
    s_name character varying(10),
    hidden character varying(1)
);


ALTER TABLE agilespacefresh.axmpagedtl OWNER TO agilespace;

--
-- TOC entry 340 (class 1259 OID 2005402)
-- Name: axmpagehdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axmpagehdr (
    axmpagehdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    structtype character varying(25),
    struct_type character varying(10),
    menu_caption character varying(100),
    sname character varying(10),
    html_view character varying(10),
    button_param character varying(10),
    mapview character varying(10),
    forcecamera character varying(10),
    geo character varying(10),
    pageorder numeric(10,0)
);


ALTER TABLE agilespacefresh.axmpagehdr OWNER TO agilespace;

--
-- TOC entry 341 (class 1259 OID 2005407)
-- Name: axmtranscontrol; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axmtranscontrol (
    username character varying(50),
    transid character varying(5),
    sessionid character varying(30),
    recordid numeric(16,0),
    loadedon timestamp without time zone
);


ALTER TABLE agilespacefresh.axmtranscontrol OWNER TO agilespace;

--
-- TOC entry 342 (class 1259 OID 2005410)
-- Name: axmwslog; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axmwslog (
    sessionid character varying(30),
    username character varying(50),
    calledon timestamp without time zone,
    structname character varying(16),
    recordid numeric(15,0),
    timetaken numeric(10,0),
    dbtimetaken numeric(10,0),
    servicename character varying(50),
    serviceresult character varying(200),
    callfinished timestamp without time zone,
    db_conntime numeric(10,0)
);


ALTER TABLE agilespacefresh.axmwslog OWNER TO agilespace;

--
-- TOC entry 343 (class 1259 OID 2005413)
-- Name: axmyviews; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axmyviews (
    viewname character varying(50) NOT NULL,
    iname character varying(10) NOT NULL,
    username character varying(50) NOT NULL,
    params text,
    filtercond text,
    sortcond character varying(50),
    hiddencols text
);


ALTER TABLE agilespacefresh.axmyviews OWNER TO agilespace;

--
-- TOC entry 344 (class 1259 OID 2005418)
-- Name: axnotificationdef; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axnotificationdef (
    axnotificationdefid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    name character varying(200),
    processname character varying(250),
    taskname character varying(250),
    indexno numeric(2,0),
    ttransid character varying(10),
    notifyto character varying(50),
    fromfieldcaption character varying(500),
    fromfieldname character varying(200),
    roles character varying(4000),
    actors character varying(250),
    taskparams character varying(500),
    tasklist character varying(500),
    emailaddr character varying(4000),
    enableemail character varying(3),
    enablesms character varying(3),
    enablewhatsapp character varying(3),
    enablemobilenotify character varying(3),
    emailsubject character varying(1000),
    emailattachment character varying(4000),
    emailtext text,
    notifyto_cc character varying(4000),
    fromfieldcaption_cc character varying(500),
    roles_cc character varying(4000),
    fromfieldname_cc character varying(200),
    actors_cc character varying(200),
    taskparams_cc character varying(500),
    tasklist_cc character varying(500),
    emailaddr_cc character varying(4000),
    notifyto_bcc character varying(4000),
    fromfieldcaption_bcc character varying(200),
    fromfieldname_bcc character varying(200),
    roles_bcc character varying(4000),
    actors_bcc character varying(500),
    taskparams_bcc character varying(500),
    tasklist_bcc character varying(500),
    emailaddr_bcc character varying(4000),
    smstext text,
    whatsapptext text,
    mobile_title character varying(500),
    mobile_content text
);


ALTER TABLE agilespacefresh.axnotificationdef OWNER TO agilespace;

--
-- TOC entry 345 (class 1259 OID 2005423)
-- Name: axonlineconvlog; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axonlineconvlog (
    script text,
    errmsg character varying(8000),
    tablename character varying(100)
);


ALTER TABLE agilespacefresh.axonlineconvlog OWNER TO agilespace;

--
-- TOC entry 346 (class 1259 OID 2005428)
-- Name: axoutqueues; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axoutqueues (
    axoutqueuesid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    axqueuename character varying(100),
    axqueuedesc text,
    active character varying(1),
    axqueuesource character varying(20),
    formcaption character varying(250),
    stransid character varying(10),
    allfields character varying(1),
    formfields character varying(8000),
    fieldnames character varying(4000),
    printforms character varying(1),
    fastprints character varying(4000),
    fileattachments character varying(1),
    datasource character varying(200),
    onformdata character varying(1),
    ds_forms character varying(8000),
    ds_stransid character varying(4000),
    ds_interval character varying(20),
    primaryfieldui character varying(200),
    primaryfield character varying(100)
);


ALTER TABLE agilespacefresh.axoutqueues OWNER TO agilespace;

--
-- TOC entry 347 (class 1259 OID 2005433)
-- Name: axoutqueuesdata; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axoutqueuesdata (
    createdon timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    axqueuename character varying(100),
    transid character varying(10),
    recordid numeric,
    queuedata text
);


ALTER TABLE agilespacefresh.axoutqueuesdata OWNER TO agilespace;

--
-- TOC entry 348 (class 1259 OID 2005439)
-- Name: axoutqueuesmst; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axoutqueuesmst (
    axoutqueuesmstid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    axqueuename character varying(100),
    axqueuedesc text,
    defqueue character varying(1)
);


ALTER TABLE agilespacefresh.axoutqueuesmst OWNER TO agilespace;

--
-- TOC entry 349 (class 1259 OID 2005444)
-- Name: axp__appmgrms1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp__appmgrms1 (
    axp__appmgrms1id numeric,
    cancel character(1),
    sourceid numeric,
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250)
);


ALTER TABLE agilespacefresh.axp__appmgrms1 OWNER TO agilespace;

--
-- TOC entry 350 (class 1259 OID 2005449)
-- Name: axp__appmgrss1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp__appmgrss1 (
    axp__appmgrss1id numeric,
    cancel character(1),
    sourceid numeric,
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250)
);


ALTER TABLE agilespacefresh.axp__appmgrss1 OWNER TO agilespace;

--
-- TOC entry 351 (class 1259 OID 2005454)
-- Name: axp_appmgr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_appmgr (
    tstruct character varying(5),
    fname character varying(25)
);


ALTER TABLE agilespacefresh.axp_appmgr OWNER TO agilespace;

--
-- TOC entry 352 (class 1259 OID 2005457)
-- Name: axp_appsearch_data; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_appsearch_data (
    cancel character(1),
    sourceid integer,
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    hltype character varying(10),
    structname character varying(50),
    searchtext character varying(500),
    params character varying(500),
    axp_appsearch_dataid numeric(16,0)
);


ALTER TABLE agilespacefresh.axp_appsearch_data OWNER TO agilespace;

--
-- TOC entry 353 (class 1259 OID 2005462)
-- Name: axp_appsearch_data_v2; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_appsearch_data_v2 (
    hltype character varying(10),
    structname character varying(25),
    searchtext character varying(200),
    params character varying(150),
    createdon date DEFAULT CURRENT_DATE,
    docid character varying(50)
);


ALTER TABLE agilespacefresh.axp_appsearch_data_v2 OWNER TO agilespace;

--
-- TOC entry 354 (class 1259 OID 2005466)
-- Name: axpages; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpages (
    name character varying(15) NOT NULL,
    caption character varying(50),
    props text,
    blobno numeric(3,0) NOT NULL,
    img character varying(50),
    visible character(1),
    type character(1),
    parent character varying(15),
    ordno numeric(5,0),
    levelno numeric(5,0),
    updatedon character varying(25),
    createdon character varying(25),
    importedon character varying(25),
    createdby character varying(25),
    updatedby character varying(25),
    importedby character varying(25),
    readonly character varying(1),
    updusername character varying(25),
    category character varying(30),
    pagetype character varying(15),
    intview character varying(1),
    webenable character varying(1),
    shortcut character varying(30),
    icon character varying(100),
    websubtype character varying(15),
    workflow character varying(5),
    oldappurl character varying(100)
);


ALTER TABLE agilespacefresh.axpages OWNER TO agilespace;

--
-- TOC entry 355 (class 1259 OID 2005471)
-- Name: axp_vw_menu; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.axp_vw_menu AS
 SELECT replace(replace((COALESCE(h.caption, ''::text) || COALESCE(('\'::text || (g.caption)::text), ''::text)), '\\\'::text, '\'::text), '\\'::text, '\'::text) AS menupath,
    g.caption,
    g.name,
    g.ordno,
    g.levelno,
    g.parent,
    g.type,
    g.pagetype,
    replace(replace(((COALESCE(('\'::text || (g.visible)::text), 'F'::text) || COALESCE(('\'::text || h.visible), ''::text)) || '\'::text), '\\\'::text, '\'::text), '\\'::text, '\'::text) AS visible
   FROM (agilespacefresh.axpages g
     LEFT JOIN ( SELECT (COALESCE(f.caption, ''::text) || COALESCE(('\'::text || (e.caption)::text), ''::text)) AS caption,
            e.parent,
            e.name,
            ((COALESCE(('\'::text || f.visible), ''::text) || COALESCE(('\'::text || (e.visible)::text), ''::text)) || '\'::text) AS visible
           FROM (agilespacefresh.axpages e
             LEFT JOIN ( SELECT (((COALESCE(d.caption, ''::character varying))::text || '\'::text) || (COALESCE(c.caption, ''::character varying))::text) AS caption,
                    c.name,
                    ((COALESCE(('\'::text || d.visible), ''::text) || COALESCE(('\'::text || (c.visible)::text), ''::text)) || '\'::text) AS visible
                   FROM (agilespacefresh.axpages c
                     LEFT JOIN ( SELECT a.name,
                            a.parent,
                            a.caption,
                            a.levelno,
                            a.ordno,
                            1 AS levlno,
                            (('\'::text || (a.visible)::text) || '\'::text) AS visible
                           FROM agilespacefresh.axpages a
                          WHERE (a.levelno = (0)::numeric)
                          ORDER BY a.levelno, a.ordno) d ON (((c.parent)::text = (d.name)::text)))
                  WHERE (c.levelno = ANY (ARRAY[(1)::numeric, (0)::numeric]))) f ON (((e.parent)::text = (f.name)::text)))
          WHERE (e.levelno = ANY (ARRAY[(1)::numeric, (0)::numeric, (2)::numeric]))) h ON (((g.parent)::text = (h.name)::text)))
  WHERE (g.levelno <= (3)::numeric)
  ORDER BY g.ordno, g.levelno;


ALTER TABLE agilespacefresh.axp_vw_menu OWNER TO agilespace;

--
-- TOC entry 356 (class 1259 OID 2005476)
-- Name: iviews; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.iviews (
    name character varying(15) NOT NULL,
    caption character varying(2000),
    props text,
    blobno numeric(3,0) NOT NULL,
    updatedon character varying(25),
    createdon character varying(25),
    importedon character varying(25),
    createdby character varying(25),
    updatedby character varying(25),
    importedby character varying(25),
    readonly character varying(1),
    updusername character varying(25)
);


ALTER TABLE agilespacefresh.iviews OWNER TO agilespace;

--
-- TOC entry 357 (class 1259 OID 2005481)
-- Name: axp_appsearch_data_new; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.axp_appsearch_data_new AS
 SELECT 2 AS slno,
    axp_appsearch_data_v2.hltype,
    axp_appsearch_data_v2.structname,
    btrim(replace((axp_appsearch_data_v2.searchtext)::text, 'View'::text, ' '::text)) AS searchtext,
    axp_appsearch_data_v2.params,
    a.oldappurl
   FROM (agilespacefresh.axp_appsearch_data_v2
     JOIN agilespacefresh.axpages a ON (((
        CASE axp_appsearch_data_v2.hltype
            WHEN 'iview'::text THEN (('i'::text || (axp_appsearch_data_v2.structname)::text))::character varying
            WHEN 'tstruct'::text THEN (('t'::text || (axp_appsearch_data_v2.structname)::text))::character varying
            ELSE axp_appsearch_data_v2.structname
        END)::text = (
        CASE
            WHEN ((axp_appsearch_data_v2.hltype)::text = 'Page'::text) THEN a.name
            ELSE a.pagetype
        END)::text)))
  WHERE (lower((axp_appsearch_data_v2.params)::text) !~~ '%current_date%'::text)
UNION ALL
 SELECT 1.9 AS slno,
    a.hltype,
    a.structname,
    btrim(replace((a.searchtext)::text, 'View'::text, ' '::text)) AS searchtext,
    a.params,
    p.oldappurl
   FROM (agilespacefresh.axp_appsearch_data a
     JOIN agilespacefresh.axpages p ON (((
        CASE a.hltype
            WHEN 'iview'::text THEN (('i'::text || (a.structname)::text))::character varying
            WHEN 'tstruct'::text THEN (('t'::text || (a.structname)::text))::character varying
            ELSE a.structname
        END)::text = (
        CASE
            WHEN ((a.hltype)::text = 'Page'::text) THEN p.name
            ELSE p.pagetype
        END)::text)))
  WHERE (NOT (EXISTS ( SELECT 'x'::text AS text
           FROM agilespacefresh.axp_appsearch_data_v2 b
          WHERE (((a.structname)::text = (b.structname)::text) AND ((a.params)::text = (b.params)::text)))))
UNION ALL
 SELECT 2 AS slno,
    axp_appsearch_data_v2.hltype,
    axp_appsearch_data_v2.structname,
    btrim(replace((axp_appsearch_data_v2.searchtext)::text, 'View'::text, ' '::text)) AS searchtext,
    replace(replace(replace(replace(replace(replace(replace(replace(replace(replace((axp_appsearch_data_v2.params)::text, 'date_trunc(''month'',current_date)'::text, btrim(to_char(date_trunc('month'::text, (CURRENT_DATE)::timestamp with time zone), 'dd/mm/yyyy'::text))), 'date_trunc(''month'',(add_months(current_date,0-1)))'::text, btrim(to_char(date_trunc('month'::text, (agilespacefresh.add_months(CURRENT_DATE, (0 - 1)))::timestamp with time zone), 'dd/mm/yyyy'::text))), 'date_trunc(''month'', current_date) + interval ''0 month'' - interval ''1 day'''::text, btrim(to_char(((date_trunc('month'::text, (CURRENT_DATE)::timestamp with time zone) + '00:00:00'::interval) - '1 day'::interval), 'dd/mm/yyyy'::text))), 'date_trunc(''week'',current_date)'::text, btrim(to_char(date_trunc('week'::text, (CURRENT_DATE)::timestamp with time zone), 'dd/mm/yyyy'::text))), 'date_trunc(''week'',current_date-7)+ interval ''6 day'''::text, btrim(to_char((date_trunc('week'::text, ((CURRENT_DATE - 7))::timestamp with time zone) + '6 days'::interval), 'dd/mm/yyyy'::text))), 'date_trunc(''week'',current_date-7)'::text, btrim(to_char(date_trunc('week'::text, ((CURRENT_DATE - 7))::timestamp with time zone), 'dd/mm/yyyy'::text))), 'date_trunc(''month'',current_date)'::text, btrim(to_char(date_trunc('month'::text, (CURRENT_DATE)::timestamp with time zone), 'dd/mm/yyyy'::text))), 'current_date-1'::text, btrim(to_char(((CURRENT_DATE - 1))::timestamp with time zone, 'dd/mm/yyyy'::text))), 'current_date'::text, btrim(to_char((CURRENT_DATE)::timestamp with time zone, 'dd/mm/yyyy'::text))), ' &'::text, '&'::text) AS params,
    a.oldappurl
   FROM (agilespacefresh.axp_appsearch_data_v2
     JOIN agilespacefresh.axpages a ON (((
        CASE axp_appsearch_data_v2.hltype
            WHEN 'iview'::text THEN (('i'::text || (axp_appsearch_data_v2.structname)::text))::character varying
            WHEN 'tstruct'::text THEN (('t'::text || (axp_appsearch_data_v2.structname)::text))::character varying
            ELSE axp_appsearch_data_v2.structname
        END)::text = (
        CASE
            WHEN ((axp_appsearch_data_v2.hltype)::text = 'Page'::text) THEN a.name
            ELSE a.pagetype
        END)::text)))
  WHERE (lower((axp_appsearch_data_v2.params)::text) ~~ '%current_date%'::text)
UNION ALL
 SELECT 1 AS slno,
    'tstruct'::character varying AS hltype,
    t.name AS structname,
    t.caption AS searchtext,
    NULL::character varying AS params,
    p.oldappurl
   FROM (agilespacefresh.tstructs t
     JOIN agilespacefresh.axpages p ON ((('t'::text || (t.name)::text) = (p.pagetype)::text)))
  WHERE ((t.blobno = (1)::numeric) AND (EXISTS ( SELECT 'x'::text AS text
           FROM agilespacefresh.axp_vw_menu x
          WHERE (((x.pagetype)::text ~~ 't%'::text) AND (btrim(substr((x.pagetype)::text, 2, 20)) = (t.name)::text) AND (x.visible !~~ '%F%'::text)))))
UNION ALL
 SELECT 0 AS slno,
    'iview'::character varying AS hltype,
    i.name AS structname,
    i.caption AS searchtext,
    NULL::character varying AS params,
    p.oldappurl
   FROM (agilespacefresh.iviews i
     JOIN agilespacefresh.axpages p ON ((('i'::text || (i.name)::text) = (p.pagetype)::text)))
  WHERE ((i.blobno = (1)::numeric) AND (EXISTS ( SELECT 'x'::text AS text
           FROM agilespacefresh.axp_vw_menu x
          WHERE (((x.pagetype)::text ~~ 'i%'::text) AND (btrim(substr((x.pagetype)::text, 2, 20)) = (i.name)::text) AND (x.visible !~~ '%F%'::text)))))
UNION ALL
 SELECT 3 AS slno,
    'Page'::character varying AS hltype,
    axp_vw_menu.name AS structname,
    axp_vw_menu.caption AS searchtext,
    NULL::character varying AS params,
    p.oldappurl
   FROM (agilespacefresh.axp_vw_menu
     JOIN agilespacefresh.axpages p ON (((axp_vw_menu.name)::text = (p.name)::text)))
  WHERE ((axp_vw_menu.pagetype)::text = 'web'::text)
  ORDER BY 1;


ALTER TABLE agilespacefresh.axp_appsearch_data_new OWNER TO agilespace;

--
-- TOC entry 358 (class 1259 OID 2005486)
-- Name: axuseraccess; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axuseraccess (
    rname character varying(20) NOT NULL,
    sname character varying(15) NOT NULL,
    stype character varying(1) NOT NULL,
    props text,
    blobno numeric(3,0),
    updatedon character varying(25),
    actflag character varying(1)
);


ALTER TABLE agilespacefresh.axuseraccess OWNER TO agilespace;

--
-- TOC entry 359 (class 1259 OID 2005491)
-- Name: axusergroups; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axusergroups (
    groupno numeric(7,0),
    groupname character varying(30) NOT NULL,
    userroles character varying(250),
    actflag character varying(1),
    roletype character varying(20),
    active character varying(1),
    dhomepage character varying(200),
    axusergroupsid numeric(15,0),
    cancel character varying(10),
    sourceid numeric(15,0),
    cancelremarks character varying(150),
    homepage character varying(255) DEFAULT NULL::character varying,
    modifiedon date,
    wkid character varying(100),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    selfregistration character varying(10),
    approvedby character varying(2000),
    apprequired character varying(1)
);


ALTER TABLE agilespacefresh.axusergroups OWNER TO agilespace;

--
-- TOC entry 360 (class 1259 OID 2005497)
-- Name: axuserlevelgroups; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axuserlevelgroups (
    username character varying(30),
    usergroup character varying(30),
    startdate timestamp without time zone,
    enddate timestamp without time zone,
    axuserlevelgroupsrow numeric(4,0),
    axusername character varying(50),
    axusergroup character varying(30),
    axusersid numeric(15,0),
    axuserlevelgroupsid numeric(15,0)
);


ALTER TABLE agilespacefresh.axuserlevelgroups OWNER TO agilespace;

--
-- TOC entry 361 (class 1259 OID 2005500)
-- Name: axp_appsearch; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.axp_appsearch AS
 SELECT DISTINCT a.searchtext,
    ((a.params)::text ||
        CASE
            WHEN ((a.params IS NOT NULL) AND (lower((a.params)::text) !~~ '%~act%'::text)) THEN '~act=load'::text
            ELSE NULL::text
        END) AS params,
    a.hltype,
    a.structname,
    a.username,
    a.oldappurl
   FROM ( SELECT s.slno,
            s.searchtext,
            s.params,
            s.hltype,
            s.structname,
            lg.username,
            s.oldappurl
           FROM agilespacefresh.axp_appsearch_data_new s,
            agilespacefresh.axuseraccess a_1,
            agilespacefresh.axusergroups g,
            agilespacefresh.axuserlevelgroups lg
          WHERE (((a_1.sname)::text = (s.structname)::text) AND ((a_1.rname)::text = (g.userroles)::text) AND ((g.groupname)::text = (lg.usergroup)::text) AND ((a_1.stype)::text = ANY (ARRAY[('t'::character varying)::text, ('i'::character varying)::text])))
          GROUP BY s.searchtext, s.params, s.hltype, s.structname, lg.username, s.slno, s.oldappurl
        UNION
         SELECT b.slno,
            b.searchtext,
            b.params,
            b.hltype,
            b.structname,
            lg.username,
            b.oldappurl
           FROM agilespacefresh.axuserlevelgroups lg,
            ( SELECT DISTINCT s.searchtext,
                    s.params,
                    s.hltype,
                    s.structname,
                    0 AS slno,
                    s.oldappurl
                   FROM (agilespacefresh.axp_appsearch_data_new s
                     LEFT JOIN agilespacefresh.axuseraccess a_1 ON ((((s.structname)::text = (a_1.sname)::text) AND ((a_1.stype)::text = ANY (ARRAY[('t'::character varying)::text, ('i'::character varying)::text])))))) b
          WHERE ((lg.usergroup)::text = 'default'::text)
  ORDER BY 1, 6) a;


ALTER TABLE agilespacefresh.axp_appsearch OWNER TO agilespace;

--
-- TOC entry 362 (class 1259 OID 2005505)
-- Name: axp_appsearch_data_period; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_appsearch_data_period (
    axp_appsearch_data_periodid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    docid character varying(30),
    hltype character varying(10),
    caption character varying(100),
    structname character varying(30),
    action character varying(10),
    periodically character varying(1),
    searchfor character varying(50),
    period character varying(20),
    searchtext character varying(200),
    periodfromdt character varying(100),
    periodtodt character varying(100),
    fromdt character varying(30),
    todt character varying(30),
    duplicate character varying(150),
    dynamicparam character varying(1),
    srctrans character varying(100),
    srctransid character varying(10),
    tsrcfield character varying(100),
    srcfield character varying(50),
    dcname character varying(10),
    srctable character varying(100),
    paramvalue character varying(100),
    sourcefieldchanged character varying(1),
    srcmultipletransid character varying(10),
    params character varying(200),
    triggerscripts character varying(1000)
);


ALTER TABLE agilespacefresh.axp_appsearch_data_period OWNER TO agilespace;

--
-- TOC entry 363 (class 1259 OID 2005510)
-- Name: axp_appsearchdtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_appsearchdtl (
    axp_appsearchdtlid numeric(16,0) NOT NULL,
    axp_appsearch_dataid numeric(16,0),
    axp_appsearchdtlrow integer,
    paramcaption character varying(500),
    paramname character varying(500),
    paramvalue character varying(500),
    tiviewparams character varying(500),
    refsearchtext character varying(500)
);


ALTER TABLE agilespacefresh.axp_appsearchdtl OWNER TO agilespace;

--
-- TOC entry 364 (class 1259 OID 2005515)
-- Name: axp_cards; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_cards (
    axp_cardsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon date,
    createdby character varying(50),
    createdon date,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    cardtypeui character varying(500),
    cardtype character varying(30),
    cardicon character varying(100),
    charttype character varying(50),
    sql_editor_cardsql text,
    cardname character varying(100),
    heightui numeric(10,0),
    height character varying(10),
    widthui character varying(20),
    width character varying(10),
    cachedata character varying(20),
    autorefresh numeric(10,0),
    orderno numeric(10,0),
    clrpalet character varying(20),
    trufalse character varying(20),
    chartprops character varying(4000),
    accessstringui character varying(1000),
    chartjson character varying(4000),
    accessstring character varying(1000),
    axpfile_imgcard character varying(100),
    con_name character varying(100),
    pagecaption character varying(100),
    axpfilepath_imgcard character varying(100),
    pagename character varying(20),
    cardbgclr character varying(20),
    hcaption character varying(1000),
    isparentpage character varying(10),
    htype character varying(20),
    pagedesc text,
    htranstypeui character varying(200),
    htransid character varying(10),
    is_migrated character varying(1),
    html_editor_card text,
    calendarsource character varying(250),
    calendarstransid character varying(10),
    exp_editor_buttons text,
    inhomepage character varying(1),
    card_datasource character varying(100),
    pluginname character varying(200),
    indashboard character varying(1)
);


ALTER TABLE agilespacefresh.axp_cards OWNER TO agilespace;

--
-- TOC entry 365 (class 1259 OID 2005520)
-- Name: axp_chartconfig; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_chartconfig (
    axp_chartconfigid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    title character varying(200),
    chartgroup character varying(50),
    cusertype character varying(50),
    subtitle character varying(200),
    graphtype character varying(50),
    changegraph character varying(3),
    piecolor character varying(100),
    linkname character varying(40),
    sqltext text,
    hyptext character varying(500),
    flinkname character varying(10)
);


ALTER TABLE agilespacefresh.axp_chartconfig OWNER TO agilespace;

--
-- TOC entry 366 (class 1259 OID 2005525)
-- Name: axp_customdatatype; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_customdatatype (
    axp_customdatatypeid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    typename character varying(20),
    datatype character varying(20),
    width numeric(2,0),
    dwidth numeric(1,0),
    isactive character varying(1)
);


ALTER TABLE agilespacefresh.axp_customdatatype OWNER TO agilespace;

--
-- TOC entry 367 (class 1259 OID 2005530)
-- Name: axp_customtypes; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_customtypes (
    typename character varying(15),
    datatype character varying(10),
    width numeric(4,0),
    deci numeric(2,0)
);


ALTER TABLE agilespacefresh.axp_customtypes OWNER TO agilespace;

--
-- TOC entry 368 (class 1259 OID 2005533)
-- Name: axp_dbwdetails; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_dbwdetails (
    axp_dbwdetailsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    title character varying(200),
    subtitle character varying(200),
    graphtype character varying(50),
    piecolor character varying(100),
    linkname character varying(40),
    sqltext text,
    hyptext character varying(500),
    flinkname character varying(10),
    uname character varying(60),
    chartgroup character varying(100)
);


ALTER TABLE agilespacefresh.axp_dbwdetails OWNER TO agilespace;

--
-- TOC entry 369 (class 1259 OID 2005538)
-- Name: axp_dependent; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_dependent (
    tstruct character varying(5),
    parentfield character varying(30),
    childfield character varying(30),
    dependenttype character varying(5),
    frmno numeric(3,0),
    fldsql character varying(4000),
    active character varying(5),
    userdefined character varying(5)
);


ALTER TABLE agilespacefresh.axp_dependent OWNER TO agilespace;

--
-- TOC entry 370 (class 1259 OID 2005543)
-- Name: axp_files; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_files (
    filename character varying(200),
    storedon timestamp without time zone,
    filecontent text,
    blobno numeric(3,0),
    status character varying(1000)
);


ALTER TABLE agilespacefresh.axp_files OWNER TO agilespace;

--
-- TOC entry 371 (class 1259 OID 2005548)
-- Name: axp_formload; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_formload (
    tstruct character varying(5),
    context character varying(20),
    fieldname character varying(30),
    fldsql character varying(4000),
    frmno numeric(3,0),
    active character varying(5),
    userdefined character varying(5)
);


ALTER TABLE agilespacefresh.axp_formload OWNER TO agilespace;

--
-- TOC entry 372 (class 1259 OID 2005553)
-- Name: axp_mailjobs; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_mailjobs (
    mailto character varying(1000),
    mailcc character varying(1000),
    subject character varying(1000),
    body text,
    recipientcategory character varying(500),
    enquiryno character varying(30),
    attachments character varying(1000),
    iviewname character varying(10),
    iviewparams character varying(500),
    transid character varying(10),
    recordid numeric(16,0),
    status numeric(2,0),
    errormessage character varying(500),
    senton date,
    jobid numeric(15,0),
    jobdate date
);


ALTER TABLE agilespacefresh.axp_mailjobs OWNER TO agilespace;

--
-- TOC entry 373 (class 1259 OID 2005558)
-- Name: axp_mailjobsid; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.axp_mailjobsid
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.axp_mailjobsid OWNER TO agilespace;

--
-- TOC entry 374 (class 1259 OID 2005559)
-- Name: axp_params; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_params (
    tstruct character varying(5),
    context character varying(20),
    childfield character varying(30),
    paramname character varying(30),
    paramtype character varying(30),
    allrows character varying(5),
    frmno numeric(3,0),
    fldsql character varying(4000),
    active character varying(5),
    userdefined character varying(5),
    dirparam character varying(1)
);


ALTER TABLE agilespacefresh.axp_params OWNER TO agilespace;

--
-- TOC entry 375 (class 1259 OID 2005564)
-- Name: axp_reportjobs; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_reportjobs (
    jobid numeric(10,0) NOT NULL,
    jobdate timestamp without time zone,
    iviewname character varying(8),
    iviewparams character varying(500),
    transid character varying(5),
    recordid numeric(16,0),
    status numeric(1,0),
    errormessage character varying(1000),
    senton timestamp without time zone,
    filepath character varying(100),
    tablename character varying(30),
    sjobid character varying(50)
);


ALTER TABLE agilespacefresh.axp_reportjobs OWNER TO agilespace;

--
-- TOC entry 376 (class 1259 OID 2005569)
-- Name: axp_sales_data; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_sales_data (
    first_name character varying(50),
    country character varying(50),
    sales_year integer,
    sales_qty integer,
    sales_amount integer
);


ALTER TABLE agilespacefresh.axp_sales_data OWNER TO agilespace;

--
-- TOC entry 377 (class 1259 OID 2005572)
-- Name: axp_smartviews_config; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_smartviews_config (
    username character varying(100) NOT NULL,
    ivname character varying(15) NOT NULL,
    config_data text,
    createdon character varying(50),
    createdby character varying(100),
    updatedon character varying(50),
    updatedby character varying(100)
);


ALTER TABLE agilespacefresh.axp_smartviews_config OWNER TO agilespace;

--
-- TOC entry 378 (class 1259 OID 2005577)
-- Name: axp_struct_release_log; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_struct_release_log (
    createdon timestamp without time zone DEFAULT now(),
    axpversion character varying(100)
);


ALTER TABLE agilespacefresh.axp_struct_release_log OWNER TO agilespace;

--
-- TOC entry 379 (class 1259 OID 2005581)
-- Name: axp_tabledescriptor; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_tabledescriptor (
    axp_tabledescriptorid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon date,
    createdby character varying(50),
    createdon date,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    dname character varying(50),
    tjson character varying(2000),
    isactive character varying(1)
);


ALTER TABLE agilespacefresh.axp_tabledescriptor OWNER TO agilespace;

--
-- TOC entry 380 (class 1259 OID 2005586)
-- Name: axp_transcheck; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_transcheck (
    sessionid character varying(50)
);


ALTER TABLE agilespacefresh.axp_transcheck OWNER TO agilespace;

--
-- TOC entry 381 (class 1259 OID 2005589)
-- Name: axp_versionchangedetails; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_versionchangedetails (
    verno character varying(50),
    transid character varying(50),
    name character varying(200),
    stype character varying(100),
    status character varying(20),
    property character varying(100),
    oldvalue character varying(250),
    newvalue character varying(250),
    blobno numeric(3,0),
    oldvalueclob text,
    newvalueclob text
);


ALTER TABLE agilespacefresh.axp_versionchangedetails OWNER TO agilespace;

--
-- TOC entry 382 (class 1259 OID 2005594)
-- Name: axp_versionchanges; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_versionchanges (
    verno character varying(50),
    stype character varying(20),
    name character varying(20),
    caption character varying(50),
    createdby character varying(25),
    createdon character varying(25),
    updatedby character varying(25),
    updatedon character varying(25)
);


ALTER TABLE agilespacefresh.axp_versionchanges OWNER TO agilespace;

--
-- TOC entry 383 (class 1259 OID 2005597)
-- Name: axp_versions; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_versions (
    verno character varying(50),
    domainname character varying(50),
    servername character varying(50),
    publishedon character varying(50),
    publishedby character varying(30),
    publishedfrom character varying(20),
    comments text,
    blobno numeric(3,0)
);


ALTER TABLE agilespacefresh.axp_versions OWNER TO agilespace;

--
-- TOC entry 384 (class 1259 OID 2005602)
-- Name: axp_vp; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_vp (
    axp_vpid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon date,
    createdby character varying(50),
    createdon date,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    vpname character varying(50),
    isparam character varying(1),
    vscript text,
    pcaption character varying(100),
    pdatatype character varying(20),
    modeofentry character varying(10),
    sql_editor_psql text,
    vpvalue character varying(2000),
    display character varying(1),
    readonly character varying(1),
    postaccept character varying(10),
    postselect character varying(10),
    customdatatype character varying(100),
    datawidth numeric(10,0),
    ttransid character varying(10),
    dcselect character varying(200),
    masterdl character varying(200),
    source character varying(200),
    masterdlselect character varying(200),
    masterdlui character varying(200),
    isconstant character varying(1),
    isvariable character varying(1),
    isappparam character varying(1),
    remarks text
);


ALTER TABLE agilespacefresh.axp_vp OWNER TO agilespace;

--
-- TOC entry 385 (class 1259 OID 2005607)
-- Name: axp_vw_menulist; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.axp_vw_menulist AS
 SELECT replace(replace((COALESCE(('\'::text || h.caption), ''::text) || COALESCE(('\'::text || (g.caption)::text), ''::text)), '\\\'::text, '\'::text), '\\'::text, '\'::text) AS menupath,
    g.name,
    g.ordno,
    g.levelno,
    g.parent,
    g.type,
    g.pagetype
   FROM (agilespacefresh.axpages g
     LEFT JOIN ( SELECT (COALESCE(('\'::text || f.caption), ''::text) || COALESCE(('\'::text || (e.caption)::text), ''::text)) AS caption,
            e.parent,
            e.name
           FROM (agilespacefresh.axpages e
             LEFT JOIN ( SELECT ((COALESCE(('\'::text || (d.caption)::text), ''::text) || '\'::text) || (COALESCE(c.caption, ''::character varying))::text) AS caption,
                    c.name
                   FROM (agilespacefresh.axpages c
                     LEFT JOIN ( SELECT a.name,
                            a.parent,
                            a.caption,
                            a.levelno,
                            a.ordno,
                            1 AS levlno
                           FROM agilespacefresh.axpages a
                          WHERE (a.levelno = (0)::numeric)
                          ORDER BY a.levelno, a.ordno) d ON (((c.parent)::text = (d.name)::text)))
                  WHERE (c.levelno = ANY (ARRAY[(1)::numeric, (0)::numeric]))) f ON (((e.parent)::text = (f.name)::text)))
          WHERE (e.levelno = ANY (ARRAY[(1)::numeric, (0)::numeric, (2)::numeric]))) h ON (((g.parent)::text = (h.name)::text)))
  WHERE (COALESCE(g.levelno, (0)::numeric) <= (3)::numeric)
  ORDER BY g.ordno, g.levelno;


ALTER TABLE agilespacefresh.axp_vw_menulist OWNER TO agilespace;

--
-- TOC entry 386 (class 1259 OID 2005612)
-- Name: axp_webtrace; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axp_webtrace (
    username character varying(50),
    sessionid character varying(50),
    datetime timestamp without time zone,
    logtext text
);


ALTER TABLE agilespacefresh.axp_webtrace OWNER TO agilespace;

--
-- TOC entry 387 (class 1259 OID 2005617)
-- Name: axpagedetail; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpagedetail (
    name character varying(15),
    sname character varying(15),
    stype character varying(1)
);


ALTER TABLE agilespacefresh.axpagedetail OWNER TO agilespace;

--
-- TOC entry 388 (class 1259 OID 2005620)
-- Name: axpcal; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpcal (
    axpcalid numeric(18,0) NOT NULL,
    profitdoc character(1),
    approval numeric(38,0),
    approvalstatus character(1),
    maxapproved numeric(2,0),
    cancel character(1),
    sourceid numeric(38,0),
    mapname character varying(20),
    stdate timestamp without time zone,
    sttime character varying(10),
    enddate timestamp without time zone,
    endtime character varying(10),
    task character varying(80),
    recordid numeric(15,0),
    active character varying(10),
    status character varying(20),
    transid character varying(5),
    unameid numeric(15,0),
    inv character varying(5),
    pagename character varying(20)
);


ALTER TABLE agilespacefresh.axpcal OWNER TO agilespace;

--
-- TOC entry 389 (class 1259 OID 2005623)
-- Name: axpclouddevsettings; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpclouddevsettings (
    userid character varying(50),
    tranid character varying(200),
    type character varying(50),
    value text
);


ALTER TABLE agilespacefresh.axpclouddevsettings OWNER TO agilespace;

--
-- TOC entry 390 (class 1259 OID 2005628)
-- Name: axpconfigsiv_mainrepo; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpconfigsiv_mainrepo (
    configname character varying(30),
    cvalue character varying(240),
    condition character varying(240)
);


ALTER TABLE agilespacefresh.axpconfigsiv_mainrepo OWNER TO agilespace;

--
-- TOC entry 391 (class 1259 OID 2005633)
-- Name: axpdc; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdc (
    tstruct character varying(5),
    dname character varying(10),
    caption character varying(2000),
    tablename character varying(50),
    asgrid character varying(1),
    allowchange character varying(1),
    allowempty character varying(1),
    popup character varying(1),
    dcno numeric(2,0),
    addrow character varying(1),
    deleterow character varying(1),
    purpose text,
    createdby character varying(100),
    createdon timestamp without time zone,
    modifiedby character varying(100),
    modifiedon timestamp without time zone
);


ALTER TABLE agilespacefresh.axpdc OWNER TO agilespace;

--
-- TOC entry 392 (class 1259 OID 2005638)
-- Name: axpdef_axcalendar_event; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_axcalendar_event (
    axpdef_axcalendar_eventid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    eventname character varying(250),
    eventcolor character varying(50)
);


ALTER TABLE agilespacefresh.axpdef_axcalendar_event OWNER TO agilespace;

--
-- TOC entry 393 (class 1259 OID 2005643)
-- Name: axpdef_axcalendar_eventstatus; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_axcalendar_eventstatus (
    axpdef_axcalendar_eventstatusid numeric(16,0) NOT NULL,
    axpdef_axcalendar_eventid numeric(16,0),
    axpdef_axcalendar_eventstatusrow integer,
    eventstatus character varying(200),
    eventstatcolor character varying(50)
);


ALTER TABLE agilespacefresh.axpdef_axcalendar_eventstatus OWNER TO agilespace;

--
-- TOC entry 394 (class 1259 OID 2005646)
-- Name: axpdef_axpertapi; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_axpertapi (
    axpdef_axpertapiid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    apicategory character varying(30),
    page character varying(10),
    pagecaption character varying(200),
    pagename character varying(10),
    pagescript character varying(100),
    pagescriptname character varying(10),
    fldcnd numeric(10,0),
    formcaption character varying(200),
    tname character varying(5),
    dd_caption character varying(100),
    fldname character varying(100),
    iviewcaption character varying(200),
    iname character varying(8),
    sql_reffield numeric(16,0),
    sql_editor_apiquery text,
    sql_output character varying(1),
    apiurl character varying(2000),
    reqformat text,
    res_success text,
    res_fail text
);


ALTER TABLE agilespacefresh.axpdef_axpertapi OWNER TO agilespace;

--
-- TOC entry 395 (class 1259 OID 2005651)
-- Name: axpdef_axpertprops; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_axpertprops (
    axpdef_axpertpropsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    smtphost character varying(200),
    smtpport numeric(4,0),
    smtpuser character varying(200),
    smtppwd character varying(50),
    axpsiteno numeric(10,0),
    amtinmillions character varying(1),
    currseperator character varying(1),
    lastlogin character varying(1),
    autogen character varying(1),
    customfrom character varying(20),
    customto character varying(20),
    loginattempt numeric(2,0),
    pwdexp numeric(4,0),
    pwdchange numeric(4,0),
    pwdminchar numeric(2,0),
    pwdreuse numeric(2,0),
    pwdalphanum character varying(1),
    pwdencrypt character varying(1),
    pwdmaxchar numeric(4,0),
    pwdcapchar numeric(2,0),
    pwdsmallchar numeric(2,0),
    pwdnumchar numeric(2,0),
    pwdsplchar numeric(2,0),
    emailsubject character varying(250),
    emailbody text,
    smscontent text,
    onlysso character varying(1),
    sso_windows character varying(1),
    sso_saml character varying(1),
    sso_office365 character varying(1),
    sso_okta character varying(1),
    sso_google character varying(1),
    sso_facebook character varying(1),
    sso_openid character varying(1),
    tbl_windows character varying(2000),
    tbl_saml character varying(4000),
    tbl_okta character varying(4000),
    tbl_office365 character varying(4000),
    tbl_google character varying(4000),
    tbl_facebook character varying(4000),
    tbl_openid character varying(4000),
    otpauth character varying(1),
    otpchars character varying(1),
    otpexpiry character varying(10)
);


ALTER TABLE agilespacefresh.axpdef_axpertprops OWNER TO agilespace;

--
-- TOC entry 396 (class 1259 OID 2005656)
-- Name: axpdef_axvars; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_axvars (
    axpdef_axvarsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon date,
    createdby character varying(50),
    createdon date,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    transid character varying(5),
    db_function character varying(500),
    db_function_params character varying(4000),
    event_onlogin character varying(1),
    event_onformload character varying(1),
    forms character varying(4000),
    forms_transid character varying(4000),
    event_onreportload character varying(1),
    reports character varying(4000),
    reports_transid character varying(4000),
    isdbobj character varying(1),
    remarks text
);


ALTER TABLE agilespacefresh.axpdef_axvars OWNER TO agilespace;

--
-- TOC entry 397 (class 1259 OID 2005661)
-- Name: axpdef_axvars_dbvar; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_axvars_dbvar (
    axpdef_axvars_dbvarid numeric(16,0) NOT NULL,
    axpdef_axvarsid numeric(16,0),
    axpdef_axvars_dbvarrow integer,
    db_varname character varying(200),
    db_varval character varying(500),
    db_vartype character varying(100),
    db_varcaption character varying(500)
);


ALTER TABLE agilespacefresh.axpdef_axvars_dbvar OWNER TO agilespace;

--
-- TOC entry 398 (class 1259 OID 2005666)
-- Name: axpdef_branch; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_branch (
    axpdef_branchid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    users_branchlocationname character varying(254),
    isactive character varying(20),
    company numeric(16,0),
    companybranch character varying(200)
);


ALTER TABLE agilespacefresh.axpdef_branch OWNER TO agilespace;

--
-- TOC entry 399 (class 1259 OID 2005671)
-- Name: axpdef_company; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_company (
    axpdef_companyid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    company_name character varying(254),
    business_vertical character varying(100),
    company_country character varying(100),
    company_state character varying(100),
    company_address text,
    company_regno character varying(50),
    company_displaytitle character varying(254),
    primarycompany character varying(1),
    url_fb character varying(500),
    url_instagram character varying(100),
    url_twitter character varying(100),
    url_youtube character varying(100),
    url_linkedin character varying(100),
    company_url character varying(100)
);


ALTER TABLE agilespacefresh.axpdef_company OWNER TO agilespace;

--
-- TOC entry 400 (class 1259 OID 2005676)
-- Name: axpdef_dac_config; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_dac_config (
    axpdef_dac_configid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    user_name_role character varying(20),
    uname character varying(200),
    urole character varying(200),
    editmode character varying(10),
    dataaccess character varying(50),
    dataaccesscnd numeric(10,0),
    formcap character varying(300),
    stransid character varying(10),
    editmodeui character varying(20)
);


ALTER TABLE agilespacefresh.axpdef_dac_config OWNER TO agilespace;

--
-- TOC entry 401 (class 1259 OID 2005681)
-- Name: axpdef_dac_configdtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_dac_configdtl (
    axpdef_dac_configdtlid numeric(16,0) NOT NULL,
    axpdef_dac_configid numeric(16,0),
    axpdef_dac_configdtlrow integer,
    fldcap character varying(250),
    fldname character varying(50),
    filtercnd character varying(10),
    dynamicval character varying(4),
    fldstaticval character varying(4000),
    pmtransid character varying(10),
    pmfldname character varying(50),
    fldmastvalue character varying(4000),
    flddatatype character varying(10),
    filtercndui character varying(20),
    isglovar character varying(2)
);


ALTER TABLE agilespacefresh.axpdef_dac_configdtl OWNER TO agilespace;

--
-- TOC entry 402 (class 1259 OID 2005686)
-- Name: axpdef_dac_masterconfig; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_dac_masterconfig (
    axpdef_dac_masterconfigid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    formcap character varying(500),
    stransid character varying(10),
    fldcap character varying(250),
    fldname character varying(50),
    dupchk character varying(200),
    mform character varying(200),
    mtransid character varying(10),
    mfieldcap character varying(200),
    mfldname character varying(50)
);


ALTER TABLE agilespacefresh.axpdef_dac_masterconfig OWNER TO agilespace;

--
-- TOC entry 403 (class 1259 OID 2005691)
-- Name: axpdef_dc; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_dc (
    axpdef_dcid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    recid numeric(15,0),
    stransid character varying(5),
    axpdef_tstructid numeric(15,0),
    ctdc numeric(2,0),
    name character varying(4),
    caption character varying(100),
    dupchk_dccaption character varying(150),
    tablename character varying(50),
    toldtablename character varying(100),
    dropdc character varying(10),
    field_maxnum numeric(10,0),
    type character varying(10),
    asgrid character varying(1),
    tablecount numeric(10,0),
    allowchange character varying(1),
    allowempty character varying(1),
    adddcrows character varying(1),
    deletedcrows character varying(1),
    popup character varying(1),
    purpose character varying(500),
    tdcs character varying(500),
    alldcs character varying(500),
    dcflag character varying(1),
    structname character varying(10),
    replacechar character varying(50),
    fcharcheck character varying(10),
    validchk character varying(50),
    oldtablename character varying(30),
    deleteoldtable character varying(10),
    booleandc character varying(1),
    defaultstate character varying(15)
);


ALTER TABLE agilespacefresh.axpdef_dc OWNER TO agilespace;

--
-- TOC entry 404 (class 1259 OID 2005696)
-- Name: axpdef_errcodes; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_errcodes (
    axpdef_errcodesid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    errcode character varying(10),
    errlang character varying(20),
    errmsg character varying(4000),
    applicableforms character varying(4000),
    applicabletransid character varying(1000),
    dupchk character varying(200)
);


ALTER TABLE agilespacefresh.axpdef_errcodes OWNER TO agilespace;

--
-- TOC entry 405 (class 1259 OID 2005701)
-- Name: axpdef_fillgrid; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_fillgrid (
    axpdef_fillgridid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    recid numeric(15,0),
    stransid character varying(5),
    axpdef_tstructid numeric(15,0),
    ctfg character varying(3),
    name character varying(50),
    caption character varying(100),
    dcname character varying(10),
    purpose character varying(200),
    ctdc numeric(10,0),
    field_maxnum numeric(10,0),
    frules character varying(400),
    fdetails character varying(400),
    type character varying(10),
    axp_web_sqlexp_val_def_restrad character varying(10),
    sql_editor_sql character varying(1000),
    targetdc character varying(4),
    mapdgpfield character varying(50),
    multiselect character varying(1),
    autoshow character varying(1),
    vvalidate character varying(1),
    executeonsave character varying(1),
    firmbind character varying(1),
    sourcedc character varying(4),
    selecton character varying(20),
    footerstring character varying(250),
    exp_editor_validateexpression character varying(250),
    addrows character varying(50),
    columnproperty character varying(250),
    autoselectallrows character varying(10),
    tfillgrid character varying(400),
    allfillgrids character varying(400),
    fgflag character varying(1),
    dupchk character varying(50),
    grpfield character varying(100)
);


ALTER TABLE agilespacefresh.axpdef_fillgrid OWNER TO agilespace;

--
-- TOC entry 406 (class 1259 OID 2005706)
-- Name: axpdef_fillgriddtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_fillgriddtl (
    axpdef_fillgriddtlid numeric(16,0) NOT NULL,
    axpdef_fillgridid numeric(16,0),
    axpdef_fillgriddtlrow integer,
    htransid character varying(10),
    sourcefield character varying(50),
    sourcecaption character varying(50),
    targetfield character varying(50)
);


ALTER TABLE agilespacefresh.axpdef_fillgriddtl OWNER TO agilespace;

--
-- TOC entry 407 (class 1259 OID 2005709)
-- Name: axpdef_genmap; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_genmap (
    axpdef_genmapid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    recid numeric(15,0),
    stransid character varying(5),
    axpdef_tstructid numeric(15,0),
    ctgm numeric(2,0),
    name character varying(100),
    caption character varying(100),
    dcname character varying(10),
    ctdc numeric(10,2),
    field_maxnum numeric(10,2),
    targettstruct character varying(100),
    targettrasid character varying(5),
    basedondc character varying(10),
    controlfieldname character varying(50),
    schemaoftarget character varying(50),
    onpost character varying(100),
    purpose character varying(100),
    active character varying(1),
    onapprove character varying(1),
    onreject character varying(1),
    tgmap character varying(50),
    allgenmaps character varying(50),
    gmapflag character varying(1),
    dupchk character varying(50),
    fdetails character varying(400),
    frules character varying(400),
    groupfield character varying(20)
);


ALTER TABLE agilespacefresh.axpdef_genmap OWNER TO agilespace;

--
-- TOC entry 408 (class 1259 OID 2005714)
-- Name: axpdef_genmapdtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_genmapdtl (
    axpdef_genmapdtlid numeric(16,0) NOT NULL,
    axpdef_genmapid numeric(16,0),
    axpdef_genmapdtlrow integer,
    sourcefrom character varying(10),
    source character varying(50),
    fsource character varying(50),
    sourcedcasgridui character varying(3),
    sourcedcasgrid character varying(1),
    targetfield character varying(50),
    targetrow numeric(2,0)
);


ALTER TABLE agilespacefresh.axpdef_genmapdtl OWNER TO agilespace;

--
-- TOC entry 409 (class 1259 OID 2005717)
-- Name: axpdef_genmaprowctrl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_genmaprowctrl (
    axpdef_genmaprowctrlid numeric(16,0) NOT NULL,
    axpdef_genmapid numeric(16,0),
    axpdef_genmaprowctrlrow integer,
    rtargetrow numeric(2,0),
    rowcontrolfield character varying(50)
);


ALTER TABLE agilespacefresh.axpdef_genmaprowctrl OWNER TO agilespace;

--
-- TOC entry 410 (class 1259 OID 2005720)
-- Name: axpdef_impdata_templates; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_impdata_templates (
    axpdef_impdata_templatesid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    templatename character varying(25),
    stransid character varying(10),
    dupchk character varying(50),
    templatecap character varying(100),
    impfields character varying(4000),
    dataupd character varying(1),
    fldpkey character varying(200)
);


ALTER TABLE agilespacefresh.axpdef_impdata_templates OWNER TO agilespace;

--
-- TOC entry 411 (class 1259 OID 2005725)
-- Name: axpdef_jobs; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_jobs (
    axpdef_jobsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    jname character varying(100),
    priority character varying(1),
    prefix character varying(10),
    jobid character varying(15),
    exp_editor_jobscript text,
    jobschedule character varying(50),
    weekday character varying(15),
    jday character varying(2),
    jhrs character varying(2),
    jminutes character varying(2),
    ampm character varying(2),
    noofhrs character varying(10),
    noofmins character varying(2),
    jobstartfrom date,
    jobdesc character varying(500),
    status numeric(1,0),
    lastrun date,
    remarks character varying(500),
    isactive character varying(1),
    isdefault character varying(1),
    jobdatechar character varying(10),
    jobstarttime character varying(20),
    rediskeyname character varying(100),
    appname character varying(50),
    rediskeyval character varying(200),
    redisserver character varying(50),
    deletepending character varying(1),
    formload character varying(200),
    formtransid character varying(10),
    formevent character varying(20),
    axptm_starttime character varying(10),
    deletekey character varying(100),
    rmq_version numeric(10,0),
    rmq_json text
);


ALTER TABLE agilespacefresh.axpdef_jobs OWNER TO agilespace;

--
-- TOC entry 412 (class 1259 OID 2005730)
-- Name: axpdef_language; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_language (
    axpdef_languageid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    language character varying(100),
    fontcharset character varying(25),
    exportto character varying(1000),
    fontname character varying(200),
    fontsize character varying(10),
    exportfiles character varying(1000),
    expalltstruct character varying(10),
    expalliview character varying(10),
    tstructcap character varying(4000),
    tstructnames character varying(4000),
    iviewcap character varying(4000),
    iviewnames character varying(4000),
    uploadfiletype character varying(20)
);


ALTER TABLE agilespacefresh.axpdef_language OWNER TO agilespace;

--
-- TOC entry 413 (class 1259 OID 2005735)
-- Name: axpdef_mdmap; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_mdmap (
    axpdef_mdmapid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    recid numeric(15,0),
    stransid character varying(5),
    axpdef_tstructid numeric(15,0),
    ctmd numeric(2,0),
    name character varying(10),
    caption character varying(50),
    dcname character varying(10),
    ctdc numeric(10,2),
    field_maxnum numeric(10,2),
    mastertransaction character varying(50),
    mastertransid character varying(5),
    masterfield character varying(50),
    detailfield character varying(50),
    mastersearchfield character varying(50),
    detailsearchfield character varying(50),
    mastertable character varying(50),
    updatetype character varying(10),
    controlfield character varying(50),
    maptext character varying(2000),
    purpose character varying(100),
    extended character varying(1),
    append character varying(1),
    initondel character varying(1),
    onapprove character varying(1),
    onreject character varying(1),
    dupchk character varying(50),
    tmdmap character varying(200),
    allmdmaps character varying(200),
    mdmapflag character varying(1),
    fdetails character varying(400)
);


ALTER TABLE agilespacefresh.axpdef_mdmap OWNER TO agilespace;

--
-- TOC entry 414 (class 1259 OID 2005740)
-- Name: axpdef_news_events; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_news_events (
    axpdef_news_eventsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    title character varying(500),
    subdetails text,
    redirecturl character varying(500),
    effectfrom date,
    effecto date,
    active character varying(1)
);


ALTER TABLE agilespacefresh.axpdef_news_events OWNER TO agilespace;

--
-- TOC entry 415 (class 1259 OID 2005745)
-- Name: axpdef_peg_actor; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_peg_actor (
    axpdef_peg_actorid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    process character varying(100),
    taskname character varying(200),
    actorname character varying(2000),
    axpdef_peg_processmasterid numeric(15,0),
    dupchk character varying(2000),
    acttype numeric(10,0),
    assignmode character varying(20),
    assignmodecnd numeric(1,0),
    olddefusername character varying(4000),
    axprocessdefv2id numeric(15,0),
    defusername character varying(4000),
    stransid character varying(10),
    priorindextransid character varying(10),
    datagrpgrid character varying(100),
    applicableto character varying(30),
    applicablecnd numeric(10,0),
    sprocessname character varying(4000)
);


ALTER TABLE agilespacefresh.axpdef_peg_actor OWNER TO agilespace;

--
-- TOC entry 416 (class 1259 OID 2005750)
-- Name: axpdef_peg_actorusergrp; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_peg_actorusergrp (
    axpdef_peg_actorusergrpid numeric(16,0) NOT NULL,
    axpdef_peg_actorid numeric(16,0),
    axpdef_peg_actorusergrprow integer,
    usergroupname character varying(100),
    usergrpcode character varying(50),
    oldugrpusername character varying(4000),
    ugrpusername character varying(4000),
    ug_actorname character varying(250)
);


ALTER TABLE agilespacefresh.axpdef_peg_actorusergrp OWNER TO agilespace;

--
-- TOC entry 417 (class 1259 OID 2005755)
-- Name: axpdef_peg_group; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_peg_group (
    axpdef_peg_groupid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    actorname character varying(100),
    grpname character varying(100),
    dupchk character varying(250),
    totalcnd numeric(10,0),
    axpdef_peg_actorid numeric(15,0),
    grpcriteria character varying(3500),
    process character varying(200),
    taskname character varying(200)
);


ALTER TABLE agilespacefresh.axpdef_peg_group OWNER TO agilespace;

--
-- TOC entry 418 (class 1259 OID 2005760)
-- Name: axpdef_peg_grpfilter; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_peg_grpfilter (
    axpdef_peg_grpfilterid numeric(16,0) NOT NULL,
    axpdef_peg_actorid numeric(16,0),
    axpdef_peg_grpfilterrow integer,
    cndopr character varying(50),
    fldcnd character varying(1000),
    dg_actorname character varying(250),
    dgname character varying(100),
    tbl_datagrp character varying(4000),
    olddatagrpusers character varying(4000),
    datagrpusers character varying(4000),
    cnd character varying(20),
    stransid character varying(10),
    isformfld character varying(1),
    fldname character varying(250),
    isnum_date numeric(1,0),
    fldvalue character varying(250),
    cndoprsym character varying(10),
    condition character varying(500)
);


ALTER TABLE agilespacefresh.axpdef_peg_grpfilter OWNER TO agilespace;

--
-- TOC entry 419 (class 1259 OID 2005765)
-- Name: axpdef_peg_processmaster; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_peg_processmaster (
    axpdef_peg_processmasterid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    caption character varying(200),
    processowner character varying(300),
    axpicon_process character varying(100),
    processdesc text,
    powner character varying(250),
    pownerflg numeric(2,0),
    processtable character varying(50),
    createscr character varying(4000),
    amendment character varying(1),
    cards character varying(4000),
    amendconfirm character varying(1),
    amendconfirmmsg text
);


ALTER TABLE agilespacefresh.axpdef_peg_processmaster OWNER TO agilespace;

--
-- TOC entry 420 (class 1259 OID 2005770)
-- Name: axpdef_peg_usergroups; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_peg_usergroups (
    username character varying(100),
    usergroupname character varying(500),
    usergroupcode character varying(20),
    active character varying(1),
    effectivefrom timestamp without time zone,
    fromuser character varying(100)
);


ALTER TABLE agilespacefresh.axpdef_peg_usergroups OWNER TO agilespace;

--
-- TOC entry 421 (class 1259 OID 2005775)
-- Name: axpdef_prcards; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_prcards (
    axpdef_prcardsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    cardtype character varying(20),
    charttype character varying(50),
    cardname character varying(100),
    sql_editor_cardsql text,
    chartprops character varying(2000),
    chartjson character varying(4000)
);


ALTER TABLE agilespacefresh.axpdef_prcards OWNER TO agilespace;

--
-- TOC entry 422 (class 1259 OID 2005780)
-- Name: axpdef_publishapi; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_publishapi (
    axpdef_publishapiid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    publickey character varying(30),
    secretkey character varying(20),
    secretkeyflg character varying(10),
    apitype character varying(50),
    structcapui character varying(250),
    structcapuiname character varying(50),
    objdatasrc character varying(4000),
    structcap character varying(4000),
    objname character varying(4000),
    scriptcap character varying(10),
    printform character varying(50),
    unameui character varying(150),
    uname character varying(100),
    apirequeststring text,
    apisuccess text,
    apierror text,
    scriptcapui character varying(100)
);


ALTER TABLE agilespacefresh.axpdef_publishapi OWNER TO agilespace;

--
-- TOC entry 423 (class 1259 OID 2005785)
-- Name: axpdef_ruleeng; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_ruleeng (
    axpdef_ruleengid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    rulename character varying(200),
    formcaption character varying(200),
    stransid character varying(10),
    uroles character varying(4000),
    formula character varying(8000),
    formula_expr character varying(4000),
    active character varying(1),
    isapplicableui character varying(4000),
    readonly character varying(1),
    cachedsave character varying(1),
    exp_editor_scriptload text,
    exp_editor_onsubmit text,
    showfieldsui character varying(4000),
    hidefieldsui character varying(4000),
    enablefieldsui character varying(4000),
    disablefieldsui character varying(4000),
    mandatoryfieldsui character varying(4000),
    nonmandatoryfieldsui character varying(4000),
    fldsmasking character varying(8000)
);


ALTER TABLE agilespacefresh.axpdef_ruleeng OWNER TO agilespace;

--
-- TOC entry 424 (class 1259 OID 2005790)
-- Name: axpdef_ruleeng_expr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_ruleeng_expr (
    axpdef_ruleeng_exprid numeric(16,0) NOT NULL,
    axpdef_ruleengid numeric(16,0),
    axpdef_ruleeng_exprrow integer,
    fldname_expr character varying(50),
    flds_expr character varying(500),
    exp_editor_expr text
);


ALTER TABLE agilespacefresh.axpdef_ruleeng_expr OWNER TO agilespace;

--
-- TOC entry 425 (class 1259 OID 2005795)
-- Name: axpdef_ruleeng_fctl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_ruleeng_fctl (
    axpdef_ruleeng_fctlid numeric(16,0) NOT NULL,
    axpdef_ruleengid numeric(16,0),
    axpdef_ruleeng_fctlrow integer,
    cmd character varying(50),
    fldcomps character varying(4000),
    tbl_comps character varying(4000)
);


ALTER TABLE agilespacefresh.axpdef_ruleeng_fctl OWNER TO agilespace;

--
-- TOC entry 426 (class 1259 OID 2005800)
-- Name: axpdef_ruleeng_masks; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_ruleeng_masks (
    axpdef_ruleeng_masksid numeric(16,0) NOT NULL,
    axpdef_ruleengid numeric(16,0),
    axpdef_ruleeng_masksrow integer,
    mask_fldcap character varying(250),
    mask_fldname character varying(50),
    maskcmd character varying(30),
    mask_pcnd numeric(10,0),
    maskchar character varying(5),
    firstnchar numeric(10,0),
    lastnchar numeric(10,0),
    compval character varying(1000)
);


ALTER TABLE agilespacefresh.axpdef_ruleeng_masks OWNER TO agilespace;

--
-- TOC entry 427 (class 1259 OID 2005805)
-- Name: axpdef_ruleeng_msg; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_ruleeng_msg (
    axpdef_ruleeng_msgid numeric(16,0) NOT NULL,
    axpdef_ruleengid numeric(16,0),
    axpdef_ruleeng_msgrow integer,
    btncaption character varying(100),
    btnname character varying(50),
    btnformula character varying(8000),
    btnapplicable character varying(4000),
    btn_message text
);


ALTER TABLE agilespacefresh.axpdef_ruleeng_msg OWNER TO agilespace;

--
-- TOC entry 428 (class 1259 OID 2005810)
-- Name: axpdef_ruleeng_valexpr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_ruleeng_valexpr (
    axpdef_ruleeng_valexprid numeric(16,0) NOT NULL,
    axpdef_ruleengid numeric(16,0),
    axpdef_ruleeng_valexprrow integer,
    fldname_vexpr character varying(50),
    flds_vexpr character varying(250),
    exp_editor_valexpr text
);


ALTER TABLE agilespacefresh.axpdef_ruleeng_valexpr OWNER TO agilespace;

--
-- TOC entry 429 (class 1259 OID 2005815)
-- Name: axpdef_rulegroup; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_rulegroup (
    axpdef_rulegroupid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    groupname character varying(250)
);


ALTER TABLE agilespacefresh.axpdef_rulegroup OWNER TO agilespace;

--
-- TOC entry 430 (class 1259 OID 2005820)
-- Name: axpdef_rulesdef; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_rulesdef (
    axpdef_rulesdefid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    rulegroup character varying(200),
    rulename character varying(200),
    active character varying(1),
    formcaption character varying(200),
    uroles character varying(4000),
    formula character varying(2000),
    formula_expr character varying(8000),
    isapplicableui character varying(4000),
    stransid character varying(10),
    cdocid character varying(50),
    isruntime character varying(1),
    formctrltmp character varying(4000),
    formcontrl text,
    onchngfldname character varying(4000),
    exp_editor_onsubmit text,
    exp_editor_scriptload text
);


ALTER TABLE agilespacefresh.axpdef_rulesdef OWNER TO agilespace;

--
-- TOC entry 431 (class 1259 OID 2005825)
-- Name: axpdef_rulesdef_basic; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_rulesdef_basic (
    axpdef_rulesdef_basicid numeric(16,0) NOT NULL,
    axpdef_rulesdefid numeric(16,0),
    axpdef_rulesdef_basicrow integer,
    cmd character varying(30),
    pcnd numeric(2,0),
    cndfldcaption character varying(500),
    fctlfldcaption character varying(250),
    maskchar character varying(2),
    tbldtls character varying(8000),
    axpscript character varying(4000),
    setvalueflds character varying(500)
);


ALTER TABLE agilespacefresh.axpdef_rulesdef_basic OWNER TO agilespace;

--
-- TOC entry 432 (class 1259 OID 2005830)
-- Name: axpdef_rulesdef_conmsg; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_rulesdef_conmsg (
    axpdef_rulesdef_conmsgid numeric(16,0) NOT NULL,
    axpdef_rulesdefid numeric(16,0),
    axpdef_rulesdef_conmsgrow integer,
    btncaption character varying(500),
    btnname character varying(20),
    btnformula character varying(8000),
    btn_message character varying(4000),
    btntransid character varying(10)
);


ALTER TABLE agilespacefresh.axpdef_rulesdef_conmsg OWNER TO agilespace;

--
-- TOC entry 433 (class 1259 OID 2005835)
-- Name: axpdef_stdpages; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_stdpages (
    axpdef_stdpagesid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon date,
    createdby character varying(50),
    createdon date,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    pageno character varying(100),
    caption character varying(500),
    addtomenu character varying(10),
    isacoretrans character varying(3),
    menuposition character varying(15),
    menulist character varying(500),
    spsavejson text
);


ALTER TABLE agilespacefresh.axpdef_stdpages OWNER TO agilespace;

--
-- TOC entry 434 (class 1259 OID 2005840)
-- Name: axpdef_tstruct; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_tstruct (
    axpdef_tstructid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    recid numeric(15,0),
    ntransid character varying(5),
    caption character varying(50),
    fieldcount numeric(10,0),
    purpose character varying(1000),
    isacoretrans character varying(10),
    menuposition character varying(50),
    menulist character varying(500),
    pageid character varying(100),
    ttrackchanges character varying(1),
    trackchanges character varying(5),
    trackchangesmadeby character varying(30),
    trackchangesfield character varying(30),
    selectuserlist character varying(100),
    selectfieldlist character varying(100),
    tattachment character varying(10),
    attachment character varying(5),
    tlistview character varying(10),
    listview character varying(5),
    schema character varying(100),
    tworkflow character varying(10),
    workflow character varying(5),
    cupdatedon date,
    savecontrolfield character varying(20),
    deletecontrolfield character varying(20),
    cstring character varying(200),
    allfillgrids character varying(500),
    allgenmaps character varying(500),
    allmdmaps character varying(500),
    layouttype character varying(20),
    structname character varying(10),
    pcaptitle character varying(300),
    axlibrary character varying(1),
    savecontrolfielddl character varying(250),
    deletecontrolfielddl character varying(250),
    includepage character varying(1),
    runtimemod character varying(1),
    runtimetstruct character varying(1),
    cachedsave character varying(1),
    savemode character varying(25),
    apiqueuename character varying(100),
    savequeuename character varying(100),
    notificationsonsave character varying(1),
    notificationtemplates character varying(4000),
    printonsave character varying(1),
    printtemplates character varying(4000),
    printtoqueue character varying(1),
    printqueuename character varying(100),
    printdirect character varying(1),
    printinviewmode character varying(1),
    printviewroles character varying(4000),
    enablelviewdesign character varying(1)
);


ALTER TABLE agilespacefresh.axpdef_tstruct OWNER TO agilespace;

--
-- TOC entry 435 (class 1259 OID 2005845)
-- Name: axpdef_tstructfdtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_tstructfdtl (
    axpdef_tstructfdtlid numeric(16,0) NOT NULL,
    axpdef_tstructid numeric(16,0),
    axpdef_tstructfdtlrow integer,
    fields character varying(50)
);


ALTER TABLE agilespacefresh.axpdef_tstructfdtl OWNER TO agilespace;

--
-- TOC entry 436 (class 1259 OID 2005848)
-- Name: axpdef_tstructudtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_tstructudtl (
    axpdef_tstructudtlid numeric(16,0) NOT NULL,
    axpdef_tstructid numeric(16,0),
    axpdef_tstructudtlrow integer,
    selected_user character varying(100)
);


ALTER TABLE agilespacefresh.axpdef_tstructudtl OWNER TO agilespace;

--
-- TOC entry 437 (class 1259 OID 2005851)
-- Name: axpdef_user_logins; Type: TABLE; Schema: agilespacefresh; Owner: postgres
--

CREATE TABLE agilespacefresh.axpdef_user_logins (
    axpdef_user_loginsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    user_name character varying(50),
    login_name character varying(254),
    email character varying(100),
    mobile numeric(10,0),
    adminaccess character varying(200),
    usergroups character varying(2000),
    userroles character varying(2000),
    access_configstudio character varying(1),
    access_developerstudio character varying(1),
    access_exportdata character varying(1),
    access_importdata character varying(1),
    actors character varying(2000),
    active character varying(1),
    primary_reporting_manager character varying(100),
    sec_reporting_manager character varying(100),
    skip_level_manager character varying(100),
    company numeric(16,0),
    branch numeric(16,0),
    access_alldata character varying(50),
    access_alldatacnd numeric(1,0),
    access_subdata character varying(50),
    access_viewusergrp character varying(50),
    access_editusergrp character varying(4000),
    access_teamdata character varying(30),
    access_viewbranch character varying(4000),
    access_editbranch character varying(4000),
    branchname character varying(200)
);


ALTER TABLE agilespacefresh.axpdef_user_logins OWNER TO postgres;

--
-- TOC entry 438 (class 1259 OID 2005856)
-- Name: axpdef_usergroups; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_usergroups (
    axpdef_usergroupsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    usernames character varying(4000),
    users_group_name character varying(254),
    users_group_description character varying(254),
    isactive character varying(1)
);


ALTER TABLE agilespacefresh.axpdef_usergroups OWNER TO agilespace;

--
-- TOC entry 439 (class 1259 OID 2005861)
-- Name: axpdef_userroles; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_userroles (
    axpdef_userrolesid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    axusergroup character varying(100),
    dhomepage character varying(200),
    homepage character varying(100),
    useprodform character varying(1),
    active character varying(1),
    rolev2 character varying(1)
);


ALTER TABLE agilespacefresh.axpdef_userroles OWNER TO agilespace;

--
-- TOC entry 440 (class 1259 OID 2005866)
-- Name: axpdef_workflowdtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_workflowdtl (
    axpdef_workflowdtlid numeric(16,0) NOT NULL,
    axpdef_workflowhdrid numeric(16,0),
    axpdef_workflowdtlrow numeric(32,0),
    wrole character varying(1000),
    isapproval character varying(10),
    wfrights character varying(50),
    wfidentification character varying(300),
    mtresponsedays numeric(3,0),
    mtresponsehrs numeric(3,0),
    wfaction character varying(10)
);


ALTER TABLE agilespacefresh.axpdef_workflowdtl OWNER TO agilespace;

--
-- TOC entry 441 (class 1259 OID 2005871)
-- Name: axpdef_workflowhdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdef_workflowhdr (
    axpdef_workflowhdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon date,
    createdby character varying(50),
    createdon date,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    wfname character varying(50),
    wcaption character varying(100),
    tsname character varying(100),
    stransid character varying(5),
    appemail character varying(1),
    flddetails character varying(200),
    condetails character varying(50),
    wfandor character varying(10),
    wfconditions character varying(1000),
    calcondition text,
    wf_condition text,
    editapproval character varying(1),
    cancelapproval character varying(1),
    allreapproval character varying(1),
    m_workflow text,
    chkms character varying(1),
    url character varying(500),
    cc character varying(1000),
    bcc character varying(1000),
    subject character varying(200),
    rtf_mailbody text,
    attach character varying(200),
    auth character varying(1)
);


ALTER TABLE agilespacefresh.axpdef_workflowhdr OWNER TO agilespace;

--
-- TOC entry 442 (class 1259 OID 2005876)
-- Name: axpdflanguage; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdflanguage (
    lngname character varying(25) NOT NULL,
    sname character varying(16) NOT NULL,
    fontname character varying(30),
    fontsize numeric(3,0),
    compname character varying(25) NOT NULL,
    compcaption character varying(100),
    comphint character varying(1)
);


ALTER TABLE agilespacefresh.axpdflanguage OWNER TO agilespace;

--
-- TOC entry 443 (class 1259 OID 2005879)
-- Name: axpdraft; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpdraft (
    transid character varying(5),
    username character varying(50),
    usersession character varying(50),
    ip character varying(20),
    holdid character varying(250),
    createdon character varying(20),
    modifiedon character varying(20),
    fieldlist bytea,
    parselist bytea,
    assignedlist bytea,
    rec_varlist bytea,
    blobno numeric(3,0)
);


ALTER TABLE agilespacefresh.axpdraft OWNER TO agilespace;

--
-- TOC entry 444 (class 1259 OID 2005884)
-- Name: axpeg00001; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg00001 (
    eventdatetime character varying(30),
    taskid character varying(15),
    transid character varying(8),
    processname character varying(500),
    taskname character varying(500),
    keyvalue character varying(500),
    taskstatus character varying(15),
    tasktype character varying(15),
    username character varying(50),
    nexttask character varying(1000),
    displayicon character varying(500),
    displaytitle text,
    indexno numeric,
    keyfield character varying(200),
    recordid numeric,
    timelinetitle character varying(4000)
);


ALTER TABLE agilespacefresh.axpeg00001 OWNER TO agilespace;

--
-- TOC entry 445 (class 1259 OID 2005889)
-- Name: axpeg00002; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg00002 (
    eventdatetime character varying(30),
    taskid character varying(15),
    transid character varying(8),
    processname character varying(500),
    taskname character varying(500),
    keyvalue character varying(500),
    taskstatus character varying(15),
    tasktype character varying(15),
    username character varying(50),
    nexttask character varying(1000),
    displayicon character varying(500),
    displaytitle text,
    indexno numeric,
    keyfield character varying(200),
    recordid numeric,
    timelinetitle character varying(4000)
);


ALTER TABLE agilespacefresh.axpeg00002 OWNER TO agilespace;

--
-- TOC entry 446 (class 1259 OID 2005894)
-- Name: axpeg00003; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg00003 (
    eventdatetime character varying(30),
    taskid character varying(15),
    transid character varying(8),
    processname character varying(500),
    taskname character varying(500),
    keyvalue character varying(500),
    taskstatus character varying(15),
    tasktype character varying(15),
    username character varying(50),
    nexttask character varying(1000),
    displayicon character varying(500),
    displaytitle text,
    indexno numeric,
    keyfield character varying(200),
    recordid numeric,
    timelinetitle character varying(4000)
);


ALTER TABLE agilespacefresh.axpeg00003 OWNER TO agilespace;

--
-- TOC entry 447 (class 1259 OID 2005899)
-- Name: axpeg00004; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg00004 (
    eventdatetime character varying(30),
    taskid character varying(15),
    transid character varying(8),
    processname character varying(500),
    taskname character varying(500),
    keyvalue character varying(500),
    taskstatus character varying(15),
    tasktype character varying(15),
    username character varying(50),
    nexttask character varying(1000),
    displayicon character varying(500),
    displaytitle text,
    indexno numeric,
    keyfield character varying(200),
    recordid numeric,
    timelinetitle character varying(4000)
);


ALTER TABLE agilespacefresh.axpeg00004 OWNER TO agilespace;

--
-- TOC entry 448 (class 1259 OID 2005904)
-- Name: axpeg00005; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg00005 (
    eventdatetime character varying(30),
    taskid character varying(15),
    transid character varying(8),
    processname character varying(500),
    taskname character varying(500),
    keyvalue character varying(500),
    taskstatus character varying(15),
    tasktype character varying(15),
    username character varying(50),
    nexttask character varying(1000),
    displayicon character varying(500),
    displaytitle text,
    indexno numeric,
    keyfield character varying(200),
    recordid numeric,
    timelinetitle character varying(4000)
);


ALTER TABLE agilespacefresh.axpeg00005 OWNER TO agilespace;

--
-- TOC entry 449 (class 1259 OID 2005909)
-- Name: axpeg00006; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg00006 (
    eventdatetime character varying(30),
    taskid character varying(15),
    transid character varying(8),
    processname character varying(500),
    taskname character varying(500),
    keyvalue character varying(500),
    taskstatus character varying(15),
    tasktype character varying(15),
    username character varying(50),
    nexttask character varying(1000),
    displayicon character varying(500),
    displaytitle text,
    indexno numeric,
    keyfield character varying(200),
    recordid numeric,
    timelinetitle character varying(4000)
);


ALTER TABLE agilespacefresh.axpeg00006 OWNER TO agilespace;

--
-- TOC entry 450 (class 1259 OID 2005914)
-- Name: axpeg00007; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg00007 (
    eventdatetime character varying(30),
    taskid character varying(15),
    transid character varying(8),
    processname character varying(500),
    taskname character varying(500),
    keyvalue character varying(500),
    taskstatus character varying(15),
    tasktype character varying(15),
    username character varying(50),
    nexttask character varying(1000),
    displayicon character varying(500),
    displaytitle text,
    indexno numeric,
    keyfield character varying(200),
    recordid numeric,
    timelinetitle character varying(4000)
);


ALTER TABLE agilespacefresh.axpeg00007 OWNER TO agilespace;

--
-- TOC entry 451 (class 1259 OID 2005919)
-- Name: axpeg_assig; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg_assig (
    eventdatetime character varying(30),
    transid character varying(5),
    processname character varying(200),
    keyvalue character varying(500),
    recordid numeric(16,0),
    status numeric(1,0),
    statustext character varying(4000),
    withdrawn character varying(2)
);


ALTER TABLE agilespacefresh.axpeg_assig OWNER TO agilespace;

--
-- TOC entry 452 (class 1259 OID 2005924)
-- Name: axpeg_bugtr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg_bugtr (
    eventdatetime character varying(30),
    transid character varying(5),
    processname character varying(200),
    keyvalue character varying(500),
    recordid numeric(16,0),
    status numeric(1,0),
    statustext character varying(4000),
    withdrawn character varying(2)
);


ALTER TABLE agilespacefresh.axpeg_bugtr OWNER TO agilespace;

--
-- TOC entry 453 (class 1259 OID 2005929)
-- Name: axpeg_dipur; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg_dipur (
    eventdatetime character varying(30),
    transid character varying(5),
    processname character varying(200),
    keyvalue character varying(500),
    recordid numeric(16,0),
    status numeric(1,0),
    statustext character varying(4000),
    withdrawn character varying(1)
);


ALTER TABLE agilespacefresh.axpeg_dipur OWNER TO agilespace;

--
-- TOC entry 454 (class 1259 OID 2005934)
-- Name: axpeg_leave; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg_leave (
    eventdatetime character varying(30),
    transid character varying(5),
    processname character varying(200),
    keyvalue character varying(500),
    recordid numeric(16,0),
    status numeric(1,0),
    statustext character varying(4000),
    withdrawn character varying(2)
);


ALTER TABLE agilespacefresh.axpeg_leave OWNER TO agilespace;

--
-- TOC entry 455 (class 1259 OID 2005939)
-- Name: axpeg_levrq; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg_levrq (
    eventdatetime character varying(30),
    transid character varying(5),
    processname character varying(200),
    keyvalue character varying(500),
    recordid numeric(16,0),
    status numeric(1,0),
    statustext character varying(4000),
    withdrawn character varying(1)
);


ALTER TABLE agilespacefresh.axpeg_levrq OWNER TO agilespace;

--
-- TOC entry 456 (class 1259 OID 2005944)
-- Name: axpeg_sendmsg; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg_sendmsg (
    axpeg_sendmsgid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    touser_ui character varying(200),
    touser character varying(100),
    msgtitle character varying(100),
    message text,
    pagetype character varying(50),
    formmode character varying(50),
    formcaption character varying(250),
    stransid character varying(50),
    msgtype character varying(10),
    loadparams character varying(1000),
    effectiveto date,
    fromuser character varying(100),
    hlink_transid character varying(100),
    hlink_params character varying(4000)
);


ALTER TABLE agilespacefresh.axpeg_sendmsg OWNER TO agilespace;

--
-- TOC entry 457 (class 1259 OID 2005949)
-- Name: axpeg_test; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg_test (
    eventdatetime character varying(30),
    transid character varying(5),
    processname character varying(200),
    keyvalue character varying(500),
    recordid numeric(16,0),
    status numeric(1,0),
    statustext character varying(4000),
    withdrawn character varying(1)
);


ALTER TABLE agilespacefresh.axpeg_test OWNER TO agilespace;

--
-- TOC entry 458 (class 1259 OID 2005954)
-- Name: axpeg_trare; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg_trare (
    eventdatetime character varying(30),
    transid character varying(5),
    processname character varying(200),
    keyvalue character varying(500),
    recordid numeric(16,0),
    status numeric(1,0),
    statustext character varying(4000),
    withdrawn character varying(2)
);


ALTER TABLE agilespacefresh.axpeg_trare OWNER TO agilespace;

--
-- TOC entry 459 (class 1259 OID 2005959)
-- Name: axpeg_workr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpeg_workr (
    eventdatetime character varying(30),
    transid character varying(5),
    processname character varying(200),
    keyvalue character varying(500),
    recordid numeric(16,0),
    status numeric(1,0),
    statustext character varying(4000),
    withdrawn character varying(2)
);


ALTER TABLE agilespacefresh.axpeg_workr OWNER TO agilespace;

--
-- TOC entry 460 (class 1259 OID 2005964)
-- Name: axperiodnotify; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axperiodnotify (
    axperiodnotifyid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    name character varying(200),
    startdate date,
    starttime character varying(10),
    frequency character varying(20),
    sendday character varying(20),
    sendon character varying(30),
    sendtime character varying(10),
    active character varying(1),
    datasource character varying(200),
    messagetitle character varying(500),
    messagetext text,
    messageattsingle character varying(100),
    messageattsinglename character varying(50),
    messageattachmentsui character varying(4000),
    messageattachments character varying(4000),
    notifyto character varying(1000),
    usergroups character varying(4000),
    usernames character varying(4000),
    externalemails character varying(4000),
    fromuserui character varying(100),
    fromuser character varying(50),
    mobilenotify character varying(1),
    queuestat character varying(25),
    exp_editor_condition text,
    pagetype character varying(10),
    navigateto character varying(500),
    loadopen character varying(5),
    tbl_navigationparam character varying(8000),
    formula character varying(8000),
    formula_expr character varying(4000),
    projname character varying(100)
);


ALTER TABLE agilespacefresh.axperiodnotify OWNER TO agilespace;

--
-- TOC entry 461 (class 1259 OID 2005969)
-- Name: axpermissions; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpermissions (
    axpermissionsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    axuserrole character varying(100),
    comptype character varying(20),
    formcap character varying(250),
    formtransid character varying(50),
    allowcreate character varying(3),
    viewcnd character varying(50),
    viewctrl character varying(1),
    view_flds character varying(4000),
    viewlist character varying(4000),
    editcnd character varying(50),
    editctrl character varying(1),
    edit_flds character varying(4000),
    editlist character varying(4000),
    fieldmasks character varying(4000),
    fieldmaskstr character varying(4000),
    dupchk character varying(500)
);


ALTER TABLE agilespacefresh.axpermissions OWNER TO agilespace;

--
-- TOC entry 462 (class 1259 OID 2005974)
-- Name: axpertlog; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpertlog (
    sessionid character varying(30),
    username character varying(50),
    calledon timestamp without time zone,
    structname character varying(16),
    recordid numeric(15,0),
    timetaken numeric(10,0),
    db_conntime numeric(10,0),
    dbtimetaken numeric(10,0),
    servicename character varying(50),
    serviceresult character varying(200),
    callfinished timestamp without time zone
);


ALTER TABLE agilespacefresh.axpertlog OWNER TO agilespace;

--
-- TOC entry 463 (class 1259 OID 2005977)
-- Name: axpertreports; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpertreports (
    caption character varying(50),
    design bytea,
    blobno numeric(3,0)
);


ALTER TABLE agilespacefresh.axpertreports OWNER TO agilespace;

--
-- TOC entry 464 (class 1259 OID 2005982)
-- Name: axpexception; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpexception (
    exp_date date,
    structname character varying(16),
    servicename character varying(50),
    serviceresult character varying(500),
    count numeric
);


ALTER TABLE agilespacefresh.axpexception OWNER TO agilespace;

--
-- TOC entry 465 (class 1259 OID 2005987)
-- Name: axpexchange; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpexchange (
    axpexchangeid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    transid character varying(5),
    idfield character varying(30),
    adxinout character varying(1),
    ftphost character varying(180),
    ftpname character varying(10),
    ftppwd character varying(10),
    ftp character varying(200),
    formatfile text,
    extension character varying(5),
    ordno numeric(3,0),
    cond character varying(200),
    outfolder character varying(200),
    infolder character varying(200),
    succfolder character varying(200),
    failfolder character varying(200),
    archsuccfolder character varying(200),
    archfailfolder character varying(200)
);


ALTER TABLE agilespacefresh.axpexchange OWNER TO agilespace;

--
-- TOC entry 466 (class 1259 OID 2005992)
-- Name: axpfgdtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpfgdtl (
    tstruct character varying(5),
    fgname character varying(50),
    srcfld character varying(50),
    tarfld character varying(50),
    caption character varying(500)
);


ALTER TABLE agilespacefresh.axpfgdtl OWNER TO agilespace;

--
-- TOC entry 467 (class 1259 OID 2005997)
-- Name: axpfillgrid; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpfillgrid (
    tstruct character varying(5),
    fgname character varying(50),
    caption character varying(2000),
    fgsql text,
    fromiview character varying(1),
    tardc character varying(5),
    multiselect character varying(1),
    autoshow character varying(1),
    srcdc character varying(5),
    validat character varying(1),
    exeonsave character varying(1),
    firmbind character varying(1),
    selecton character varying(15),
    footer character varying(200),
    valexpr character varying(200),
    addrows character varying(30),
    purpose text,
    gfld character varying(50),
    plist character varying(200),
    createdby character varying(100),
    createdon timestamp without time zone,
    modifiedby character varying(100),
    modifiedon timestamp without time zone
);


ALTER TABLE agilespacefresh.axpfillgrid OWNER TO agilespace;

--
-- TOC entry 468 (class 1259 OID 2006002)
-- Name: axpflds; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpflds (
    tstruct character varying(5),
    itype character varying(50),
    fname character varying(50),
    caption character varying(2000),
    datatype character varying(50),
    datawidth numeric(5,0),
    flddecimal numeric(2,0),
    modeofentry character varying(50),
    expression character varying(4000),
    valexpr character varying(4000),
    srctf character varying(100),
    purpose text,
    fldsql text,
    srcfld character varying(50),
    hidden character varying(1),
    readonly character varying(1),
    savevalue character varying(1),
    dcname character varying(5),
    ordno numeric(4,0),
    customdatatype character varying(15),
    stype character varying(1),
    allowempty character varying(1),
    allowduplicate character varying(1),
    tabstop character varying(1),
    setcarry character varying(1),
    applycomma character varying(1),
    onlypositive character varying(1),
    clientvalidate character varying(1),
    mask character varying(25),
    pattern character varying(25),
    hint character varying(50),
    pwordchar character varying(1),
    srckey character varying(1),
    sgwidth character varying(50),
    sgheight numeric(5,0),
    cfield character varying(50),
    srctrans character varying(5),
    scol numeric(2,0),
    autoselect character varying(1),
    linkfield character varying(50),
    suggestive character varying(1),
    ctype character varying(2),
    disptype character varying(1),
    sep character varying(1),
    font character varying(35),
    color character varying(20),
    refreshonsave character varying(1),
    searchsql character varying(4000),
    dispdet character varying(500),
    depflds character varying(3000),
    parentflds character varying(3000),
    listvalues character varying(300),
    autogendet character varying(250),
    tablename character varying(50),
    asgrid character varying(1),
    frmno numeric(2,0),
    tlhw character varying(20),
    lbltlhw character varying(20),
    runtimefld character varying(1),
    applyrule character varying(1),
    displaytotal character varying(1),
    createdby character varying(100),
    createdon timestamp without time zone,
    modifiedby character varying(100),
    modifiedon timestamp without time zone,
    encrypted character varying(1),
    masking character varying(100),
    lastcharmask character varying(100),
    firstcharmask character varying(100),
    maskchar character varying(1),
    maskroles character varying(1000),
    customdecimal character varying(1)
);


ALTER TABLE agilespacefresh.axpflds OWNER TO agilespace;

--
-- TOC entry 469 (class 1259 OID 2006007)
-- Name: axpformlbls; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpformlbls (
    transid character varying(5),
    lblname character varying(50),
    lblcaption character varying(4000)
);


ALTER TABLE agilespacefresh.axpformlbls OWNER TO agilespace;

--
-- TOC entry 470 (class 1259 OID 2006012)
-- Name: axpgenmapdtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpgenmapdtl (
    tstruct character varying(20),
    gname character varying(20),
    tarfld character varying(50),
    srcfld character varying(50),
    trow numeric(2,0),
    srow numeric(2,0),
    control character varying(50),
    dgroup character varying(50),
    dtype character varying(6),
    ord numeric(2,0),
    id character varying(1)
);


ALTER TABLE agilespacefresh.axpgenmapdtl OWNER TO agilespace;

--
-- TOC entry 471 (class 1259 OID 2006015)
-- Name: axpgenmaps; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpgenmaps (
    tstruct character varying(5),
    gname character varying(20),
    caption character varying(2000),
    targettstr character varying(30),
    basedondc character varying(5),
    ctrlfldname character varying(50),
    active character varying(1),
    axpschema character varying(50),
    onpost text,
    purpose text,
    onapprove character varying(1),
    onreject character varying(1),
    createdby character varying(100),
    createdon timestamp without time zone,
    modifiedby character varying(100),
    modifiedon timestamp without time zone
);


ALTER TABLE agilespacefresh.axpgenmaps OWNER TO agilespace;

--
-- TOC entry 472 (class 1259 OID 2006020)
-- Name: axphelpdocs; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axphelpdocs (
    axphelpdocsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    topicid character varying(30),
    module character varying(50),
    topic character varying(100),
    rtf_description text,
    duplicatechk character varying(200)
);


ALTER TABLE agilespacefresh.axphelpdocs OWNER TO agilespace;

--
-- TOC entry 473 (class 1259 OID 2006025)
-- Name: axpinstance; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpinstance (
    axpid character varying(250)
);


ALTER TABLE agilespacefresh.axpinstance OWNER TO agilespace;

--
-- TOC entry 474 (class 1259 OID 2006028)
-- Name: axpkeywords; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpkeywords (
    keyword character varying(100),
    f2 numeric
);


ALTER TABLE agilespacefresh.axpkeywords OWNER TO agilespace;

--
-- TOC entry 475 (class 1259 OID 2006033)
-- Name: axpkt; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpkt (
    siteno numeric(10,0),
    name character varying(30),
    pkt bytea,
    pktdate character varying(30),
    blobno numeric(3,0),
    pktname character varying(50)
);


ALTER TABLE agilespacefresh.axpkt OWNER TO agilespace;

--
-- TOC entry 476 (class 1259 OID 2006038)
-- Name: axpmdmaps; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpmdmaps (
    tstruct character varying(5),
    mname character varying(10),
    caption character varying(2000),
    extended character varying(1),
    mastrans character varying(50),
    masfld character varying(50),
    detfld character varying(50),
    msrcfld character varying(50),
    dtlsrcfld character varying(50),
    mastable character varying(50),
    updatetype character varying(10),
    ctrlfield character varying(50),
    mdappend character varying(1),
    initondel character varying(1),
    maptext text,
    purpose text,
    onapprove character varying(1),
    reject character varying(1),
    masdec numeric(2,0),
    onreject character varying(1),
    createdby character varying(100),
    createdon timestamp without time zone,
    modifiedby character varying(100),
    modifiedon timestamp without time zone
);


ALTER TABLE agilespacefresh.axpmdmaps OWNER TO agilespace;

--
-- TOC entry 477 (class 1259 OID 2006043)
-- Name: axpmsgkeywords; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpmsgkeywords (
    axpmsgkeywordsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    templatename character varying(50)
);


ALTER TABLE agilespacefresh.axpmsgkeywords OWNER TO agilespace;

--
-- TOC entry 478 (class 1259 OID 2006048)
-- Name: axpmsgkeywordsdtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpmsgkeywordsdtl (
    axpmsgkeywordsdtlid numeric(16,0) NOT NULL,
    axpmsgkeywordsid numeric(16,0),
    axpmsgkeywordsdtlrow integer,
    keywords character varying(100)
);


ALTER TABLE agilespacefresh.axpmsgkeywordsdtl OWNER TO agilespace;

--
-- TOC entry 479 (class 1259 OID 2006051)
-- Name: axppopdc; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axppopdc (
    tstruct character varying(5),
    dcname character varying(10),
    frameno numeric(2,0),
    parent character varying(5),
    parentfield character varying(50),
    heading character varying(50),
    popcond character varying(75),
    autoshow character varying(1),
    autofill text,
    firmbind character varying(1),
    keycols character varying(50),
    dispfield character varying(25),
    sumformat character varying(75),
    delimiter character varying(1),
    addrow character varying(1),
    showbuttons character varying(30)
);


ALTER TABLE agilespacefresh.axppopdc OWNER TO agilespace;

--
-- TOC entry 480 (class 1259 OID 2006056)
-- Name: axprintdef; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axprintdef (
    axprintdefid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon date,
    createdby character varying(50),
    createdon date,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    axprintdefname character varying(100),
    axprintwhat character varying(30),
    stype character varying(1),
    axprintform character varying(100),
    axprinttransid character varying(10),
    axprintfilterstring character varying(200),
    axprintformnames character varying(1000),
    axprintiview character varying(100),
    axprintiviewname character varying(10),
    axprintparams character varying(1000),
    sql_editor_axprintsqltext text,
    axprintsaveto character varying(1000)
);


ALTER TABLE agilespacefresh.axprintdef OWNER TO agilespace;

--
-- TOC entry 481 (class 1259 OID 2006061)
-- Name: axprintdetails; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axprintdetails (
    id character varying(100),
    sessionid character varying(30),
    username character varying(50),
    calledon timestamp without time zone,
    context character varying(50),
    act_script_name character varying(100),
    source character varying(20),
    structname character varying(20),
    paramstring character varying(2000),
    fileservername character varying(100),
    uploadtype character varying(10),
    url character varying(1000),
    fileserverauth character varying(200),
    urldir character varying(500),
    printforms character varying(500),
    outputfilepathandname character varying(1000),
    printfiletype character varying(20),
    directprint character varying(1),
    totallines numeric(5,0),
    succlines numeric(5,0),
    status character varying(500)
);


ALTER TABLE agilespacefresh.axprintdetails OWNER TO agilespace;

--
-- TOC entry 482 (class 1259 OID 2006066)
-- Name: axprintexceptiondetails; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axprintexceptiondetails (
    id character varying(100),
    transid character varying(5),
    recordid numeric(15,0),
    iviewname character varying(10),
    formnames character varying(200),
    filename character varying(500),
    lineno numeric(5,0),
    errormsg character varying(1000)
);


ALTER TABLE agilespacefresh.axprintexceptiondetails OWNER TO agilespace;

--
-- TOC entry 483 (class 1259 OID 2006071)
-- Name: axprinting; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axprinting (
    jobid character varying(10),
    jobname character varying(30),
    paramsnamevalue character varying(500),
    transid character varying(10),
    recordid numeric(15,0),
    printfilename character varying(250),
    filepath character varying(100),
    filename character varying(100),
    status character varying(100),
    source character varying(1),
    enddatetime timestamp(0) without time zone,
    jobdate timestamp(0) without time zone
);


ALTER TABLE agilespacefresh.axprinting OWNER TO agilespace;

--
-- TOC entry 484 (class 1259 OID 2006076)
-- Name: axprintjobs; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axprintjobs (
    jobname character varying(30),
    iviewname character varying(50),
    printfilename character varying(50)
);


ALTER TABLE agilespacefresh.axprintjobs OWNER TO agilespace;

--
-- TOC entry 485 (class 1259 OID 2006079)
-- Name: axprocess; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axprocess (
    eventdatetime character varying(30),
    taskid character varying(15),
    transid character varying(8),
    processname character varying(500),
    taskname character varying(500),
    keyvalue character varying(500),
    taskstatus character varying(15)
);


ALTER TABLE agilespacefresh.axprocess OWNER TO agilespace;

--
-- TOC entry 486 (class 1259 OID 2006084)
-- Name: axprocessdef; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axprocessdef (
    axprocessdefid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    processname character varying(500),
    indexno numeric(10,0),
    subindexno numeric(2,0),
    tasktype character varying(10),
    active character varying(1),
    taskgroupname character varying(250),
    taskname character varying(500),
    taskdescription text,
    formcaption character varying(500),
    keyfieldcaption character varying(500),
    transid character varying(10),
    keyfield character varying(250),
    axpdef_peg_processmasterid numeric(15,0),
    prenotify character varying(250),
    postnotify character varying(250),
    assignto character varying(50),
    assigntoflg character varying(10),
    formfieldscaption character varying(250),
    formfieldname character varying(100),
    assigntoactor character varying(100),
    assigntorole character varying(4000),
    useridentificationfilter character varying(4000),
    useridentificationfilter_of character varying(20),
    assigntouserflag character varying(5),
    assigntouser character varying(100),
    mapfield character varying(100),
    mapfieldcaption character varying(250),
    mapfield_group character varying(250),
    formula_opr character varying(50),
    formula_andor character varying(20),
    applicability_tbl character varying(4000),
    applicability character varying(4000),
    exp_editor_applicability text,
    nexttask_tbl character varying(4000),
    nexttask_truecnd character varying(250),
    nexttask_falsecnd character varying(250),
    nexttask character varying(4000),
    exp_editor_nexttask text,
    displaybuttons character varying(250),
    displayicon character varying(200),
    displaytitle character varying(500),
    displaysubtitle character varying(250),
    displaycontent text,
    displaytemplate text,
    processownerui character varying(300),
    processowner character varying(300),
    processownerflg numeric(1,0),
    approvereasons character varying(4000),
    defapptext character varying(4000),
    returnreasons character varying(4000),
    defrettext character varying(4000),
    rejectreasons character varying(4000),
    defregtext character varying(4000),
    execmaps character varying(2000),
    editablefieldscaption character varying(4000),
    execonapprove character varying(250),
    approvecmt character varying(1),
    rejectcmt character varying(1),
    returncmt character varying(1),
    reminder numeric(2,0),
    escalation numeric(2,0),
    indexdupchk character varying(1000),
    mobilenotify character varying(1)
);


ALTER TABLE agilespacefresh.axprocessdef OWNER TO agilespace;

--
-- TOC entry 487 (class 1259 OID 2006089)
-- Name: axprocessdef_delegation; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axprocessdef_delegation (
    axprocessdef_delegationid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    fromuser character varying(250),
    fromusername character varying(100),
    touser character varying(250),
    tousername character varying(100),
    fromdate date,
    todate date
);


ALTER TABLE agilespacefresh.axprocessdef_delegation OWNER TO agilespace;

--
-- TOC entry 488 (class 1259 OID 2006094)
-- Name: axprocessdefv2; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axprocessdefv2 (
    axprocessdefv2id numeric(16,0),
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    processname character varying(500),
    indexno numeric(10,0),
    subindexno numeric(2,0),
    tasktype character varying(10),
    active character varying(1),
    taskgroupname character varying(250),
    taskname character varying(500),
    taskdescription text,
    formcaption character varying(500),
    keyfieldcaption character varying(500),
    transid character varying(10),
    keyfield character varying(250),
    axpdef_peg_processmasterid numeric(15,0),
    postnotify character varying(4000),
    assignto character varying(50),
    assigntoflg character varying(10),
    formfieldscaption character varying(250),
    formfieldname character varying(100),
    assigntoactor character varying(100),
    assigntorole character varying(4000),
    useridentificationfilter character varying(4000),
    useridentificationfilter_of character varying(20),
    assigntouserflag character varying(5),
    assigntouser character varying(100),
    mapfield character varying(100),
    mapfieldcaption character varying(250),
    mapfield_group character varying(250),
    formula_opr character varying(30),
    formula_andor character varying(20),
    applicability_tbl character varying(8000),
    applicability character varying(8000),
    nexttask_tbl character varying(4000),
    nexttask_truecnd character varying(250),
    nexttask_falsecnd character varying(250),
    nexttask character varying(4000),
    exp_editor_nexttask text,
    displayicon character varying(200),
    displaytitle character varying(500),
    displaycontent text,
    displaytemplate text,
    processownerui character varying(300),
    processowner character varying(300),
    processownerflg numeric(1,0),
    approvereasons character varying(4000),
    defapptext character varying(4000),
    returnreasons character varying(4000),
    defrettext character varying(4000),
    rejectreasons character varying(4000),
    defregtext character varying(4000),
    execmaps character varying(2000),
    approvecmt character varying(1),
    rejectcmt character varying(1),
    returncmt character varying(1),
    reminder numeric(2,0),
    escalation numeric(2,0),
    groupwithprior character varying(1),
    displaymcontent text,
    taskparams character varying(4000),
    execonapprove character varying(250),
    taskparamsui character varying(4000),
    displaysubtitle character varying(100),
    displaybuttons character varying(100),
    timelinetitle text,
    hidecards character varying(4000),
    parenttaskname character varying(500),
    stransid character varying(10),
    isoptional character varying(1),
    formcontrl text,
    postnotify_return character varying(4000),
    postnotify_reject character varying(4000),
    orphan_autoapproval character varying(1),
    returnable character varying(1),
    usebusinessdatelogic character varying(1),
    allowsend character varying(50),
    allowsendflg character varying(1),
    sendtoactor character varying(4000),
    indexdupchk character varying(200),
    initiator_approval character varying(1),
    postactorname character varying(1000),
    posttoprocessuser character varying(1),
    postruledef character varying(1),
    senduser_in character varying(4000),
    senduser_notin character varying(4000),
    skipleveluser character varying(40),
    skiplevelcnd numeric(2,0),
    formula_flds character varying(250),
    action_buttons character varying(50),
    editablefieldscaption character varying(4000),
    exp_editor_applicability text,
    mobilenotify character varying(1),
    parenttask character varying(200),
    prenotify character varying(250),
    allowedit character varying(1),
    allowedittasks character varying(4000),
    allowedittasksid character varying(4000),
    autoapprove character varying(1),
    reminderstartfrom character varying(250),
    reminderstartwhen character varying(10),
    escalationstartfrom character varying(250),
    escalationstartwhen character varying(10),
    reminderstartcnd character varying(10),
    reminderstartfname character varying(100),
    escalationstartcnd character varying(10),
    escalationstartfname character varying(100),
    cmsg_appcheckflg character varying(1),
    cmsg_appcheck text,
    cmsg_returnflg character varying(1),
    cmsg_return text,
    cmsg_rejectflg character varying(1),
    cmsg_reject text,
    taskbuttons character varying(100),
    showbuttons character varying(1),
    rem_esc_startfrom character varying(4000),
    tasknotification character varying(4000),
    approve_forwardto character varying(1),
    return_to_priorindex character varying(1)
);


ALTER TABLE agilespacefresh.axprocessdefv2 OWNER TO agilespace;

--
-- TOC entry 489 (class 1259 OID 2006099)
-- Name: axprocessdefv2_escalation; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axprocessdefv2_escalation (
    axprocessdefv2_escalationid numeric(16,0) NOT NULL,
    axprocessdefv2id numeric(16,0),
    axprocessdefv2_escalationrow integer,
    escalateafter character varying(20),
    escalateday numeric(2,0),
    escalatehr numeric(2,0),
    escalatemin numeric(2,0),
    esc_startfrom character varying(250),
    esc_when character varying(20),
    esc_maildays numeric(10,0),
    esc_mailndays numeric(10,0),
    esc_daytypeui character varying(50),
    esc_daytype character varying(20),
    esc_startfromcnd character varying(10),
    esc_startfromfname character varying(100),
    esc_frequency character varying(30),
    esc_frq_daytype character varying(20),
    escalate character varying(50),
    escalatetoactor character varying(100),
    escalatetemplate character varying(4000),
    escalateflg numeric(1,0),
    escalate_notifyto character varying(50),
    notifytoactor character varying(250)
);


ALTER TABLE agilespacefresh.axprocessdefv2_escalation OWNER TO agilespace;

--
-- TOC entry 490 (class 1259 OID 2006104)
-- Name: axprocessdefv2_formctls; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axprocessdefv2_formctls (
    axprocessdefv2_formctlsid numeric(16,0) NOT NULL,
    axprocessdefv2id numeric(16,0),
    axprocessdefv2_formctlsrow integer,
    cmd character varying(50),
    tbldtls character varying(4000),
    axpscript character varying(4000),
    pcnd numeric(10,0)
);


ALTER TABLE agilespacefresh.axprocessdefv2_formctls OWNER TO agilespace;

--
-- TOC entry 491 (class 1259 OID 2006109)
-- Name: axprocessdefv2_reminder; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axprocessdefv2_reminder (
    axprocessdefv2_reminderid numeric(16,0) NOT NULL,
    axprocessdefv2id numeric(16,0),
    axprocessdefv2_reminderrow integer,
    remindafter character varying(2000),
    remindday numeric(10,0),
    reminderhr numeric(2,0),
    remindmin numeric(2,0),
    rem_startfrom character varying(250),
    rem_startafter character varying(20),
    rem_when character varying(20),
    rem_maildays numeric(10,0),
    rem_mailndays numeric(10,0),
    rem_daytypeui character varying(50),
    rem_daytype character varying(20),
    rem_startfromcnd character varying(10),
    rem_startfromfname character varying(100),
    rem_frequency character varying(50),
    rem_frq_daytype character varying(20),
    remindnotify character varying(4000),
    rem_stopafter character varying(30)
);


ALTER TABLE agilespacefresh.axprocessdefv2_reminder OWNER TO agilespace;

--
-- TOC entry 492 (class 1259 OID 2006114)
-- Name: axprocessdefv2_setval; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axprocessdefv2_setval (
    axprocessdefv2_setvalid numeric(16,0) NOT NULL,
    axprocessdefv2id numeric(16,0),
    axprocessdefv2_setvalrow integer,
    setval_formcaption character varying(500),
    setval_formname character varying(10),
    tblsetval character varying(4000)
);


ALTER TABLE agilespacefresh.axprocessdefv2_setval OWNER TO agilespace;

--
-- TOC entry 493 (class 1259 OID 2006119)
-- Name: axprops; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axprops (
    name character varying(15) NOT NULL,
    caption character varying(50),
    props text,
    blobno numeric(3,0) NOT NULL,
    updatedon character varying(25),
    createdon character varying(25),
    importedon character varying(25),
    createdby character varying(25),
    updatedby character varying(25),
    importedby character varying(25),
    readonly character varying(1),
    updusername character varying(25)
);


ALTER TABLE agilespacefresh.axprops OWNER TO agilespace;

--
-- TOC entry 494 (class 1259 OID 2006124)
-- Name: axpscriptrunner; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpscriptrunner (
    axpscriptrunnerid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    usr character varying(50),
    script_id character varying(10),
    script_date date,
    script_type character varying(100),
    script_purpose character varying(200),
    script_text character varying(1000),
    status numeric(1,0),
    tab_name character varying(100),
    trg_name character varying(150),
    rows_affected numeric(10,0)
);


ALTER TABLE agilespacefresh.axpscriptrunner OWNER TO agilespace;

--
-- TOC entry 495 (class 1259 OID 2006129)
-- Name: axpselectionc; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpselectionc (
    selection character varying(25)
);


ALTER TABLE agilespacefresh.axpselectionc OWNER TO agilespace;

--
-- TOC entry 496 (class 1259 OID 2006132)
-- Name: axpselectiond; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpselectiond (
    selection timestamp without time zone
);


ALTER TABLE agilespacefresh.axpselectiond OWNER TO agilespace;

--
-- TOC entry 497 (class 1259 OID 2006135)
-- Name: axpselectionn; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpselectionn (
    selection numeric(5,0)
);


ALTER TABLE agilespacefresh.axpselectionn OWNER TO agilespace;

--
-- TOC entry 498 (class 1259 OID 2006138)
-- Name: axpstructconfig; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpstructconfig (
    axpstructconfigid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    asprops character varying(150),
    setype character varying(15),
    props character varying(150),
    context character varying(100),
    propvalue1 character varying(500),
    uploadfiletype character varying(4000),
    propvalue2 character varying(4000),
    propsval character varying(4000),
    alluserroles character varying(10),
    structcaption character varying(150),
    structname character varying(25),
    structelements character varying(100),
    sfield character varying(100),
    icolumn character varying(100),
    sbutton character varying(100),
    hlink character varying(100),
    stype character varying(15),
    userroles character varying(100),
    dupchk character varying(500),
    purpose text,
    structelements1 character varying(4000)
);


ALTER TABLE agilespacefresh.axpstructconfig OWNER TO agilespace;

--
-- TOC entry 499 (class 1259 OID 2006143)
-- Name: axpstructconfigprops; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpstructconfigprops (
    axpstructconfigpropsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    configprops character varying(150),
    propcode character varying(150),
    description text,
    dupchk character varying(150),
    context character varying(50),
    ptype character varying(15),
    caction character varying(1),
    chyperlink character varying(1),
    cfields character varying(1),
    alltstructs character varying(1),
    alliviews character varying(1),
    alluserroles character varying(1)
);


ALTER TABLE agilespacefresh.axpstructconfigprops OWNER TO agilespace;

--
-- TOC entry 500 (class 1259 OID 2006148)
-- Name: axpstructconfigproval; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpstructconfigproval (
    axpstructconfigprovalid numeric(16,0) NOT NULL,
    axpstructconfigpropsid numeric(16,0),
    axpstructconfigprovalrow integer,
    configvalues character varying(75)
);


ALTER TABLE agilespacefresh.axpstructconfigproval OWNER TO agilespace;

--
-- TOC entry 501 (class 1259 OID 2006151)
-- Name: axptree; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axptree (
    name character varying(50) NOT NULL,
    caption character varying(50),
    props text,
    blobno numeric(3,0) NOT NULL,
    updatedon character varying(25),
    createdon character varying(25),
    importedon character varying(25),
    createdby character varying(25),
    updatedby character varying(25),
    importedby character varying(25),
    readonly character varying(1),
    updusername character varying(25)
);


ALTER TABLE agilespacefresh.axptree OWNER TO agilespace;

--
-- TOC entry 502 (class 1259 OID 2006156)
-- Name: axptreeviewdetails; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axptreeviewdetails (
    viewname character varying(50),
    tstruct_node character varying(50),
    treename character varying(50),
    iviewname character varying(50),
    img character varying(75),
    type character varying(1)
);


ALTER TABLE agilespacefresh.axptreeviewdetails OWNER TO agilespace;

--
-- TOC entry 503 (class 1259 OID 2006159)
-- Name: axptreeviews; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axptreeviews (
    vname character varying(50),
    viewname character varying(50),
    treename character varying(50),
    applyon character varying(1),
    img character varying(75),
    type character varying(1)
);


ALTER TABLE agilespacefresh.axptreeviews OWNER TO agilespace;

--
-- TOC entry 504 (class 1259 OID 2006162)
-- Name: axptstructs; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axptstructs (
    tstruct character varying(5),
    caption character varying(50),
    savectrlfld character varying(50),
    delctrlfld character varying(50),
    trackchanges character varying(1),
    attach character varying(1),
    searchcond character varying(1000),
    listview character varying(1),
    schemaname character varying(25),
    workflow character varying(1),
    purpose text,
    traceability character varying(1),
    allflds character varying(1),
    trackflds character varying(2500),
    allusers character varying(1),
    trackusers character varying(4000),
    updatedon character varying(25),
    createdby character varying(100),
    createdon timestamp without time zone,
    modifiedby character varying(100),
    modifiedon timestamp without time zone
);


ALTER TABLE agilespacefresh.axptstructs OWNER TO agilespace;

--
-- TOC entry 505 (class 1259 OID 2006167)
-- Name: axpublishbackup_ax_layoutdesign; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpublishbackup_ax_layoutdesign (
    design_id numeric(16,0),
    transid character varying(255),
    module character varying(255),
    content text,
    created_by character varying(255),
    updated_by character varying(255),
    is_deleted character varying(1),
    is_private character varying(1),
    created_on timestamp(6) without time zone,
    updated_on timestamp(6) without time zone,
    is_migrated character varying(1),
    publishno numeric(6,0)
);


ALTER TABLE agilespacefresh.axpublishbackup_ax_layoutdesign OWNER TO agilespace;

--
-- TOC entry 506 (class 1259 OID 2006172)
-- Name: axpublishbackup_axpdef_tstruct; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpublishbackup_axpdef_tstruct (
    axpdef_tstructid numeric(16,0),
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    recid numeric(15,0),
    ntransid character varying(5),
    caption character varying(50),
    fieldcount numeric(10,0),
    purpose character varying(1000),
    isacoretrans character varying(10),
    menuposition character varying(50),
    menulist character varying(500),
    pageid character varying(100),
    ttrackchanges character varying(1),
    trackchanges character varying(5),
    trackchangesmadeby character varying(30),
    trackchangesfield character varying(30),
    selectuserlist character varying(100),
    selectfieldlist character varying(100),
    tattachment character varying(10),
    attachment character varying(5),
    tlistview character varying(10),
    listview character varying(5),
    schema character varying(100),
    tworkflow character varying(10),
    workflow character varying(5),
    cupdatedon date,
    savecontrolfield character varying(20),
    deletecontrolfield character varying(20),
    cstring character varying(200),
    allfillgrids character varying(500),
    allgenmaps character varying(500),
    allmdmaps character varying(500),
    layouttype character varying(20),
    structname character varying(10),
    pcaptitle character varying(300),
    axlibrary character varying(1),
    savecontrolfielddl character varying(250),
    deletecontrolfielddl character varying(250),
    includepage character varying(1),
    runtimemod character varying(1),
    runtimetstruct character varying(1),
    cachedsave character varying(1),
    savemode character varying(25),
    apiqueuename character varying(100),
    savequeuename character varying(100),
    notificationsonsave character varying(1),
    notificationtemplates character varying(4000),
    printonsave character varying(1),
    printtemplates character varying(4000),
    printtoqueue character varying(1),
    printqueuename character varying(100),
    printdirect character varying(1),
    printinviewmode character varying(1),
    printviewroles character varying(4000),
    enablelviewdesign character varying(1),
    publishno numeric(6,0)
);


ALTER TABLE agilespacefresh.axpublishbackup_axpdef_tstruct OWNER TO agilespace;

--
-- TOC entry 507 (class 1259 OID 2006177)
-- Name: axpublishbackup_axpflds; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpublishbackup_axpflds (
    tstruct character varying(5),
    itype character varying(50),
    fname character varying(50),
    caption character varying(2000),
    datatype character varying(50),
    datawidth numeric(5,0),
    flddecimal numeric(2,0),
    modeofentry character varying(50),
    expression character varying(4000),
    valexpr character varying(4000),
    srctf character varying(100),
    purpose text,
    fldsql text,
    srcfld character varying(50),
    hidden character varying(1),
    readonly character varying(1),
    savevalue character varying(1),
    dcname character varying(5),
    ordno numeric(4,0),
    customdatatype character varying(15),
    stype character varying(1),
    allowempty character varying(1),
    allowduplicate character varying(1),
    tabstop character varying(1),
    setcarry character varying(1),
    applycomma character varying(1),
    onlypositive character varying(1),
    clientvalidate character varying(1),
    mask character varying(25),
    pattern character varying(25),
    hint character varying(50),
    pwordchar character varying(1),
    srckey character varying(1),
    sgwidth character varying(50),
    sgheight numeric(5,0),
    cfield character varying(50),
    srctrans character varying(5),
    scol numeric(2,0),
    autoselect character varying(1),
    linkfield character varying(50),
    suggestive character varying(1),
    ctype character varying(2),
    disptype character varying(1),
    sep character varying(1),
    font character varying(35),
    color character varying(20),
    refreshonsave character varying(1),
    searchsql character varying(4000),
    dispdet character varying(500),
    depflds character varying(3000),
    parentflds character varying(3000),
    listvalues character varying(300),
    autogendet character varying(250),
    tablename character varying(50),
    asgrid character varying(1),
    frmno numeric(2,0),
    tlhw character varying(20),
    lbltlhw character varying(20),
    runtimefld character varying(1),
    applyrule character varying(1),
    displaytotal character varying(1),
    createdby character varying(100),
    createdon timestamp without time zone,
    modifiedby character varying(100),
    modifiedon timestamp without time zone,
    encrypted character varying(1),
    masking character varying(100),
    lastcharmask character varying(100),
    firstcharmask character varying(100),
    maskchar character varying(1),
    maskroles character varying(1000),
    customdecimal character varying(1),
    publishno numeric(6,0)
);


ALTER TABLE agilespacefresh.axpublishbackup_axpflds OWNER TO agilespace;

--
-- TOC entry 508 (class 1259 OID 2006182)
-- Name: axpublishbackup_axtoolbar; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpublishbackup_axtoolbar (
    name character varying(50),
    stype character varying(20),
    title character varying(50),
    key character varying(50),
    folder character varying(10),
    action character varying(100),
    task character varying(100),
    script character varying(1000),
    icon character varying(100),
    parent character varying(50),
    haschildren character varying(5),
    ordno numeric(3,0),
    footer character varying(6),
    visible character varying(7),
    parentdc character varying(10),
    "position" character varying(30),
    api character varying(200),
    publishno numeric(6,0)
);


ALTER TABLE agilespacefresh.axpublishbackup_axtoolbar OWNER TO agilespace;

--
-- TOC entry 509 (class 1259 OID 2006187)
-- Name: axpublishbackup_lviews; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpublishbackup_lviews (
    name character varying(15),
    caption character varying(50),
    username character varying(30),
    props text,
    blobno numeric(3,0),
    updatedon character varying(25),
    createdon character varying(25),
    importedon character varying(25),
    createdby character varying(25),
    updatedby character varying(25),
    importedby character varying(25),
    readonly character varying(1),
    transid character varying(5),
    updusername character varying(25),
    publishno numeric(6,0)
);


ALTER TABLE agilespacefresh.axpublishbackup_lviews OWNER TO agilespace;

--
-- TOC entry 510 (class 1259 OID 2006192)
-- Name: axpublishbackup_tstructs; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpublishbackup_tstructs (
    name character varying(15),
    caption character varying(2000),
    props bytea,
    blobno numeric(3,0),
    updatedon character varying(25),
    createdon character varying(25),
    importedon character varying(25),
    createdby character varying(25),
    updatedby character varying(25),
    importedby character varying(25),
    readonly character varying(1),
    updusername character varying(25),
    workflow character varying(1),
    runtimetstruct character varying(1),
    runtimemod character varying(1),
    publishno numeric(6,0)
);


ALTER TABLE agilespacefresh.axpublishbackup_tstructs OWNER TO agilespace;

--
-- TOC entry 511 (class 1259 OID 2006197)
-- Name: axpublishhistory; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpublishhistory (
    transid character varying(30),
    transtype character varying(2),
    publishedon character varying(25),
    publishedby character varying(30),
    publishno numeric(6,0),
    remarks character varying(4000)
);


ALTER TABLE agilespacefresh.axpublishhistory OWNER TO agilespace;

--
-- TOC entry 512 (class 1259 OID 2006202)
-- Name: axpublishreport; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpublishreport (
    transid character varying(30),
    publishedon character varying(25),
    publishedby character varying(30),
    status character varying(4000),
    remarks character varying(1000),
    createdon date DEFAULT now(),
    publishedto character varying(100),
    transtype character varying(10)
);


ALTER TABLE agilespacefresh.axpublishreport OWNER TO agilespace;

--
-- TOC entry 513 (class 1259 OID 2006208)
-- Name: axpweblogs; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpweblogs (
    username character varying(50),
    logtime character varying(50),
    type character varying(50),
    sessionid character varying(50),
    ipaddress character varying(20),
    logdetails text
);


ALTER TABLE agilespacefresh.axpweblogs OWNER TO agilespace;

--
-- TOC entry 514 (class 1259 OID 2006213)
-- Name: axpws_config; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axpws_config (
    transid character varying(8) NOT NULL,
    iviewname character varying(8) NOT NULL,
    fldname character varying(8),
    printformname character varying(8),
    versionno character varying(8)
);


ALTER TABLE agilespacefresh.axpws_config OWNER TO agilespace;

--
-- TOC entry 515 (class 1259 OID 2006216)
-- Name: axquicklinks; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axquicklinks (
    axquicklinksid numeric,
    name character varying(100),
    linkname character varying(100),
    linkurl character varying(100),
    iconurl character varying(100),
    linktype character varying(100)
);


ALTER TABLE agilespacefresh.axquicklinks OWNER TO agilespace;

--
-- TOC entry 516 (class 1259 OID 2006221)
-- Name: axrelations; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axrelations (
    mstruct character varying(5),
    dstruct character varying(5),
    mfield character varying(50),
    dfield character varying(50),
    rtype character varying(2)
);


ALTER TABLE agilespacefresh.axrelations OWNER TO agilespace;

--
-- TOC entry 517 (class 1259 OID 2006224)
-- Name: axrequest; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axrequest (
    requestid character varying(100) NOT NULL,
    requestreceivedtime timestamp with time zone,
    sourcefrom character varying(255),
    requeststring text,
    headers text,
    params text,
    authz character varying(255),
    contenttype character varying(150),
    contentlength character varying(10),
    host character varying(255),
    url text,
    endpoint character varying(255),
    requestmethod character varying(10),
    apiname character varying(255),
    username character varying(255),
    additionaldetails text,
    sourcemachineip character varying(255)
);


ALTER TABLE agilespacefresh.axrequest OWNER TO agilespace;

--
-- TOC entry 518 (class 1259 OID 2006229)
-- Name: axresponse; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axresponse (
    responseid character varying(100) NOT NULL,
    responsesenttime timestamp with time zone,
    statuscode integer,
    responsestring text,
    headers text,
    contenttype character varying(150),
    contentlength character varying(10),
    errordetails text,
    endpoint character varying(255),
    requestmethod character varying(10),
    username character varying(255),
    additionaldetails text,
    requestid character varying(100),
    executiontime character varying(20)
);


ALTER TABLE agilespacefresh.axresponse OWNER TO agilespace;

--
-- TOC entry 519 (class 1259 OID 2006234)
-- Name: axrulesdef; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axrulesdef (
    axrulesdefid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    transid character varying(10),
    formcontrol character varying(500),
    active character varying(10),
    rulegroup character varying(100),
    formcaption character varying(300),
    uroles text,
    isapplicable character varying(2000),
    isruntime character varying(1),
    onchngfldname character varying(4000),
    rulename character varying(200),
    scriptonload text,
    formcontrolparent text,
    onsubmit text,
    pegrule character varying(1),
    levelno numeric(10,0)
);


ALTER TABLE agilespacefresh.axrulesdef OWNER TO agilespace;

--
-- TOC entry 520 (class 1259 OID 2006239)
-- Name: axrulesdef_conmsg; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axrulesdef_conmsg (
    axrulesdef_conmsgid numeric(16,0) NOT NULL,
    axrulesdefid numeric(16,0),
    axrulesdef_conmsgrow integer,
    btnname character varying(100),
    btnapplicable character varying(99999),
    confirm_msg character varying(8000),
    btnstransid character varying(10),
    btnuroles character varying(4000),
    fname character varying(50)
);


ALTER TABLE agilespacefresh.axrulesdef_conmsg OWNER TO agilespace;

--
-- TOC entry 521 (class 1259 OID 2006244)
-- Name: axrulesdef_expr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axrulesdef_expr (
    axrulesdef_exprid numeric(16,0) NOT NULL,
    axrulesdefid numeric(16,0),
    axrulesdef_exprrow integer,
    exp_transid character varying(10),
    exp_fname character varying(50),
    expr character varying(4000)
);


ALTER TABLE agilespacefresh.axrulesdef_expr OWNER TO agilespace;

--
-- TOC entry 522 (class 1259 OID 2006249)
-- Name: axrulesdef_valexpr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axrulesdef_valexpr (
    axrulesdef_valexprid numeric(16,0) NOT NULL,
    axrulesdefid numeric(16,0),
    axrulesdef_valexprrow integer,
    vexp_transid character varying(10),
    vexp_fname character varying(50),
    valexpr character varying(4000)
);


ALTER TABLE agilespacefresh.axrulesdef_valexpr OWNER TO agilespace;

--
-- TOC entry 523 (class 1259 OID 2006254)
-- Name: axscheduler; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axscheduler (
    name character varying(15) NOT NULL,
    caption character varying(50),
    props text,
    blobno numeric(3,0) NOT NULL,
    updusername character varying(25),
    mwd numeric(1,0),
    dys character varying(100),
    schedule character varying(15),
    "time" character varying(15),
    updatedon character varying(25),
    readonly character varying(1),
    createdon character varying(25),
    createdby character varying(25),
    importedon character varying(25),
    importedby character varying(25),
    updatedby character varying(25)
);


ALTER TABLE agilespacefresh.axscheduler OWNER TO agilespace;

--
-- TOC entry 524 (class 1259 OID 2006259)
-- Name: axschema; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axschema (
    transid character varying(5),
    tablename character varying(128),
    schemaname character varying(25)
);


ALTER TABLE agilespacefresh.axschema OWNER TO agilespace;

--
-- TOC entry 525 (class 1259 OID 2006262)
-- Name: axscriptdef; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axscriptdef (
    scriptname character varying(50),
    script text,
    breakonerror character varying(1)
);


ALTER TABLE agilespacefresh.axscriptdef OWNER TO agilespace;

--
-- TOC entry 526 (class 1259 OID 2006267)
-- Name: axscriptjobs; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axscriptjobs (
    jobid character varying(50),
    scriptname character varying(50),
    username character varying(50),
    starttime timestamp(0) without time zone,
    endtime timestamp(0) without time zone,
    status character varying(4000),
    jobdate timestamp(0) without time zone,
    paramsnamevalue character varying(1000)
);


ALTER TABLE agilespacefresh.axscriptjobs OWNER TO agilespace;

--
-- TOC entry 527 (class 1259 OID 2006272)
-- Name: axsites; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axsites (
    sitename character varying(100),
    siteno numeric(3,0)
);


ALTER TABLE agilespacefresh.axsites OWNER TO agilespace;

--
-- TOC entry 528 (class 1259 OID 2006275)
-- Name: axsms; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axsms (
    recordid integer NOT NULL,
    mobileno character varying(10),
    msg character varying(250),
    status numeric(1,0) NOT NULL,
    senton timestamp without time zone,
    remarks character varying(1000),
    createdon timestamp without time zone
);


ALTER TABLE agilespacefresh.axsms OWNER TO agilespace;

--
-- TOC entry 529 (class 1259 OID 2006280)
-- Name: axsms_recordid_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.axsms_recordid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.axsms_recordid_seq OWNER TO agilespace;

--
-- TOC entry 6766 (class 0 OID 0)
-- Dependencies: 529
-- Name: axsms_recordid_seq; Type: SEQUENCE OWNED BY; Schema: agilespacefresh; Owner: agilespace
--

ALTER SEQUENCE agilespacefresh.axsms_recordid_seq OWNED BY agilespacefresh.axsms.recordid;


--
-- TOC entry 530 (class 1259 OID 2006281)
-- Name: axsms_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.axsms_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.axsms_seq OWNER TO agilespace;

--
-- TOC entry 531 (class 1259 OID 2006282)
-- Name: axsmsid; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.axsmsid
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.axsmsid OWNER TO agilespace;

--
-- TOC entry 532 (class 1259 OID 2006283)
-- Name: axsql_perf; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axsql_perf (
    sessionid character varying(30),
    username character varying(50),
    calledon timestamp without time zone,
    structname character varying(16),
    recordid numeric(15,0),
    timetaken numeric(10,0),
    dbtimetaken numeric(10,0),
    servicename character varying(50),
    serviceresult character varying(200),
    callfinished timestamp without time zone,
    query_details text,
    querytimetaken numeric(10,0)
);


ALTER TABLE agilespacefresh.axsql_perf OWNER TO agilespace;

--
-- TOC entry 533 (class 1259 OID 2006288)
-- Name: axsrrattach; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axsrrattach (
    recordid numeric(16,0),
    filename character varying(200),
    template bytea,
    blobno numeric(3,0),
    recid character varying(217)
);


ALTER TABLE agilespacefresh.axsrrattach OWNER TO agilespace;

--
-- TOC entry 534 (class 1259 OID 2006293)
-- Name: axstcattach; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axstcattach (
    recordid numeric(16,0),
    filename character varying(200),
    template bytea,
    blobno numeric(3,0),
    recid character varying(217)
);


ALTER TABLE agilespacefresh.axstcattach OWNER TO agilespace;

--
-- TOC entry 535 (class 1259 OID 2006298)
-- Name: axstructprops; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axstructprops (
    sname character varying(10),
    stype character varying(1),
    fldname character varying(50),
    datawidth numeric(4,0),
    decimals numeric(2,0),
    status character varying(15),
    errmsg character varying(500)
);


ALTER TABLE agilespacefresh.axstructprops OWNER TO agilespace;

--
-- TOC entry 536 (class 1259 OID 2006303)
-- Name: axtasks; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axtasks (
    fromwhom character varying(30),
    towhom character varying(30),
    sname character varying(10),
    recordid numeric(16,0),
    status numeric(2,0),
    upddatetime character varying(30),
    message text,
    dueby timestamp without time zone,
    reportingto character varying(30),
    dueact numeric(1,0),
    app_level numeric(3,0),
    notify_status character varying(1) DEFAULT 'N'::character varying
);


ALTER TABLE agilespacefresh.axtasks OWNER TO agilespace;

--
-- TOC entry 537 (class 1259 OID 2006309)
-- Name: axtempuserfields; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axtempuserfields (
    fldname character varying(50),
    fldtype character varying(1),
    fldwidth numeric(5,0),
    fldordno numeric(5,0)
);


ALTER TABLE agilespacefresh.axtempuserfields OWNER TO agilespace;

--
-- TOC entry 538 (class 1259 OID 2006312)
-- Name: axtoolbar; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axtoolbar (
    name character varying(50),
    stype character varying(20),
    title character varying(50),
    key character varying(50),
    folder character varying(10),
    action character varying(100),
    task character varying(100),
    script character varying(1000),
    icon character varying(100),
    parent character varying(50),
    haschildren character varying(5),
    ordno numeric(3,0),
    footer character varying(6),
    visible character varying(7),
    parentdc character varying(10),
    "position" character varying(30),
    api character varying(200)
);


ALTER TABLE agilespacefresh.axtoolbar OWNER TO agilespace;

--
-- TOC entry 539 (class 1259 OID 2006317)
-- Name: axtranscontrol; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axtranscontrol (
    username character varying(50),
    transid character varying(5),
    sessionid character varying(30),
    recordid numeric(16,0),
    loadedon timestamp without time zone
);


ALTER TABLE agilespacefresh.axtranscontrol OWNER TO agilespace;

--
-- TOC entry 540 (class 1259 OID 2006320)
-- Name: axtstructhint; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axtstructhint (
    axtstructhintid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    caption_tstruct character varying(1000),
    tid character varying(10),
    fldname character varying(20),
    rtf_hint text
);


ALTER TABLE agilespacefresh.axtstructhint OWNER TO agilespace;

--
-- TOC entry 541 (class 1259 OID 2006325)
-- Name: axtsuserconfig; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axtsuserconfig (
    rolename character varying(50),
    username character varying(50),
    userlevel numeric(2,0),
    formname character varying(5),
    fieldname character varying(50),
    opname character varying(10),
    propvalue character varying(4000),
    propname character varying(10)
);


ALTER TABLE agilespacefresh.axtsuserconfig OWNER TO agilespace;

--
-- TOC entry 542 (class 1259 OID 2006330)
-- Name: axuseractivations; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axuseractivations (
    axuseractivationsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    pusername character varying(200),
    usertype character varying(5),
    isactive character varying(1),
    authkey character varying(200),
    utypechng character varying(1),
    authkeyflg character varying(1),
    userkey character varying(500)
);


ALTER TABLE agilespacefresh.axuseractivations OWNER TO agilespace;

--
-- TOC entry 543 (class 1259 OID 2006335)
-- Name: axusercharts; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axusercharts (
    axuserchartsid numeric(16,0) NOT NULL,
    axusersid numeric(16,0),
    axuserchartsrow integer,
    charts numeric(16,0),
    graphtype character varying(30)
);


ALTER TABLE agilespacefresh.axusercharts OWNER TO agilespace;

--
-- TOC entry 544 (class 1259 OID 2006338)
-- Name: axusergrouping; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axusergrouping (
    axusergroupingid numeric(16,0) NOT NULL,
    axusersid numeric(16,0),
    axug_qa character varying(500)
);


ALTER TABLE agilespacefresh.axusergrouping OWNER TO agilespace;

--
-- TOC entry 545 (class 1259 OID 2006343)
-- Name: axusergroupsdetail; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axusergroupsdetail (
    axusergroupsdetailid numeric(16,0) NOT NULL,
    axusergroupsid numeric(16,0),
    axusergroupsdetailrow integer,
    roles_id character varying(20)
);


ALTER TABLE agilespacefresh.axusergroupsdetail OWNER TO agilespace;

--
-- TOC entry 546 (class 1259 OID 2006346)
-- Name: axuserpermissions; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axuserpermissions (
    axuserpermissionsid numeric(16,0) NOT NULL,
    axusersid numeric(16,0),
    axuserpermissionsrow integer,
    axuserrole character varying(200),
    cnd text,
    axup_qa character varying(500)
);


ALTER TABLE agilespacefresh.axuserpermissions OWNER TO agilespace;

--
-- TOC entry 547 (class 1259 OID 2006351)
-- Name: axuserprofile; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axuserprofile (
    username character varying(50),
    userprofile text,
    blobno numeric(3,0)
);


ALTER TABLE agilespacefresh.axuserprofile OWNER TO agilespace;

--
-- TOC entry 548 (class 1259 OID 2006356)
-- Name: axuserprofileimage; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axuserprofileimage (
    username character varying(50),
    userimage text,
    blobno numeric(3,0)
);


ALTER TABLE agilespacefresh.axuserprofileimage OWNER TO agilespace;

--
-- TOC entry 549 (class 1259 OID 2006361)
-- Name: axusers; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axusers (
    username character varying(30) NOT NULL,
    password character varying(200),
    usergroup character varying(30),
    groupno numeric(7,0),
    build character varying(1),
    manage character varying(1),
    tools character varying(1),
    email character varying(50),
    pageaccess character varying(250),
    active character varying(1),
    reportingto character varying(30),
    isfirsttime character varying(1),
    workflow character varying(1),
    webskin character varying(25),
    send character varying(1),
    actflag character varying(1),
    logintry numeric(2,0),
    pwdexpdays numeric(3,0),
    importstruct character varying(1),
    language_access character varying(1),
    language character varying(25),
    exportstruct character varying(1),
    axpertmanager character varying(1),
    pwd character varying(20),
    accesscode character varying(25),
    appparams character varying(1),
    appmanager character varying(1),
    debug character varying(1),
    carddetails text,
    import_data character varying(1),
    pusername character varying(50),
    export_data character varying(1),
    branchlocationname character varying(254),
    nickname character varying(200),
    ppassword character varying(50),
    consolidated_usergroups character varying(2000),
    usertype character varying(20),
    user_groups character varying(2000),
    actors character varying(2000),
    mobile character varying(10),
    access_alldata character varying(1),
    access_teamsdata character varying(1),
    access_subordinatesdata character varying(1),
    consolidated_accessusergroups character varying(2000),
    access_officelocation character varying(1),
    team_leader character varying(50),
    pwdauth character varying(1),
    otpauth character varying(1),
    allusergroup character varying(200),
    dhomepage character varying(200),
    global_displaytext character varying(300),
    poweruser character varying(1),
    isuniquehybrid character varying(1),
    axlang character varying(100),
    cancelremarks character varying(300),
    axusersid numeric(15,0),
    cancel character varying(10),
    sourceid numeric(15,0),
    homepage character varying(255) DEFAULT NULL::character varying,
    singleloginkey character varying(50),
    emailpassword character varying(30),
    appmgraccess character varying(1),
    usergroups character varying(4000),
    adminaccess character varying(500),
    portaluser character varying(1),
    authkey character varying(200),
    oldportaluser character varying(1),
    userkey character varying(200)
);


ALTER TABLE agilespacefresh.axusers OWNER TO agilespace;

--
-- TOC entry 550 (class 1259 OID 2006367)
-- Name: axuserspwdpolicy; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axuserspwdpolicy (
    username character varying(50) NOT NULL,
    pwdchangedate timestamp without time zone,
    pwdchange character varying(1),
    prevpwds text
);


ALTER TABLE agilespacefresh.axuserspwdpolicy OWNER TO agilespace;

--
-- TOC entry 551 (class 1259 OID 2006372)
-- Name: axusrhistory; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axusrhistory (
    recordid numeric(16,0),
    modifieddate date,
    username character varying(30),
    fieldname character varying(30),
    oldvalue character varying(250),
    newvalue character varying(250),
    rowno numeric(38,0),
    delflag character varying(1),
    modno numeric(10,0),
    frameno numeric(10,0),
    parentrow numeric(10,0),
    tablerecid numeric(16,0),
    idvalue numeric(16,0),
    oldidvalue numeric(16,0),
    transdeleted character varying(5),
    newtrans character varying(5),
    canceltrans character varying(1),
    cancelremarks character varying(250)
);


ALTER TABLE agilespacefresh.axusrhistory OWNER TO agilespace;

--
-- TOC entry 552 (class 1259 OID 2006377)
-- Name: axusrprofilepic; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axusrprofilepic (
    recordid numeric(16,0),
    img bytea,
    blobno numeric(3,0),
    ftype character varying(4)
);


ALTER TABLE agilespacefresh.axusrprofilepic OWNER TO agilespace;

--
-- TOC entry 553 (class 1259 OID 2006382)
-- Name: axvarcore; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axvarcore (
    axvarcoreid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    vpname character varying(50),
    isparam character varying(1),
    vscript text,
    pcaption character varying(100),
    pdatatype character varying(20),
    modeofentry character varying(10),
    masterdlui character varying(200),
    masterdl character varying(200),
    source character varying(200),
    sql_editor_psql text,
    vpvalue character varying(2000),
    display character varying(1),
    readonly character varying(1),
    customdatatype character varying(100),
    datawidth numeric(10,0),
    isappparam character varying(1),
    constant_name character varying(100),
    constant_value character varying(500),
    isconstant character varying(1),
    var_name character varying(100),
    exp_editor_varscript text,
    isvariable character varying(1),
    db_funtion character varying(500),
    db_funtion_params character varying(4000),
    isdbobj character varying(1),
    event_onlogin character varying(1),
    event_onformload character varying(1),
    forms character varying(4000),
    event_onreportload character varying(1),
    reports character varying(4000),
    remarks text,
    stransid character varying(5),
    axvarname character varying(200),
    dbvarname character varying(100),
    dbvartype character varying(100),
    dbvarval character varying(500),
    dbvarsourceid numeric(15,0),
    forms_transid character varying(4000),
    reports_transid character varying(4000)
);


ALTER TABLE agilespacefresh.axvarcore OWNER TO agilespace;

--
-- TOC entry 554 (class 1259 OID 2006387)
-- Name: axworkflow; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axworkflow (
    name character varying(10) NOT NULL,
    caption character varying(25),
    rname character varying(15),
    props text,
    blobno numeric(3,0),
    updatedon character varying(25),
    createdon character varying(25),
    importedon character varying(25),
    createdby character varying(25),
    updatedby character varying(25),
    importedby character varying(25),
    readonly character varying(1),
    updusername character varying(25),
    wno numeric(4,0),
    appemail character varying(1),
    mailcontent text,
    chkms character varying(1),
    url character varying(200),
    attach character varying(75),
    auth character varying(1)
);


ALTER TABLE agilespacefresh.axworkflow OWNER TO agilespace;

--
-- TOC entry 555 (class 1259 OID 2006392)
-- Name: axworkflowmail; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axworkflowmail (
    sname character varying(5),
    recordid numeric(16,0),
    updusername character varying(50),
    app_datetime timestamp without time zone,
    app_level numeric(3,0),
    status numeric(2,0),
    errmsg character varying(1000)
);


ALTER TABLE agilespacefresh.axworkflowmail OWNER TO agilespace;

--
-- TOC entry 556 (class 1259 OID 2006397)
-- Name: axxuc1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axxuc1 (
    axxuc1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    document_date date,
    axp_dcstate character varying(100),
    present_isactive character varying(1),
    isactive character varying(1),
    changed_by character varying(500),
    user_name numeric(16,0),
    effective_date date,
    change_parameter character varying(50),
    pconsolidated_userroles character varying(2000),
    consolidated_userroles character varying(1000)
);


ALTER TABLE agilespacefresh.axxuc1 OWNER TO agilespace;

--
-- TOC entry 557 (class 1259 OID 2006402)
-- Name: axxuc2; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axxuc2 (
    axxuc2id numeric(16,0) NOT NULL,
    axxuc1id numeric(16,0),
    axxuc2row integer,
    user_roles_name character varying(50),
    effective_from date,
    effective_to date,
    user_name_onroles character varying(254),
    users_logindetailsid numeric(15,0),
    axusersid numeric(15,0)
);


ALTER TABLE agilespacefresh.axxuc2 OWNER TO agilespace;

--
-- TOC entry 558 (class 1259 OID 2006405)
-- Name: axxuc3; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axxuc3 (
    axxuc3id numeric(16,0) NOT NULL,
    axxuc1id numeric(16,0),
    present_branchlocation character varying(1000),
    team_leader character varying(254),
    users_branchlocationname numeric(16,0),
    present_reportingmanager character varying(500),
    primary_reporting_manager character varying(254),
    present_teamleader character varying(254)
);


ALTER TABLE agilespacefresh.axxuc3 OWNER TO agilespace;

--
-- TOC entry 559 (class 1259 OID 2006410)
-- Name: axxuc4; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axxuc4 (
    axxuc4id numeric(16,0) NOT NULL,
    axxuc1id numeric(16,0),
    present_accesstoalldata character varying(1),
    access_alldata character varying(1),
    present_accessteamsdata character varying(1),
    access_teamsdata character varying(1),
    present_accesstosubordinates character varying(1),
    access_subordinatesdata character varying(1),
    present_accessofficelocation character varying(1),
    access_officelocation character varying(1)
);


ALTER TABLE agilespacefresh.axxuc4 OWNER TO agilespace;

--
-- TOC entry 560 (class 1259 OID 2006413)
-- Name: axxuc5; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axxuc5 (
    axxuc5id numeric(16,0) NOT NULL,
    axxuc1id numeric(16,0),
    new_password character varying(15),
    ppassword character varying(50)
);


ALTER TABLE agilespacefresh.axxuc5 OWNER TO agilespace;

--
-- TOC entry 561 (class 1259 OID 2006416)
-- Name: axxuc6; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axxuc6 (
    axxuc6id numeric(16,0) NOT NULL,
    axxuc1id numeric(16,0),
    pconsolidated_adminaccess character varying(2000),
    consolidated_adminaccess character varying(2000)
);


ALTER TABLE agilespacefresh.axxuc6 OWNER TO agilespace;

--
-- TOC entry 562 (class 1259 OID 2006421)
-- Name: axxuc7; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axxuc7 (
    axxuc7id numeric(16,0) NOT NULL,
    axxuc1id numeric(16,0),
    pconsolidated_usergroups character varying(2000),
    consolidated_usergroups character varying(2000)
);


ALTER TABLE agilespacefresh.axxuc7 OWNER TO agilespace;

--
-- TOC entry 563 (class 1259 OID 2006426)
-- Name: axxuc8; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axxuc8 (
    axxuc8id numeric(16,0) NOT NULL,
    axxuc1id numeric(16,0),
    pconsolidated_actors character varying(2000),
    consolidated_actors character varying(2000)
);


ALTER TABLE agilespacefresh.axxuc8 OWNER TO agilespace;

--
-- TOC entry 564 (class 1259 OID 2006431)
-- Name: axxuc9; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.axxuc9 (
    axxuc9id numeric(16,0) NOT NULL,
    axxuc1id numeric(16,0),
    testdata character varying(10)
);


ALTER TABLE agilespacefresh.axxuc9 OWNER TO agilespace;

--
-- TOC entry 565 (class 1259 OID 2006434)
-- Name: backupdate; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.backupdate (
    taskid character varying(100),
    sts character varying(100),
    createdby character varying(100),
    actedon date,
    reason text
);


ALTER TABLE agilespacefresh.backupdate OWNER TO agilespace;

--
-- TOC entry 566 (class 1259 OID 2006439)
-- Name: bk19924_ax_layoutdesign; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.bk19924_ax_layoutdesign (
    design_id numeric(16,0),
    transid character varying(255),
    module character varying(255),
    content text,
    created_by character varying(255),
    updated_by character varying(255),
    is_deleted character varying(1),
    is_private character varying(1),
    created_on timestamp(6) without time zone,
    updated_on timestamp(6) without time zone,
    is_migrated character varying(1)
);


ALTER TABLE agilespacefresh.bk19924_ax_layoutdesign OWNER TO agilespace;

--
-- TOC entry 567 (class 1259 OID 2006444)
-- Name: bk19924_ax_layoutdesign_saved; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.bk19924_ax_layoutdesign_saved (
    design_id numeric(16,0),
    transid character varying(255),
    module character varying(255),
    content text,
    created_by character varying(255),
    updated_by character varying(255),
    is_deleted character varying(1),
    created_on timestamp(6) without time zone,
    updated_on timestamp(6) without time zone,
    is_migrated character varying(1),
    is_publish character varying(1),
    is_private character varying(1),
    parent_design_id numeric(16,0),
    responsibility text,
    order_by numeric
);


ALTER TABLE agilespacefresh.bk19924_ax_layoutdesign_saved OWNER TO agilespace;

--
-- TOC entry 568 (class 1259 OID 2006449)
-- Name: bk_taskf_hdr_170725; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.bk_taskf_hdr_170725 (
    taskf_hdrid numeric(16,0),
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    uname character varying(50),
    sequencename character varying(50),
    taskgroup character varying(50),
    tasksubgroup character varying(50),
    assigneddate date,
    expectedcompletiondate date,
    taskdescription text,
    axpfile_attach character varying(800),
    axpfilepath_attach character varying(200),
    assignby character varying(500),
    assignto character varying(800),
    dtraineetype character varying(50),
    duedate date,
    viewby character varying(50),
    reassignedto character varying(50),
    reassigneby character varying(50),
    status character varying(100),
    axmember character varying(500),
    enablec character varying(10),
    control character varying(10),
    rescheduledby character varying(50),
    rescheduleddate date,
    forwardedto character varying(50),
    forwardedby character varying(50),
    reassignedtime character varying(50),
    forwardedtime character varying(50),
    taskid character varying(30),
    ctrreadonly character varying(10),
    completiondate date,
    priority character varying(20),
    astatus character varying(50),
    fstatus character varying(50),
    subtype character varying(100),
    moreinfo character varying(2000),
    dynamicjson character varying(500),
    assignnto character varying(800),
    acceptedby character varying(50),
    startedby character varying(50),
    putonholdby character varying(50),
    completedby character varying(50),
    closedby character varying(50),
    droppedby character varying(50),
    taskname character varying(800),
    taskcategory character varying(200),
    fromdate date,
    todate date,
    city character varying(50),
    modeoftravel character varying(100),
    accomodation character varying(20),
    reimbursementamount numeric(10,0),
    datee date,
    instance character varying(50),
    schema character varying(50),
    project numeric(16,0),
    partner numeric(16,0),
    customer numeric(16,0),
    nooftrainees numeric(10,0),
    startdate date,
    "position" character varying(50),
    count numeric(10,0),
    skill character varying(200),
    demoto character varying(50),
    demodate date,
    demotime character varying(10),
    reasonforapply text,
    ctrsubmit numeric(10,0),
    slrestriction character varying(10),
    axg_qa character varying(4000),
    returnto character varying(50),
    returnby character varying(50),
    lastaction character varying(50),
    lastactionby character varying(50),
    lastactiondate date,
    lastactionreason character varying(2000),
    axpfilepath_lastaction character varying(50),
    taskcatdmy character varying(50),
    rmchk character varying(50),
    axpfile_lastaction character varying(50),
    lastactionremarks character varying(500)
);


ALTER TABLE agilespacefresh.bk_taskf_hdr_170725 OWNER TO agilespace;

--
-- TOC entry 569 (class 1259 OID 2006454)
-- Name: bugtr1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.bugtr1 (
    bugtr1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskid character varying(20),
    tasknme character varying(50),
    priority character varying(20),
    assignto character varying(20),
    currencydata character varying(20),
    getddat character varying(20),
    table1 character varying(2000),
    table2 character varying(2000),
    pparams character varying(50),
    tablee character varying(2000)
);


ALTER TABLE agilespacefresh.bugtr1 OWNER TO agilespace;

--
-- TOC entry 570 (class 1259 OID 2006459)
-- Name: city; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.city (
    cityid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    city_sname character varying(10),
    city_name character varying(255),
    country character varying(100),
    state character varying(200),
    active character varying(20)
);


ALTER TABLE agilespacefresh.city OWNER TO agilespace;

--
-- TOC entry 571 (class 1259 OID 2006464)
-- Name: clien1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.clien1 (
    clien1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    clientid character varying(20),
    name character varying(50)
);


ALTER TABLE agilespacefresh.clien1 OWNER TO agilespace;

--
-- TOC entry 572 (class 1259 OID 2006469)
-- Name: close1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.close1 (
    close1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskid character varying(200),
    taskname character varying(800),
    taskclosedate date,
    status character varying(50),
    closedby character varying(50),
    taskid_r numeric(20,0),
    assignedby character varying(50),
    assignto character varying(50),
    duedate date,
    expectedcompletiondate date,
    assigneddate date,
    taskdescription text,
    closetime character varying(30),
    requeststatus character varying(20),
    rejectreason character varying(100),
    category character varying(50),
    axpfile_attach character varying(800),
    axpfilepath_attach character varying(500),
    remarks character varying(2000),
    reasonforapply text,
    tagpeople character varying(500),
    emailto character varying(500)
);


ALTER TABLE agilespacefresh.close1 OWNER TO agilespace;

--
-- TOC entry 573 (class 1259 OID 2006474)
-- Name: company_details; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.company_details (
    company_detailsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    company_name character varying(254),
    business_vertical character varying(100),
    company_country character varying(100),
    company_state character varying(100),
    company_address text,
    company_regno character varying(50),
    company_displaytitle character varying(254)
);


ALTER TABLE agilespacefresh.company_details OWNER TO agilespace;

--
-- TOC entry 574 (class 1259 OID 2006479)
-- Name: complete_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.complete_hdr (
    complete_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskname character varying(800),
    taskid character varying(200),
    assignby character varying(50),
    assignedto character varying(50),
    assigneddate date,
    status character varying(50),
    ecd date,
    duedate date,
    cdate date,
    ctime character varying(50),
    description text,
    comments text,
    completedby character varying(50),
    ctrsubmit numeric(10,0),
    axpfile_attach character varying(800),
    axpfilepath_attach character varying(499),
    resolutiontype character varying(200),
    tagpeople character varying(500),
    emailto character varying(50)
);


ALTER TABLE agilespacefresh.complete_hdr OWNER TO agilespace;

--
-- TOC entry 575 (class 1259 OID 2006484)
-- Name: connectinfo; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.connectinfo (
    connectno numeric(4,0),
    lastupdated timestamp without time zone,
    lastnumber numeric(9,0),
    active character(1)
);


ALTER TABLE agilespacefresh.connectinfo OWNER TO agilespace;

--
-- TOC entry 576 (class 1259 OID 2006487)
-- Name: connections; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.connections (
    sessionid character varying(50),
    logintime timestamp without time zone,
    username character varying(50),
    usergroup character varying(250),
    groupno numeric(7,0),
    project character varying(50),
    pageaccess character varying(250),
    appvars text,
    userroles character varying(250),
    ip character varying(20),
    transidlist text
);


ALTER TABLE agilespacefresh.connections OWNER TO agilespace;

--
-- TOC entry 577 (class 1259 OID 2006492)
-- Name: connectnoseq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.connectnoseq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    MAXVALUE 9999
    CACHE 1
    CYCLE;


ALTER TABLE agilespacefresh.connectnoseq OWNER TO agilespace;

--
-- TOC entry 578 (class 1259 OID 2006493)
-- Name: coretstructdtls; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.coretstructdtls (
    coretstructdtlsid numeric(16,0) NOT NULL,
    coretstructhdrid numeric(16,0),
    coretstructdtlsrow integer,
    listofvalues character varying(30),
    getallvalue character varying(2000)
);


ALTER TABLE agilespacefresh.coretstructdtls OWNER TO agilespace;

--
-- TOC entry 579 (class 1259 OID 2006498)
-- Name: coretstructdtlsauto; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.coretstructdtlsauto (
    coretstructdtlsautoid numeric(16,0) NOT NULL,
    coretstructhdrid numeric(16,0),
    coretstructdtlsautorow integer,
    prefix character varying(10),
    prefixfield character varying(30),
    description character varying(60),
    startingno numeric(6,0),
    active character varying(5),
    noofdigits numeric(2,0),
    dupck character varying(60)
);


ALTER TABLE agilespacefresh.coretstructdtlsauto OWNER TO agilespace;

--
-- TOC entry 580 (class 1259 OID 2006501)
-- Name: coretstructhdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.coretstructhdr (
    coretstructhdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    recid numeric(15,0),
    stransid character varying(5),
    dcname character varying(10),
    asgrid character varying(10),
    assgrid character varying(10),
    ctdc numeric(10,2),
    numone numeric(10,0),
    dcid numeric(15,0),
    field_maxnum numeric(10,2),
    ctfield numeric(4,0),
    name character varying(30),
    caption character varying(100),
    customdatatype character varying(30),
    datatype character varying(20),
    datawidth numeric(5,0),
    fdecimal numeric(10,0),
    modeofentry character varying(20),
    axp_web_sqlexp_val_def_restrad character varying(20),
    sql_editor_detail character varying(2000),
    suggestive character varying(1),
    refreshonsave character varying(1),
    autoselect character varying(1),
    selectform_ character varying(100),
    savenormalized character varying(5),
    sql_editor_test character varying(2000),
    sql_editor_sqltext character varying(2000),
    sqlexta character varying(2000),
    ptableid character varying(30),
    firstcolvalue character varying(30),
    tablename character varying(50),
    windowwidth numeric(10,0),
    windowheight numeric(10,0),
    datasource character varying(30),
    sourcefield character varying(20),
    sourcetable character varying(20),
    refreshonsav character varying(1),
    autoselect_sql character varying(1),
    combobox_sql character varying(1),
    dynamicfiltercnt numeric(2,0),
    selectform character varying(100),
    fromtransid character varying(5),
    selectfield character varying(30),
    tname character varying(30),
    sql_editor_sqltextform character varying(200),
    windowwidth_form numeric(10,0),
    windowheight_form numeric(10,0),
    datasource_form character varying(30),
    savenormalized_form character varying(1),
    refreshonsave_form character varying(1),
    autoselect_form character varying(1),
    combobox_form character varying(10),
    master character varying(30),
    v_sql character varying(450),
    splitcolumns character varying(3000),
    source character varying(30),
    suggestive_fill character varying(1),
    customtype character varying(30),
    exp_editor_expression character varying(100),
    exp_editor_validateexpression character varying(100),
    purpose character varying(100),
    hidden character varying(1),
    allowempty character varying(1),
    readonly character varying(1),
    allowduplicate character varying(1),
    savevale character varying(1),
    dupchk character varying(50),
    fdetails character varying(400),
    frules character varying(400),
    createafter character varying(30),
    ordno numeric(10,2),
    sorderno numeric(10,2),
    fldordno numeric(10,0),
    type character varying(10),
    setcarry character varying(1),
    onlypositive character varying(1),
    applycomma character varying(1),
    clienvalidation character varying(1),
    tabstop character varying(1),
    mask character varying(50),
    pattern character varying(20),
    pwdchar character varying(1),
    hint character varying(100),
    searchsql character varying(1000),
    displaydetails character varying(100),
    componenttype character varying(30),
    separator character varying(1)
);


ALTER TABLE agilespacefresh.coretstructhdr OWNER TO agilespace;

--
-- TOC entry 581 (class 1259 OID 2006506)
-- Name: cusdt1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.cusdt1 (
    cusdt1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    customerid character varying(20),
    customername character varying(100),
    partnername character varying(50),
    contactperson character varying(50),
    mobileno numeric(10,0),
    mailid character varying(50),
    website character varying(50),
    address character varying(50),
    city character varying(50),
    state character varying(50),
    country character varying(50),
    pincode numeric(6,0),
    industry character varying(50),
    startdate date
);


ALTER TABLE agilespacefresh.cusdt1 OWNER TO agilespace;

--
-- TOC entry 582 (class 1259 OID 2006511)
-- Name: customtypes; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.customtypes (
    customtypesid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    typename character varying(20),
    datatype character varying(10),
    width numeric(4,0),
    deci numeric(5,3),
    namecheck character varying(30),
    replacechar character varying(30),
    fcharcheck character varying(30),
    validchk character varying(30),
    modeofentry character varying(20),
    cvalues character varying(100),
    defaultvalue character varying(100),
    sql_editor_details character varying(500),
    exp_editor_expression character varying(200),
    exp_editor_validateexpression character varying(200),
    readonly character varying(10),
    chide character varying(1),
    cpattern character varying(20),
    cmask character varying(50),
    cregularexpress character varying(500)
);


ALTER TABLE agilespacefresh.customtypes OWNER TO agilespace;

--
-- TOC entry 583 (class 1259 OID 2006516)
-- Name: demo; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.demo (
    demoid character varying(20),
    name character varying(100),
    demo001 character varying(50),
    shilpa character varying(50)
);


ALTER TABLE agilespacefresh.demo OWNER TO agilespace;

--
-- TOC entry 584 (class 1259 OID 2006519)
-- Name: drop1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.drop1 (
    drop1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskid character varying(199),
    assignedate date,
    assignor character varying(50),
    dropdate date,
    reason character varying(500),
    status character varying(50),
    taskname character varying(800),
    droptask character varying(50),
    pusername character varying(50),
    taskid_r numeric(20,0),
    droptime character varying(50),
    expectedcompletiondate date,
    duedate date,
    assignto character varying(50),
    taskdescription text,
    estatus character varying(50),
    droppedby character varying(50),
    axpfile_attach character varying(800),
    axpfilepath_attach character varying(500),
    tagpeople character varying(501),
    emailto character varying(50)
);


ALTER TABLE agilespacefresh.drop1 OWNER TO agilespace;

--
-- TOC entry 585 (class 1259 OID 2006524)
-- Name: dsignconfig; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.dsignconfig (
    dsignconfigid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    transname character varying(100),
    stransid character varying(10),
    tunique character varying(50),
    docname character varying(50),
    doctype character varying(10),
    duplicatecheck character varying(70)
);


ALTER TABLE agilespacefresh.dsignconfig OWNER TO agilespace;

--
-- TOC entry 586 (class 1259 OID 2006529)
-- Name: dsignconfigdtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.dsignconfigdtl (
    dsignconfigdtlid numeric(16,0) NOT NULL,
    dsignconfigid numeric(16,0),
    dsignconfigdtlrow integer,
    prolename numeric(16,0),
    pusername numeric(16,0),
    ordno character varying(10),
    semail character varying(10),
    ssms character varying(10),
    axpmailid numeric(16,0)
);


ALTER TABLE agilespacefresh.dsignconfigdtl OWNER TO agilespace;

--
-- TOC entry 587 (class 1259 OID 2006532)
-- Name: dual; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.dual (
    lval character varying(50)
);


ALTER TABLE agilespacefresh.dual OWNER TO agilespace;

--
-- TOC entry 588 (class 1259 OID 2006535)
-- Name: dwb_iviews; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.dwb_iviews (
    dwb_iviewsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon date,
    createdby character varying(50),
    createdon date,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    recid numeric(15,0),
    name character varying(8),
    replacechar character varying(30),
    fcharcheck character varying(100),
    validchk character varying(30),
    caption character varying(50),
    stype character varying(10),
    type character varying(10),
    task character varying(10),
    cat character varying(10),
    sname character varying(10),
    sql_editor_iviewsql text,
    ddldatatype character varying(15),
    paramscal character varying(200),
    paramscount character varying(10),
    def_table_params character varying(4000),
    iviewparams character varying(500),
    iviewparamscal character varying(500),
    pagecreate character varying(1),
    isacoretrans character varying(10),
    menuposition character varying(50),
    menulist character varying(500),
    captitle character varying(100),
    imodifiedon date,
    imodifiedby character varying(100),
    xmlgeneratedon date
);


ALTER TABLE agilespacefresh.dwb_iviews OWNER TO agilespace;

--
-- TOC entry 589 (class 1259 OID 2006540)
-- Name: dwb_publishprops; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.dwb_publishprops (
    dwb_publishpropsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    servertype character varying(20),
    servername character varying(100),
    serverpath character varying(1000),
    app_connection character varying(100),
    fs_username character varying(100),
    fs_password character varying(50),
    inactive character varying(1),
    uploadtype character varying(10),
    ftp_url character varying(1000),
    ftp_dir character varying(500),
    ftp_username character varying(100),
    ftp_pwd character varying(10),
    ftp_port numeric(10,0),
    db_type character varying(10),
    db_version character varying(10),
    db_host character varying(50),
    db_username character varying(100),
    db_pwd character varying(50),
    publishtodev character varying(1)
);


ALTER TABLE agilespacefresh.dwb_publishprops OWNER TO agilespace;

--
-- TOC entry 590 (class 1259 OID 2006545)
-- Name: emaildef; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.emaildef (
    emaildefid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon date,
    createdby character varying(50),
    createdon date,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    emaildefname character varying(100),
    emailwhat character varying(30),
    stype character varying(1),
    emailform character varying(100),
    emailtransid character varying(10),
    emailfilterstring character varying(1000),
    emailprintformnames character varying(100),
    emailiview character varying(100),
    emailiviewname character varying(10),
    emailparams character varying(2000),
    sql_editor_emailsqltext text,
    emailto character varying(1000),
    emailcc character varying(1000),
    emailbcc character varying(1000),
    emailsubject character varying(1000),
    emailattachment character varying(1000),
    emailattachrenamelist character varying(1000),
    emailbodytext text,
    emailmsoutlook character varying(1),
    axp_emailsource character varying(30),
    axp_emailtransid character varying(10),
    axp_emailiview character varying(10),
    axp_emailto character varying(1000),
    axp_emailcc character varying(1000),
    axp_emailbcc character varying(1000),
    axp_emailsubject character varying(1000),
    axp_emailattachment character varying(1000),
    axp_emailattachrenamelist character varying(1000),
    axp_emailbody text
);


ALTER TABLE agilespacefresh.emaildef OWNER TO agilespace;

--
-- TOC entry 591 (class 1259 OID 2006550)
-- Name: emaildetails; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.emaildetails (
    id character varying(100),
    sessionid character varying(30),
    username character varying(50),
    calledon timestamp without time zone,
    context character varying(50),
    structtype character varying(1),
    structname character varying(10),
    recordid numeric(15,0),
    act_script_name character varying(100),
    params character varying(1000),
    emaildefname character varying(100),
    totallines numeric(5,0),
    succlines numeric(5,0),
    status character varying(500)
);


ALTER TABLE agilespacefresh.emaildetails OWNER TO agilespace;

--
-- TOC entry 592 (class 1259 OID 2006555)
-- Name: emailexceptiondetails; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.emailexceptiondetails (
    id character varying(100),
    transid character varying(5),
    recordid numeric(15,0),
    iviewname character varying(10),
    emaildet character varying(1000),
    lineno numeric(5,0),
    errormsg character varying(1000)
);


ALTER TABLE agilespacefresh.emailexceptiondetails OWNER TO agilespace;

--
-- TOC entry 593 (class 1259 OID 2006560)
-- Name: empattendance; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.empattendance (
    empattendanceid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    punchdate date,
    docid character varying(50),
    empname character varying(50),
    pempname character varying(50),
    intime character varying(20),
    outtime character varying(20),
    dupcheck numeric(10,0),
    nowtime character varying(20),
    dbinouttime character varying(50),
    dbintime character varying(10),
    dbouttime character varying(10),
    sqpo numeric(2,0),
    sqlpunchout numeric(10,0),
    valpunchin numeric(10,0),
    punchin character varying(10),
    punchout character varying(10)
);


ALTER TABLE agilespacefresh.empattendance OWNER TO agilespace;

--
-- TOC entry 594 (class 1259 OID 2006565)
-- Name: empde1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.empde1 (
    empde1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    empid character varying(20),
    salutation character varying(20),
    fname character varying(50),
    mname character varying(50),
    lname character varying(50),
    empname character varying(150),
    dob date,
    gender character varying(20),
    maritalstatus character varying(20),
    residstatus character varying(20),
    offmail character varying(200),
    active character varying(20)
);


ALTER TABLE agilespacefresh.empde1 OWNER TO agilespace;

--
-- TOC entry 595 (class 1259 OID 2006570)
-- Name: empde2; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.empde2 (
    empde2id numeric(16,0) NOT NULL,
    empde1id numeric(16,0),
    doj date,
    typeofemp character varying(20),
    workloc character varying(20),
    dep character varying(20),
    design character varying(20),
    grade character varying(20),
    paycat character varying(20)
);


ALTER TABLE agilespacefresh.empde2 OWNER TO agilespace;

--
-- TOC entry 596 (class 1259 OID 2006573)
-- Name: empde3; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.empde3 (
    empde3id numeric(16,0) NOT NULL,
    empde1id numeric(16,0),
    address character varying(150),
    country character varying(20),
    state character varying(20),
    city character varying(20),
    mobno numeric(10,0)
);


ALTER TABLE agilespacefresh.empde3 OWNER TO agilespace;

--
-- TOC entry 597 (class 1259 OID 2006576)
-- Name: empde4; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.empde4 (
    empde4id numeric(16,0) NOT NULL,
    empde1id numeric(16,0),
    mop character varying(20),
    salarybank character varying(20),
    salaccno numeric(10,0)
);


ALTER TABLE agilespacefresh.empde4 OWNER TO agilespace;

--
-- TOC entry 598 (class 1259 OID 2006579)
-- Name: empdeprofile; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.empdeprofile (
    recordid numeric(16,0),
    img bytea,
    blobno numeric(3,0),
    ftype character varying(4)
);


ALTER TABLE agilespacefresh.empdeprofile OWNER TO agilespace;

--
-- TOC entry 599 (class 1259 OID 2006584)
-- Name: employee; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.employee (
    employeeid numeric(15,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    employeename character varying(50),
    shortname character varying(50),
    email character varying(50),
    gender character varying(20),
    mobileno numeric(10,0),
    dateofbirth date,
    dateofjoin date,
    aadharno numeric(12,0),
    panno character varying(10),
    bloodgroup character varying(20),
    emergencycontact numeric(10,0),
    designation character varying(50),
    businessrole character varying(50),
    grade character varying(10),
    reportingto character varying(50),
    projectmanager character varying(50),
    active character varying(20),
    address text,
    role character varying(40),
    empid numeric(20,0),
    companyname character varying(200),
    client character varying(100),
    worktype character varying(20),
    location character varying(50)
);


ALTER TABLE agilespacefresh.employee OWNER TO agilespace;

--
-- TOC entry 600 (class 1259 OID 2006589)
-- Name: employeeattendance; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.employeeattendance (
    employeeattendanceid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    viewfilter character varying(100),
    docid character varying(30),
    punchdate date,
    employeename character varying(50),
    pempname character varying(50),
    nowtime character varying(20),
    dbinouttime character varying(20),
    dbintime character varying(50),
    dbouttime character varying(50),
    sqpo numeric(2,0),
    punchin character varying(50),
    punchout character varying(50),
    intime character varying(50),
    outtime character varying(50)
);


ALTER TABLE agilespacefresh.employeeattendance OWNER TO agilespace;

--
-- TOC entry 601 (class 1259 OID 2006594)
-- Name: executeapidef; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.executeapidef (
    executeapidefid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon date,
    createdby character varying(50),
    createdon date,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    execapidefname character varying(100),
    execapiurl character varying(500),
    execapiparameterstring character varying(1000),
    execapiheaderstring character varying(1000),
    execapirequeststring text,
    execapimethod character varying(10),
    execapibasedon character varying(30),
    stype character varying(2),
    execapiform character varying(100),
    execapitransid character varying(10),
    execapifilterstring character varying(1000),
    execapilprintformnames character varying(100),
    execapiformattachments character varying(500),
    execapiiview character varying(100),
    execapiiviewname character varying(10),
    execapiiparams character varying(1000),
    sql_editor_execapisqltext text,
    apicategory character varying(20),
    apiresponsetype character varying(10),
    apiresponseformat character varying(10),
    execapibodyparamstring text,
    execapiauthstring character varying(100)
);


ALTER TABLE agilespacefresh.executeapidef OWNER TO agilespace;

--
-- TOC entry 602 (class 1259 OID 2006599)
-- Name: exportdatadetails; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.exportdatadetails (
    sessionid character varying(30),
    username character varying(50),
    calledon timestamp without time zone,
    structname character varying(6),
    recordid numeric(15,0),
    recordcount numeric(5,0),
    paramdetails character varying(250),
    filename character varying(200),
    mapfields character varying(250),
    withheader numeric(1,0)
);


ALTER TABLE agilespacefresh.exportdatadetails OWNER TO agilespace;

--
-- TOC entry 603 (class 1259 OID 2006604)
-- Name: fast_print_paper_size; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.fast_print_paper_size (
    psize character varying(250),
    pheight numeric(15,2),
    pwidth numeric(15,2)
);


ALTER TABLE agilespacefresh.fast_print_paper_size OWNER TO agilespace;

--
-- TOC entry 604 (class 1259 OID 2006607)
-- Name: fillgriddef; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.fillgriddef (
    transid character varying(5),
    fg_name character varying(50),
    formsize character varying(30),
    colsize character varying(150)
);


ALTER TABLE agilespacefresh.fillgriddef OWNER TO agilespace;

--
-- TOC entry 605 (class 1259 OID 2006610)
-- Name: financialyear; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.financialyear (
    financialyearid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    ttype character varying(50),
    finyr character varying(4),
    finyridentifier character varying(2),
    startdate date,
    enddate date,
    currentfinyr character varying(1),
    active character varying(10),
    closed character varying(1)
);


ALTER TABLE agilespacefresh.financialyear OWNER TO agilespace;

--
-- TOC entry 606 (class 1259 OID 2006615)
-- Name: financialyeardtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.financialyeardtl (
    financialyeardtlid numeric(16,0) NOT NULL,
    financialyearid numeric(16,0),
    financialyeardtlrow integer,
    dfinyr character varying(4),
    periodcode character varying(2),
    perioddesc character varying(10),
    quarter character varying(10),
    pstartdate date,
    penddate date,
    days numeric(15,0)
);


ALTER TABLE agilespacefresh.financialyeardtl OWNER TO agilespace;

--
-- TOC entry 607 (class 1259 OID 2006618)
-- Name: formsize; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.formsize (
    username character varying(30) NOT NULL,
    formname character varying(16) NOT NULL,
    tlhw character varying(25)
);


ALTER TABLE agilespacefresh.formsize OWNER TO agilespace;

--
-- TOC entry 608 (class 1259 OID 2006621)
-- Name: groupbtns; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.groupbtns (
    groupbtnsid numeric(16,0) NOT NULL,
    tconfigurationid numeric(16,0),
    groupbtnsrow integer,
    groupbtnname character varying(20),
    groupbuttons character varying(240),
    tmpgroup character varying(100),
    bcondition character varying(50)
);


ALTER TABLE agilespacefresh.groupbtns OWNER TO agilespace;

--
-- TOC entry 609 (class 1259 OID 2006624)
-- Name: htmlprint; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.htmlprint (
    htmlprintid numeric(16,0) NOT NULL,
    tconfigurationid numeric(16,0),
    htmlprintrow integer,
    html_buttonname character varying(20),
    html_filename character varying(40),
    html_fields character varying(100),
    t_fields character varying(10),
    t_file character varying(10),
    ccondition character varying(50)
);


ALTER TABLE agilespacefresh.htmlprint OWNER TO agilespace;

--
-- TOC entry 610 (class 1259 OID 2006627)
-- Name: htmlsections; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.htmlsections (
    htmlsectionsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon date,
    createdby character varying(50),
    createdon date,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    pageno character varying(100),
    caption character varying(100),
    axpfile_hpimages character varying(1000),
    axpfilepath_hpimages character varying(1000),
    addtomenu character varying(10),
    isacoretrans character varying(10),
    menuposition character varying(50),
    menulist character varying(500),
    params character varying(4000),
    template character varying(250)
);


ALTER TABLE agilespacefresh.htmlsections OWNER TO agilespace;

--
-- TOC entry 611 (class 1259 OID 2006632)
-- Name: iconfiguration; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.iconfiguration (
    iconfigurationid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    structname character varying(50),
    structtransid character varying(20),
    configname2 character varying(10),
    cntval character varying(10),
    cv_groupbuttons character varying(300)
);


ALTER TABLE agilespacefresh.iconfiguration OWNER TO agilespace;

--
-- TOC entry 612 (class 1259 OID 2006637)
-- Name: iconfigurationdtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.iconfigurationdtl (
    iconfigurationdtlid numeric(16,0) NOT NULL,
    iconfigurationid numeric(16,0),
    iconfigurationdtlrow integer,
    groupbtnname character varying(25),
    groupbuttons character varying(240),
    tmpgroup character varying(200),
    bcondition character varying(50)
);


ALTER TABLE agilespacefresh.iconfigurationdtl OWNER TO agilespace;

--
-- TOC entry 613 (class 1259 OID 2006642)
-- Name: images; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.images (
    name character varying(50) NOT NULL,
    img bytea,
    blobno numeric(3,0) NOT NULL,
    updatedon character varying(50),
    imgcount numeric(3,0)
);


ALTER TABLE agilespacefresh.images OWNER TO agilespace;

--
-- TOC entry 614 (class 1259 OID 2006647)
-- Name: importdatacompletion; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.importdatacompletion (
    id numeric(30,0),
    rapidimpid character varying(100),
    sessionid character varying(30),
    username character varying(50),
    calledon timestamp without time zone,
    structname character varying(6),
    filename character varying(200),
    recordcount numeric(5,0),
    success numeric(5,0),
    resultmsg character varying(4000),
    errlist text,
    blobno numeric
);


ALTER TABLE agilespacefresh.importdatacompletion OWNER TO agilespace;

--
-- TOC entry 615 (class 1259 OID 2006652)
-- Name: importdatadetails; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.importdatadetails (
    sessionid character varying(30),
    username character varying(50),
    calledon timestamp without time zone,
    structname character varying(6),
    recordid numeric(15,0),
    recordcount numeric(5,0),
    paramdetails character varying(250),
    filename character varying(200),
    success numeric(5,0),
    id numeric(30,0),
    mapfields character varying(250),
    infile numeric(1,0),
    rapidimpid character varying(100)
);


ALTER TABLE agilespacefresh.importdatadetails OWNER TO agilespace;

--
-- TOC entry 616 (class 1259 OID 2006657)
-- Name: importdataexceptions; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.importdataexceptions (
    sessionid character varying(30),
    username character varying(50),
    calledon timestamp without time zone,
    recordno numeric(5,0),
    errormsg character varying(250),
    id character varying(30),
    rapidimpid character varying(100)
);


ALTER TABLE agilespacefresh.importdataexceptions OWNER TO agilespace;

--
-- TOC entry 617 (class 1259 OID 2006660)
-- Name: inbound_inboundid_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.inbound_inboundid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.inbound_inboundid_seq OWNER TO agilespace;

--
-- TOC entry 6767 (class 0 OID 0)
-- Dependencies: 617
-- Name: inbound_inboundid_seq; Type: SEQUENCE OWNED BY; Schema: agilespacefresh; Owner: agilespace
--

ALTER SEQUENCE agilespacefresh.inbound_inboundid_seq OWNED BY agilespacefresh.inbound.inboundid;


--
-- TOC entry 618 (class 1259 OID 2006661)
-- Name: inbound_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.inbound_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.inbound_seq OWNER TO agilespace;

--
-- TOC entry 619 (class 1259 OID 2006662)
-- Name: iviewbuttons; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.iviewbuttons (
    iname character varying(8),
    button_name character varying(50),
    caption character varying(250),
    hint character varying(250),
    type character varying(10),
    img character varying(20),
    "position" character varying(10),
    flat character varying(10),
    sname character varying(20),
    bcontainer character varying(50),
    action character varying(20),
    btask character varying(20),
    bdef character varying(10),
    cat character varying(10),
    bparent character varying(20),
    tlhw character varying(30),
    font character varying(150),
    down character varying(10),
    ptype character varying(10),
    bcolor character varying(15),
    bfile character varying(50),
    balign character varying(10),
    ordno numeric(3,0)
);


ALTER TABLE agilespacefresh.iviewbuttons OWNER TO agilespace;

--
-- TOC entry 620 (class 1259 OID 2006667)
-- Name: iviewcols; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.iviewcols (
    iname character varying(8),
    icaption character varying(2000),
    f_name character varying(50),
    f_caption character varying(2000),
    query_name character varying(20),
    decimals numeric(10,0),
    datatype character varying(1),
    hidden character varying(1),
    expression character varying(1000),
    running_total character varying(1),
    display_total character varying(1),
    no_repeat character varying(1),
    apply_comma character varying(1),
    set_factor character varying(1),
    alignment character varying(10),
    col_seperator character varying(1),
    zero_off character varying(1),
    color character varying(20),
    font character varying(50),
    dos_graphicmode character varying(20),
    linespace character varying(50),
    before_fill character varying(50),
    click character varying(20),
    dblclick character varying(20),
    table_name character varying(20),
    search_name character varying(20),
    group_no numeric(5,0),
    group_heading character varying(20),
    column_width numeric(4,0),
    disp_expr character varying(500),
    compute_post character varying(1),
    set_cellfont character varying(1000),
    colcat character varying(10),
    ordno numeric(3,0)
);


ALTER TABLE agilespacefresh.iviewcols OWNER TO agilespace;

--
-- TOC entry 621 (class 1259 OID 2006672)
-- Name: iviewcomps; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.iviewcomps (
    iname character varying(8),
    localnum numeric(4,0),
    abtn numeric(4,0),
    vupd character varying(1),
    pnl_height numeric(4,0)
);


ALTER TABLE agilespacefresh.iviewcomps OWNER TO agilespace;

--
-- TOC entry 622 (class 1259 OID 2006675)
-- Name: iviewhyplink; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.iviewhyplink (
    iname character varying(10),
    hypname character varying(10),
    sname character varying(20),
    hypsource character varying(20),
    popup character varying(1),
    hyprefresh character varying(1),
    loadname character varying(1),
    ordno numeric(3,0)
);


ALTER TABLE agilespacefresh.iviewhyplink OWNER TO agilespace;

--
-- TOC entry 623 (class 1259 OID 2006678)
-- Name: iviewhypparval; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.iviewhypparval (
    iname character varying(10),
    hypname character varying(10),
    field character varying(20),
    parvalue character varying(20)
);


ALTER TABLE agilespacefresh.iviewhypparval OWNER TO agilespace;

--
-- TOC entry 624 (class 1259 OID 2006681)
-- Name: iviewmain; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.iviewmain (
    iname character varying(8),
    caption character varying(250),
    header1 character varying(250),
    header2 character varying(250),
    header3 character varying(250),
    grand_total character varying(1),
    display_params character varying(1),
    load_tstruct character varying(5),
    footer1 character varying(250),
    footer2 character varying(250),
    trailing_page numeric(5,0),
    printpage_total character varying(1),
    expression_set character varying(250),
    group_field character varying(20),
    lines_per_page numeric(5,0),
    font character varying(50),
    row_seperator character varying(1),
    caption_column character varying(20),
    folder character varying(20),
    printer_settings character varying(50),
    option_type character varying(20),
    total_seperator character varying(20),
    dos_graphic_mode character varying(10),
    line_space character varying(1),
    condensed character varying(1),
    page_footer1 character varying(50),
    page_footer2 character varying(50),
    page_footer3 character varying(50),
    report_footer3 character varying(50),
    recordid_column numeric(17,0),
    filter_expression character varying(50),
    factor numeric(5,0),
    print_logo character varying(1),
    heading_line_space character varying(1),
    details_in_footer character varying(1),
    next_queryname character varying(20),
    transid character varying(10),
    printer_name character varying(250),
    report_style character varying(1),
    print_indexpage character varying(1),
    hidden character varying(1),
    absolute_check character varying(1),
    heading_color character varying(50),
    heading1_font character varying(50),
    heading2_font character varying(50),
    heading3_font character varying(50),
    odd_color character varying(50),
    even_color character varying(50),
    row_height numeric(2,0),
    fixed_rows numeric(2,0),
    paper_size character varying(10),
    source_key character varying(15),
    orientation character varying(10),
    no_of_copies numeric(3,0),
    open_form character varying(10),
    extract_data character varying(20),
    before_fill character varying(20),
    click character varying(15),
    dblclick character varying(15),
    hide_firstcol character varying(1),
    hide_column_lines character varying(1),
    head_rowcolor character varying(50),
    head_rowfont character varying(50),
    sh_graph character varying(10),
    fittopage character varying(10),
    viewtype character varying(15),
    header_align character varying(10),
    footer_align character varying(10),
    parrange numeric(2,0),
    caching_type character varying(15),
    page_size numeric(4,0),
    ptable character varying(30)
);


ALTER TABLE agilespacefresh.iviewmain OWNER TO agilespace;

--
-- TOC entry 625 (class 1259 OID 2006686)
-- Name: iviewparams; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.iviewparams (
    iname character varying(8),
    pname character varying(50),
    pcaption character varying(250),
    query_name character varying(50),
    dtype character varying(1),
    suggestive character varying(1),
    exp character varying(250),
    val_exp character varying(250),
    hidden character varying(1),
    decimals numeric(10,0),
    value character varying(100),
    moe character varying(20),
    scripttext text,
    blobno numeric(3,0),
    multiselect character varying(1),
    dynamic_param character varying(1),
    save_value character varying(1),
    deps character varying(20),
    pord numeric(2,0),
    param_width numeric(4,0),
    clrcache character varying(1),
    picklist_cols character varying(250),
    ordno numeric(3,0)
);


ALTER TABLE agilespacefresh.iviewparams OWNER TO agilespace;

--
-- TOC entry 626 (class 1259 OID 2006691)
-- Name: iviewscripts; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.iviewscripts (
    username character varying(50) NOT NULL,
    createdon timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createdby character varying(50),
    modifiedon timestamp without time zone,
    modifiedby character varying(50),
    iname character varying(8),
    event character varying(50),
    type character varying(20),
    name character varying(10),
    caption character varying(20),
    script text
);


ALTER TABLE agilespacefresh.iviewscripts OWNER TO agilespace;

--
-- TOC entry 627 (class 1259 OID 2006697)
-- Name: iviewsql; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.iviewsql (
    iname character varying(8),
    scripttext text,
    type character varying(20),
    task character varying(10),
    blobno numeric(3,0),
    relation_field character varying(20),
    cat character varying(5),
    sname character varying(10),
    ordno numeric(2,0)
);


ALTER TABLE agilespacefresh.iviewsql OWNER TO agilespace;

--
-- TOC entry 628 (class 1259 OID 2006702)
-- Name: iviewsubtotals; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.iviewsubtotals (
    iname character varying(8),
    key_column character varying(100),
    header character varying(250),
    footer character varying(250),
    caption character varying(250),
    subtotal_order character varying(10),
    line_space character varying(1),
    pageskip character varying(1),
    total_ontop character varying(1),
    header_color character varying(15),
    footer_color character varying(15),
    ordno numeric(3,0)
);


ALTER TABLE agilespacefresh.iviewsubtotals OWNER TO agilespace;

--
-- TOC entry 629 (class 1259 OID 2006707)
-- Name: leavereq; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.leavereq (
    leavereqid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    issubmit character varying(1),
    docid character varying(10),
    docdate date,
    currentyear character varying(10),
    leaveperiod character varying(10),
    axp_wk7forceusersappr character varying(1),
    recid numeric(15,0),
    uname character varying(20),
    usernam character varying(150),
    userprojman character varying(10),
    empid numeric(16,0),
    eid character varying(50),
    employeeid numeric(15,0),
    empname character varying(100),
    compid numeric(15,0),
    compcode character varying(20),
    empemail character varying(100),
    reportto character varying(100),
    reporttobk character varying(50),
    rptmail character varying(50),
    gender character varying(10),
    mstatus character varying(20),
    ltype numeric(16,0),
    ltypedummy character varying(20),
    ltypedummy2 character varying(40),
    empservice numeric(10,0),
    service numeric(10,2),
    deductleave character varying(1),
    projectmanager character varying(100),
    reportingmanager character varying(100),
    fromdt date,
    todt date,
    ohdtchk date,
    weekoffworking numeric(10,0),
    holidaycnt numeric(10,0),
    halfday character varying(3),
    hfdaydt date,
    hfdayval numeric(5,2),
    hfdaydtpost date,
    lyear character varying(4),
    ldesc character varying(300),
    dummy character varying(40),
    ldate date,
    lday character varying(10),
    holiday character varying(50),
    eligible character varying(15),
    leave character varying(10),
    leavecount numeric(5,2),
    lactive character varying(1),
    nndays numeric(15,2),
    pmdays numeric(15,2),
    fdummy character varying(10),
    dupchk numeric(15,0),
    projectmanmail character varying(100),
    reportingto character varying(100),
    status character varying(10),
    empstatus character varying(100),
    statusman character varying(10),
    sqltext text
);


ALTER TABLE agilespacefresh.leavereq OWNER TO agilespace;

--
-- TOC entry 630 (class 1259 OID 2006712)
-- Name: leaverequest_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.leaverequest_hdr (
    leaverequest_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    viewfilter character varying(100),
    issubmit character varying(1),
    usergrp character varying(30),
    docid character varying(20),
    uname character varying(100),
    year character varying(20),
    recid numeric(20,0),
    usernam character varying(50),
    employeename character varying(50),
    requestedto character varying(200),
    dateofapply date,
    reasonforapply text,
    typeofleave character varying(20),
    fromdate date,
    todate date,
    axpfile_upload character varying(500),
    axpfilepath_upload character varying(500),
    balanceleaves numeric(10,0),
    slbalance numeric(10,0),
    allocatedleaves numeric(10,0),
    dupcheck character varying(99)
);


ALTER TABLE agilespacefresh.leaverequest_hdr OWNER TO agilespace;

--
-- TOC entry 631 (class 1259 OID 2006717)
-- Name: listh1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.listh1 (
    listh1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    docid character varying(20),
    edate date,
    hname character varying(50)
);


ALTER TABLE agilespacefresh.listh1 OWNER TO agilespace;

--
-- TOC entry 632 (class 1259 OID 2006722)
-- Name: lov1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.lov1 (
    lov1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    lovalue character varying(50),
    sname character varying(50),
    tnme character varying(50),
    taskname character varying(50)
);


ALTER TABLE agilespacefresh.lov1 OWNER TO agilespace;

--
-- TOC entry 633 (class 1259 OID 2006727)
-- Name: lviews; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.lviews (
    name character varying(15) NOT NULL,
    caption character varying(50),
    username character varying(30) NOT NULL,
    props text,
    blobno numeric(3,0) NOT NULL,
    updatedon character varying(25),
    createdon character varying(25),
    importedon character varying(25),
    createdby character varying(25),
    updatedby character varying(25),
    importedby character varying(25),
    readonly character varying(1),
    transid character varying(5) NOT NULL,
    updusername character varying(25)
);


ALTER TABLE agilespacefresh.lviews OWNER TO agilespace;

--
-- TOC entry 634 (class 1259 OID 2006732)
-- Name: materialrequest_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.materialrequest_hdr (
    materialrequest_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    docid character varying(20),
    employee character varying(50),
    dateofapply date,
    requestto character varying(50),
    required character varying(500),
    details text,
    axpfile_upload character varying(499),
    axpfilepath_upload character varying(500)
);


ALTER TABLE agilespacefresh.materialrequest_hdr OWNER TO agilespace;

--
-- TOC entry 635 (class 1259 OID 2006737)
-- Name: meete1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.meete1 (
    meete1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    meetingid numeric(16,0),
    employeename character varying(50),
    tdate date,
    status character varying(50)
);


ALTER TABLE agilespacefresh.meete1 OWNER TO agilespace;

--
-- TOC entry 636 (class 1259 OID 2006742)
-- Name: meetingbreak_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.meetingbreak_hdr (
    meetingbreak_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    employeename character varying(50),
    datee date,
    startbreak character varying(10),
    purpose character varying(100),
    convenor character varying(20),
    intime character varying(20),
    outtime character varying(20),
    meetingid character varying(20),
    dupcheck character varying(50),
    status character varying(50),
    pusername character varying(50),
    duplicatemeet character varying(50),
    endstatus character varying(50),
    viewby character varying(50)
);


ALTER TABLE agilespacefresh.meetingbreak_hdr OWNER TO agilespace;

--
-- TOC entry 637 (class 1259 OID 2006747)
-- Name: mg_accountcomp; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.mg_accountcomp (
    mg_accountcompid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    mg_accountcomprow numeric(5,0),
    company numeric(16,0),
    mg_accountid numeric(16,0),
    branch numeric(16,0)
);


ALTER TABLE agilespacefresh.mg_accountcomp OWNER TO agilespace;

--
-- TOC entry 638 (class 1259 OID 2006752)
-- Name: monthdtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.monthdtl (
    monthdtlid numeric(16,0) NOT NULL,
    monthhdrid numeric(16,0),
    monthdtlrow integer,
    dmonth character varying(50),
    mdate date,
    mday character varying(50),
    status character varying(20)
);


ALTER TABLE agilespacefresh.monthdtl OWNER TO agilespace;

--
-- TOC entry 639 (class 1259 OID 2006755)
-- Name: monthhdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.monthhdr (
    monthhdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    month character varying(20),
    fdate date,
    ldate date,
    tdate date
);


ALTER TABLE agilespacefresh.monthhdr OWNER TO agilespace;

--
-- TOC entry 640 (class 1259 OID 2006760)
-- Name: msgs1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.msgs1 (
    msgtime character varying(25),
    msg text,
    msgfrom character varying(30),
    msgto character varying(30),
    sname character varying(10),
    readflag character varying(3),
    recordid numeric(15,0),
    msgno numeric(5,0)
);


ALTER TABLE agilespacefresh.msgs1 OWNER TO agilespace;

--
-- TOC entry 641 (class 1259 OID 2006765)
-- Name: msgs2; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.msgs2 (
    msgtime character varying(25),
    msg text,
    msgfrom character varying(30),
    msgto character varying(30),
    sname character varying(10),
    readflag character varying(3),
    recordid numeric(15,0),
    msgno numeric(5,0)
);


ALTER TABLE agilespacefresh.msgs2 OWNER TO agilespace;

--
-- TOC entry 642 (class 1259 OID 2006770)
-- Name: mshaosema4; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.mshaosema4 (
    selection character varying(600) NOT NULL
);


ALTER TABLE agilespacefresh.mshaosema4 OWNER TO agilespace;

--
-- TOC entry 643 (class 1259 OID 2006775)
-- Name: ongoingtasks; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ongoingtasks (
    taskid character varying(20),
    username character varying(30),
    startdate date,
    starttime timestamp without time zone,
    enddate date,
    endtime timestamp without time zone
);


ALTER TABLE agilespacefresh.ongoingtasks OWNER TO agilespace;

--
-- TOC entry 644 (class 1259 OID 2006778)
-- Name: outbound_outboundid_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.outbound_outboundid_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.outbound_outboundid_seq OWNER TO agilespace;

--
-- TOC entry 6768 (class 0 OID 0)
-- Dependencies: 644
-- Name: outbound_outboundid_seq; Type: SEQUENCE OWNED BY; Schema: agilespacefresh; Owner: agilespace
--

ALTER SEQUENCE agilespacefresh.outbound_outboundid_seq OWNED BY agilespacefresh.outbound.outboundid;


--
-- TOC entry 645 (class 1259 OID 2006779)
-- Name: outbound_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.outbound_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.outbound_seq OWNER TO agilespace;

--
-- TOC entry 646 (class 1259 OID 2006780)
-- Name: partnerdetails; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.partnerdetails (
    partnerdetailsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    partnerid character varying(20),
    companyname character varying(50),
    contactperson character varying(50),
    mobileno numeric(10,0),
    mailid character varying(50),
    website character varying(100),
    address character varying(100),
    city character varying(50),
    state character varying(50),
    country character varying(50),
    pincode numeric(6,0),
    startdate date,
    industry character varying(50)
);


ALTER TABLE agilespacefresh.partnerdetails OWNER TO agilespace;

--
-- TOC entry 647 (class 1259 OID 2006785)
-- Name: payin1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.payin1 (
    payin1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    empid character varying(20),
    empname character varying(50),
    doj date,
    effectdate date,
    payfreq character varying(50)
);


ALTER TABLE agilespacefresh.payin1 OWNER TO agilespace;

--
-- TOC entry 648 (class 1259 OID 2006790)
-- Name: pdfimage; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.pdfimage (
    name character varying(50),
    pdfname character varying(50),
    img bytea,
    blobno numeric(3,0)
);


ALTER TABLE agilespacefresh.pdfimage OWNER TO agilespace;

--
-- TOC entry 649 (class 1259 OID 2006795)
-- Name: pdfprops; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.pdfprops (
    name character varying(50),
    caption character varying(50),
    blobno numeric(2,0),
    props text,
    updatedon character varying(25),
    createdon character varying(25),
    importedon character varying(25),
    createdby character varying(25),
    updatedby character varying(25),
    importedby character varying(25),
    readonly character varying(1),
    updusername character varying(25),
    transid character varying(5)
);


ALTER TABLE agilespacefresh.pdfprops OWNER TO agilespace;

--
-- TOC entry 650 (class 1259 OID 2006800)
-- Name: period; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.period (
    periodvalues character varying(40)
);


ALTER TABLE agilespacefresh.period OWNER TO agilespace;

--
-- TOC entry 651 (class 1259 OID 2006803)
-- Name: pnchhistory; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.pnchhistory (
    recordid numeric(16,0),
    modifieddate timestamp without time zone,
    username character varying(30),
    fieldname character varying(30),
    oldvalue character varying(250),
    newvalue character varying(250),
    rowno numeric(38,0),
    delflag character varying(1),
    modno numeric(10,0),
    frameno numeric(10,0),
    parentrow numeric(10,0),
    tablerecid numeric(16,0),
    idvalue numeric(16,0),
    oldidvalue numeric(16,0),
    transdeleted character varying(5),
    newtrans character varying(5),
    canceltrans character varying(1),
    cancelremarks character varying(250)
);


ALTER TABLE agilespacefresh.pnchhistory OWNER TO agilespace;

--
-- TOC entry 652 (class 1259 OID 2006808)
-- Name: pnchtrace; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.pnchtrace (
    transid character varying(5),
    "time" timestamp without time zone,
    username character varying(50),
    xml bytea,
    blobno numeric(3,0),
    sessionid character varying(30) NOT NULL
);


ALTER TABLE agilespacefresh.pnchtrace OWNER TO agilespace;

--
-- TOC entry 653 (class 1259 OID 2006813)
-- Name: popupsizes; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.popupsizes (
    name character varying(5),
    tlhw character varying(25)
);


ALTER TABLE agilespacefresh.popupsizes OWNER TO agilespace;

--
-- TOC entry 654 (class 1259 OID 2006816)
-- Name: printprms; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.printprms (
    iview character varying(30) NOT NULL,
    prms character varying(250)
);


ALTER TABLE agilespacefresh.printprms OWNER TO agilespace;

--
-- TOC entry 655 (class 1259 OID 2006819)
-- Name: printprops; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.printprops (
    name character varying(25) NOT NULL,
    caption character varying(25),
    blobno numeric(3,0) NOT NULL,
    props text,
    updatedon character varying(25),
    createdon character varying(25),
    importedon character varying(25),
    createdby character varying(25),
    updatedby character varying(25),
    importedby character varying(25),
    readonly character varying(1),
    updusername character varying(25)
);


ALTER TABLE agilespacefresh.printprops OWNER TO agilespace;

--
-- TOC entry 656 (class 1259 OID 2006824)
-- Name: prints; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.prints (
    name character varying(25) NOT NULL,
    sname character varying(25),
    template bytea,
    printdoctype character varying(20),
    caption character varying(25),
    blobno numeric(3,0) NOT NULL
);


ALTER TABLE agilespacefresh.prints OWNER TO agilespace;

--
-- TOC entry 657 (class 1259 OID 2006829)
-- Name: proje1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.proje1 (
    proje1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    projectid character varying(10),
    projectname character varying(50),
    relatedto character varying(20),
    partnercustomer character varying(20),
    projectmanager character varying(100),
    active character varying(20),
    status character varying(20)
);


ALTER TABLE agilespacefresh.proje1 OWNER TO agilespace;

--
-- TOC entry 658 (class 1259 OID 2006834)
-- Name: publishprops; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.publishprops (
    servername character varying(50),
    serverpath character varying(200),
    ftp_path character varying(200),
    ftp_port character varying(10),
    ftp_username character varying(50),
    ftp_pwd character varying(50),
    db_type character varying(10),
    db_host character varying(50),
    db_username character varying(50),
    db_pwd character varying(50),
    ftp_dir character varying(200),
    db_version character varying(20),
    uploadtype character varying(4) DEFAULT 'FTP'::character varying,
    cloudflag character varying(1) DEFAULT 'O'::character varying,
    title character varying(100),
    descr text,
    dtldescr text,
    userid character varying(255),
    appid character varying(20),
    masterdataapiurl character varying(255),
    publishappapiurl character varying(255)
);


ALTER TABLE agilespacefresh.publishprops OWNER TO agilespace;

--
-- TOC entry 659 (class 1259 OID 2006841)
-- Name: recvpkts; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.recvpkts (
    pktdate character varying(30),
    fromsite numeric(5,0),
    recdon character varying(30),
    transid character varying(5),
    pktid character varying(50),
    recordid numeric(15,0),
    mstatus character varying(300),
    status character varying(1000),
    smode character varying(1)
);


ALTER TABLE agilespacefresh.recvpkts OWNER TO agilespace;

--
-- TOC entry 660 (class 1259 OID 2006846)
-- Name: reference; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.reference (
    referenceid numeric(16,0) NOT NULL,
    tconfigurationid numeric(16,0),
    referencerow integer,
    ref_struct character varying(50),
    ref_transid character varying(10),
    master_field character varying(50),
    source_field character varying(50),
    ref_idcol character varying(10),
    dcondition character varying(300)
);


ALTER TABLE agilespacefresh.reference OWNER TO agilespace;

--
-- TOC entry 661 (class 1259 OID 2006849)
-- Name: result; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.result (
    "?column?" text
);


ALTER TABLE agilespacefresh.result OWNER TO agilespace;

--
-- TOC entry 662 (class 1259 OID 2006854)
-- Name: retun1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.retun1 (
    retun1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskname character varying(799),
    assigneddate date,
    taskid character varying(200),
    ecd date,
    duedate date,
    taskdescription text,
    status character varying(50),
    axpfile_attach character varying(800),
    axpfilepath_attach character varying(500),
    remarks character varying(5000),
    assignby character varying(500),
    returnto character varying(100),
    assignto character varying(100),
    returnby character varying(50),
    ctrnotification character varying(10),
    returnedon date,
    returntime character varying(10)
);


ALTER TABLE agilespacefresh.retun1 OWNER TO agilespace;

--
-- TOC entry 663 (class 1259 OID 2006859)
-- Name: searchcols; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.searchcols (
    searchcolsid numeric(16,0) NOT NULL,
    tconfigurationid numeric(16,0),
    searchcolsrow integer,
    searchflds character varying(20),
    acondition character varying(50)
);


ALTER TABLE agilespacefresh.searchcols OWNER TO agilespace;

--
-- TOC entry 664 (class 1259 OID 2006862)
-- Name: searchdef; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.searchdef (
    transid character varying(50) NOT NULL,
    username character varying(30) NOT NULL,
    props text,
    rolename character varying(50),
    userlevel numeric(2,0),
    smode character varying(10)
);


ALTER TABLE agilespacefresh.searchdef OWNER TO agilespace;

--
-- TOC entry 665 (class 1259 OID 2006867)
-- Name: sect2; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.sect2 (
    sect2id numeric(16,0) NOT NULL,
    htmlsectionsid numeric(16,0)
);


ALTER TABLE agilespacefresh.sect2 OWNER TO agilespace;

--
-- TOC entry 666 (class 1259 OID 2006870)
-- Name: sect4; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.sect4 (
    sect4id numeric(16,0) NOT NULL,
    htmlsectionsid numeric(16,0),
    sect4row numeric(32,0),
    filename character varying(50),
    filetype character varying(10)
);


ALTER TABLE agilespacefresh.sect4 OWNER TO agilespace;

--
-- TOC entry 667 (class 1259 OID 2006873)
-- Name: sendmsg; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.sendmsg (
    sendmsgid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    issubmit character varying(1),
    mtype character varying(50),
    docid character varying(10),
    currdate date,
    template character varying(100),
    keytemplate numeric(16,0),
    msgsubject character varying(500),
    msgcontent character varying(2000),
    smsmsg character varying(500)
);


ALTER TABLE agilespacefresh.sendmsg OWNER TO agilespace;

--
-- TOC entry 668 (class 1259 OID 2006878)
-- Name: sendpkts; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.sendpkts (
    pktdate character varying(30),
    tosite numeric(5,0),
    transid character varying(5),
    username character varying(50),
    action character varying(1),
    totransid character varying(5),
    pktid character varying(50),
    recordid numeric(15,0),
    senton character varying(30),
    smode character varying(1),
    msenton character varying(30),
    mstatus character varying(7),
    status character varying(7),
    pktpriority numeric(2,0) DEFAULT 99
);


ALTER TABLE agilespacefresh.sendpkts OWNER TO agilespace;

--
-- TOC entry 669 (class 1259 OID 2006882)
-- Name: sequence; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.sequence (
    sequenceid numeric(18,0) NOT NULL,
    prefix character varying(30),
    transtype character varying(5),
    fieldname character varying(20),
    activesequence character(1),
    description character varying(50),
    lastno numeric(15,0),
    corderby numeric,
    optionname character varying(50),
    prefixfield character varying(30),
    noofdigits numeric(2,0)
);


ALTER TABLE agilespacefresh.sequence OWNER TO agilespace;

--
-- TOC entry 670 (class 1259 OID 2006887)
-- Name: status; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.status (
    statusvalue character varying(200)
);


ALTER TABLE agilespacefresh.status OWNER TO agilespace;

--
-- TOC entry 671 (class 1259 OID 2006890)
-- Name: structchanges; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.structchanges (
    transid character varying(5),
    username character varying(30),
    changedon timestamp without time zone,
    sqltext character varying(3000)
);


ALTER TABLE agilespacefresh.structchanges OWNER TO agilespace;

--
-- TOC entry 672 (class 1259 OID 2006895)
-- Name: structlock; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.structlock (
    sname character varying(20) NOT NULL,
    cno character varying(4),
    lockedon character varying(25)
);


ALTER TABLE agilespacefresh.structlock OWNER TO agilespace;

--
-- TOC entry 673 (class 1259 OID 2006898)
-- Name: task2; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.task2 (
    task2id numeric(16,0) NOT NULL,
    task1id numeric(16,0),
    task2row integer,
    traineename character varying(50),
    traineetype character varying(100),
    email character varying(1000)
);


ALTER TABLE agilespacefresh.task2 OWNER TO agilespace;

--
-- TOC entry 674 (class 1259 OID 2006903)
-- Name: task_moreinfo; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.task_moreinfo (
    task_moreinfoid numeric(16,0) NOT NULL,
    taskf_hdrid numeric(16,0),
    relatedto character varying(50),
    schemaname character varying(50),
    instancename character varying(50),
    versionno character varying(10),
    patchno character varying(10),
    workstop character varying(20),
    iscritical character varying(20),
    servicename character varying(50)
);


ALTER TABLE agilespacefresh.task_moreinfo OWNER TO agilespace;

--
-- TOC entry 675 (class 1259 OID 2006906)
-- Name: task_nw; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.task_nw (
    task_nwid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    task_id character varying(20),
    taskdate date,
    taskgrp character varying(50),
    taskname character varying(50),
    relatedto character varying(200),
    versionno character varying(10),
    patchno character varying(20),
    instancename character varying(30),
    schemaname character varying(50),
    workissue character varying(20),
    iscritical character varying(20),
    serviceneed character varying(200),
    assignto character varying(20),
    expectedcompletiondate date,
    description text,
    axpfile_attach character varying(50),
    axpfilepath_attach character varying(50),
    workassigned character varying(50),
    dtraineetype character varying(100),
    assignedby character varying(50),
    tasktype character varying(20),
    tasksubgroup character varying(20)
);


ALTER TABLE agilespacefresh.task_nw OWNER TO agilespace;

--
-- TOC entry 676 (class 1259 OID 2006911)
-- Name: taskaccept_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskaccept_hdr (
    taskaccept_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskname character varying(20),
    taskdate date,
    expectedcompetiondate date,
    assignby character varying(50),
    duedate date,
    assignto character varying(20),
    acceptedon date,
    pusername character varying(50),
    axmember character varying(50),
    ctr character varying(10),
    assignedto character varying(50),
    action character varying(100),
    status character varying(50),
    ongoingtask character varying(20),
    description text,
    note text,
    ctraccept character varying(50),
    ctracceptstart character varying(50),
    acceptstarttime character varying(50),
    ctrhold character varying(50),
    assigningreason character varying(50),
    reassignedtime character varying(20)
);


ALTER TABLE agilespacefresh.taskaccept_hdr OWNER TO agilespace;

--
-- TOC entry 677 (class 1259 OID 2006916)
-- Name: taskaccepthdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskaccepthdr (
    taskaccepthdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskname character varying(800),
    assigneddate date,
    expectedcompletiondate character varying(50),
    assignby character varying(50),
    assignto character varying(500),
    action character varying(20),
    duedate date,
    assignedto character varying(50),
    acceptedon date,
    acceptedby character varying(50),
    axmember character varying(50),
    ctr character varying(10),
    status character varying(50),
    dupcheck character varying(20),
    description text,
    note text,
    ctraccept character varying(10),
    ctracceptstart character varying(10),
    reassigningreason character varying(50),
    reassignedtime character varying(20),
    starttime character varying(20),
    ongoingtask character varying(50),
    ctrnotification character varying(10),
    taskid character varying(200),
    ctrhold character varying(50),
    edate date,
    axpfile_attach character varying(800),
    axpfilepath_attach character varying(499),
    acceptstart character varying(80),
    acccepttime character varying(10),
    tagpeople character varying(201),
    emailto character varying(500)
);


ALTER TABLE agilespacefresh.taskaccepthdr OWNER TO agilespace;

--
-- TOC entry 678 (class 1259 OID 2006921)
-- Name: taskamendhistory; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskamendhistory (
    taskamendhistoryid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskid character varying(20),
    amendfield character varying(500),
    taskname character varying(500),
    taskdescription text,
    ecd date,
    axpfile_upload character varying(500),
    axpfile_attach character varying(800),
    axpfilepath_attach character varying(800),
    taskn character varying(500),
    taskd text,
    expectedcompletion date,
    duedate date,
    status character varying(50),
    axpfilepath_upload character varying(499),
    amendfieldcnd character varying(50),
    updatetaskname character varying(10),
    updatetaskd character varying(10),
    updateduedate character varying(50)
);


ALTER TABLE agilespacefresh.taskamendhistory OWNER TO agilespace;

--
-- TOC entry 679 (class 1259 OID 2006926)
-- Name: taskassign_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskassign_hdr (
    taskassign_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskid character varying(200),
    taskname character varying(800),
    taskdate date,
    expectedcompetiondate date,
    assignby character varying(50),
    description text,
    duedate date,
    acceptedon date,
    assignto character varying(200),
    status character varying(50),
    axmember character varying(50),
    reassignedby character varying(50),
    reasonforassigning character varying(500),
    assignedtime character varying(20),
    reassigneddate date,
    ctr character varying(50),
    assignedto character varying(500),
    ctrnotification character varying(10),
    category character varying(100),
    note character varying(600),
    requeststatus character varying(20),
    rejectreason character varying(200),
    closecontrol character varying(10),
    closedate date,
    closetime character varying(10),
    closedby character varying(50),
    axpfile_attach character varying(800),
    axpfilepath_attach character varying(500)
);


ALTER TABLE agilespacefresh.taskassign_hdr OWNER TO agilespace;

--
-- TOC entry 680 (class 1259 OID 2006931)
-- Name: taskbreak_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskbreak_hdr (
    taskbreak_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskid numeric(16,0),
    taskname character varying(20),
    breaktime character varying(100),
    status character varying(50),
    breakstartdate date,
    pusername character varying(50),
    assignto character varying(50),
    assignedby character varying(50),
    taskdescription text,
    taskassigneddate date,
    expectedcompletiondate date,
    duedate date
);


ALTER TABLE agilespacefresh.taskbreak_hdr OWNER TO agilespace;

--
-- TOC entry 681 (class 1259 OID 2006936)
-- Name: taskddc1_image; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskddc1_image (
    recordid numeric(16,0),
    img bytea,
    blobno numeric(3,0),
    filename character varying(100)
);


ALTER TABLE agilespacefresh.taskddc1_image OWNER TO agilespace;

--
-- TOC entry 682 (class 1259 OID 2006941)
-- Name: taskdetails; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskdetails (
    taskdetailsid bigint,
    usern character varying(50),
    taskid character varying(30),
    taskdate date,
    taskname character varying(100),
    rtf_imputbox text,
    partner character varying(100),
    customer character varying(100),
    project character varying(150),
    assignto character varying(100),
    assignedby character varying(50),
    status character varying(50),
    priority character varying(20),
    taskuser character varying(100),
    latestcomments character varying(1000),
    hoursworked numeric(7,2)
);


ALTER TABLE agilespacefresh.taskdetails OWNER TO agilespace;

--
-- TOC entry 683 (class 1259 OID 2006946)
-- Name: taskf_dtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskf_dtl (
    taskf_dtlid numeric(16,0) NOT NULL,
    taskf_hdrid numeric(16,0),
    taskf_dtlrow integer,
    employeename character varying(50),
    emailid character varying(50),
    traineetype character varying(50)
);


ALTER TABLE agilespacefresh.taskf_dtl OWNER TO agilespace;

--
-- TOC entry 684 (class 1259 OID 2006949)
-- Name: taskf_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskf_hdr (
    taskf_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    uname character varying(50),
    sequencename character varying(50),
    taskgroup character varying(50),
    tasksubgroup character varying(50),
    assigneddate date,
    expectedcompletiondate date,
    taskdescription text,
    axpfile_attach character varying(800),
    axpfilepath_attach character varying(200),
    assignby character varying(500),
    assignto character varying(800),
    dtraineetype character varying(50),
    duedate date,
    viewby character varying(50),
    reassignedto character varying(50),
    reassigneby character varying(50),
    status character varying(100),
    axmember character varying(500),
    enablec character varying(10),
    control character varying(10),
    rescheduledby character varying(50),
    rescheduleddate date,
    forwardedto character varying(50),
    forwardedby character varying(50),
    reassignedtime character varying(50),
    forwardedtime character varying(50),
    taskid character varying(30),
    ctrreadonly character varying(10),
    completiondate date,
    priority character varying(20),
    astatus character varying(50),
    fstatus character varying(50),
    subtype character varying(100),
    moreinfo character varying(2000),
    dynamicjson character varying(500),
    assignnto character varying(800),
    acceptedby character varying(50),
    startedby character varying(50),
    putonholdby character varying(50),
    completedby character varying(50),
    closedby character varying(50),
    droppedby character varying(50),
    taskname character varying(800),
    taskcategory character varying(200),
    fromdate date,
    todate date,
    city character varying(50),
    modeoftravel character varying(100),
    accomodation character varying(20),
    reimbursementamount numeric(10,0),
    datee date,
    instance character varying(200),
    schema character varying(50),
    project numeric(16,0),
    partner numeric(16,0),
    customer numeric(16,0),
    nooftrainees numeric(10,0),
    startdate date,
    "position" character varying(50),
    count numeric(10,0),
    skill character varying(200),
    demoto character varying(50),
    demodate date,
    demotime character varying(10),
    reasonforapply text,
    ctrsubmit numeric(10,0),
    slrestriction character varying(10),
    axg_qa character varying(4000),
    returnto character varying(50),
    returnby character varying(50),
    lastaction character varying(50),
    lastactionby character varying(50),
    lastactiondate date,
    lastactionreason character varying(5000),
    axpfilepath_lastaction character varying(500),
    taskcatdmy character varying(50),
    rmchk character varying(50),
    axpfile_lastaction character varying(500),
    lastactionremarks character varying(5000),
    lastactionto character varying(50),
    lastactionstatus character varying(50),
    lastactiontime character varying(10),
    component character varying(100),
    checkpartner character varying(50),
    checkp character varying(20),
    instanced character varying(40),
    sttausupdateremarks text,
    showstopper character varying(20),
    tagpeople character varying(50),
    emailto character varying(499),
    usern character varying(50),
    pwd character varying(50)
);


ALTER TABLE agilespacefresh.taskf_hdr OWNER TO agilespace;

--
-- TOC entry 685 (class 1259 OID 2006954)
-- Name: taskf_moreinfo; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskf_moreinfo (
    taskf_moreinfoid numeric(16,0) NOT NULL,
    taskf_hdrid numeric(16,0),
    relatedto character varying(50),
    schemaname character varying(50),
    instancename character varying(50),
    versionno character varying(20),
    patchno character varying(50),
    workstop character varying(20),
    iscritical character varying(20),
    servicename character varying(50),
    projectname character varying(50),
    partnername character varying(50),
    customername character varying(100),
    others character varying(50),
    moreinfo character varying(2000)
);


ALTER TABLE agilespacefresh.taskf_moreinfo OWNER TO agilespace;

--
-- TOC entry 686 (class 1259 OID 2006959)
-- Name: taskgrp_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskgrp_hdr (
    taskgrp_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    groupname character varying(50),
    uname character varying(50),
    type character varying(20),
    applicableto character varying(50),
    applicabletocnd character varying(50),
    usergroups character varying(50),
    usernames character varying(50),
    assignto character varying(50),
    assigntocnd character varying(50),
    enable character varying(20),
    ausergroups character varying(50),
    ausername character varying(50)
);


ALTER TABLE agilespacefresh.taskgrp_hdr OWNER TO agilespace;

--
-- TOC entry 687 (class 1259 OID 2006964)
-- Name: taskinformdelay_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskinformdelay_hdr (
    taskinformdelay_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    assigneddate date,
    reason character varying(500),
    ecd date,
    duedate date,
    status character varying(50),
    taskname character varying(800),
    rescheduledate date,
    assignto character varying(50),
    assignby character varying(50),
    description text,
    rescheduledtime character varying(40),
    ctrnotification character varying(50),
    taskid character varying(200),
    rescheduledby character varying(50),
    axpfile_attach character varying(800),
    axpfilepath_attach character varying(500),
    pusername character varying(50),
    rescheduledon date,
    tagpeople character varying(500),
    reportingmanager character varying(50),
    emailto character varying(50)
);


ALTER TABLE agilespacefresh.taskinformdelay_hdr OWNER TO agilespace;

--
-- TOC entry 688 (class 1259 OID 2006969)
-- Name: taskname_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.taskname_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.taskname_seq OWNER TO agilespace;

--
-- TOC entry 689 (class 1259 OID 2006970)
-- Name: taskputonhold_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskputonhold_hdr (
    taskputonhold_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskid character varying(199),
    taskname character varying(800),
    onholdstart date,
    onholdstarttime character varying(100),
    onholdend date,
    onholdendtime character varying(200),
    reason character varying(50),
    status character varying(50),
    taskid_r numeric(20,0),
    pusername character varying(50),
    taskdescription text,
    expectedcompletiondate date,
    duedate date,
    assignedby character varying(50),
    assignto character varying(200),
    taskdate date,
    ctrnotification character varying(10),
    axpfile_attach character varying(800),
    axpfilepath_attach character varying(500)
);


ALTER TABLE agilespacefresh.taskputonhold_hdr OWNER TO agilespace;

--
-- TOC entry 690 (class 1259 OID 2006975)
-- Name: taskr1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskr1 (
    taskr1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    tasktype character varying(200),
    subtype character varying(499),
    assignto character varying(100),
    assignby character varying(200),
    moreinfo character varying(200)
);


ALTER TABLE agilespacefresh.taskr1 OWNER TO agilespace;

--
-- TOC entry 691 (class 1259 OID 2006980)
-- Name: taskresume_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskresume_hdr (
    taskresume_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskid numeric(16,0),
    taskname character varying(20),
    breaktime character varying(100),
    breakendtime character varying(100),
    breakhours character varying(100),
    usernam character varying(50),
    breakendate date,
    status character varying(50),
    assignedby character varying(50),
    assignto character varying(50),
    taskdescription text,
    assigneddate date,
    duedate date,
    expectedcompletiondate date
);


ALTER TABLE agilespacefresh.taskresume_hdr OWNER TO agilespace;

--
-- TOC entry 692 (class 1259 OID 2006985)
-- Name: tasksend_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.tasksend_hdr (
    tasksend_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskid character varying(200),
    taskname character varying(800),
    taskdate date,
    comments text,
    sendto character varying,
    axmember character varying(50),
    status character varying(50),
    assignedby character varying(50),
    pusername character varying(50),
    forwardedby character varying(50),
    taskdescription text,
    expectedcompletiondate date,
    duedate date,
    ctrnotification character varying(10),
    assignto character varying(50),
    axpfile_attach character varying(800),
    axpfilepath_attach character varying(500),
    category character varying(50),
    senton date,
    senttime character varying(10),
    showstopper character varying(20),
    priority character varying(20),
    taskcategory character varying(50),
    tagpeople character varying(500),
    emailto character varying(499)
);


ALTER TABLE agilespacefresh.tasksend_hdr OWNER TO agilespace;

--
-- TOC entry 693 (class 1259 OID 2006990)
-- Name: taskstart_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskstart_hdr (
    taskstart_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskid character varying(199),
    taskname character varying(799),
    assigneddate date,
    expectedcompletiodate date,
    pusername character varying(50),
    duedate date,
    starttime character varying(30),
    taskdescription text,
    assignto character varying(500),
    assignedby character varying(50),
    startdate date,
    ongoingtask character varying(50),
    note text,
    ctr character varying(10),
    status character varying(50),
    ctrhold character varying(10),
    ctrnotification character varying(10),
    estatus character varying(50),
    currenttask character varying(500),
    ctrsubmit numeric(10,0),
    axpfile_attach character varying(800),
    axpfilepath_attach character varying(500)
);


ALTER TABLE agilespacefresh.taskstart_hdr OWNER TO agilespace;

--
-- TOC entry 694 (class 1259 OID 2006995)
-- Name: taskstatus; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskstatus (
    taskstatusid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskname character varying(800),
    status character varying(50),
    assignby character varying(50),
    assignto character varying(500),
    assigndate date,
    duedate date,
    expectedcompletiondate date,
    taskdescription text,
    startdate date,
    starttime character varying(50),
    completiondate date,
    completiontime character varying(100),
    onholdstartdate date,
    onholdstarttime character varying(50),
    onholdenddate date,
    onholdendtime character varying(50),
    onholdreason character varying(50),
    rescheduledreason character varying(500),
    rescheduleddate date,
    forwardedreason character varying(4000),
    assignedreason character varying(5000),
    reassigneddate date,
    reassignedtime character varying(50),
    dropdate date,
    droppedby character varying(50),
    dropreason character varying(5000),
    startedby character varying(50),
    completedby character varying(50),
    putonholdby character varying(50),
    rescheduledby character varying(50),
    forwardedby character varying(50),
    reassignedby character varying(50),
    rescheduledtime character varying(50),
    droptime character varying(50),
    taskid character varying(50),
    comments character varying(5000),
    forwardedto character varying(50),
    acceptedby character varying(50),
    closedate date,
    closetime character varying(30),
    closedby character varying(50),
    fromdate date,
    todate date,
    city character varying(50),
    modeoftravel character varying(50),
    accomodation character varying(50),
    reimbursementamount numeric(10,0),
    datee date,
    instance character varying(50),
    project character varying(50),
    partner character varying(50),
    customer character varying(50),
    nooftrainees numeric(10,0),
    sdate date,
    "position" character varying(50),
    countt numeric(10,0),
    skills character varying(50),
    demoto character varying(50),
    demodate date,
    demotime numeric(10,0),
    reasonforapply text,
    returnby character varying(50),
    returnto character varying(50),
    reassignedto character varying(100),
    fromuser character varying(500),
    touser character varying(50),
    actedon date,
    reason character varying(5000),
    remarks character varying(5000),
    axpfile_lastaction character varying(800),
    axpfilepath_lastaction character varying(800),
    statremarks character varying(500),
    updateddate date,
    updatetime character varying(10),
    updatedby character varying(50)
);


ALTER TABLE agilespacefresh.taskstatus OWNER TO agilespace;

--
-- TOC entry 695 (class 1259 OID 2007000)
-- Name: taskstatusupdate_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskstatusupdate_hdr (
    taskstatusupdate_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskid character varying(200),
    taskname character varying(800),
    assigneddate date,
    expectedcompletiondate date,
    assignby character varying(50),
    assignto character varying(50),
    duedate date,
    taskdescription text,
    axpfile_upload character varying(50),
    axpfilepath_upload character varying(50),
    remarks text,
    status character varying(50),
    pusername character varying(50),
    updatedon date,
    updatetime character varying(10),
    lastactionby character varying(50),
    lastactionto character varying(50),
    checkp character varying(50),
    checkt character varying(50),
    tagpeople character varying(500),
    emailto character varying(50)
);


ALTER TABLE agilespacefresh.taskstatusupdate_hdr OWNER TO agilespace;

--
-- TOC entry 696 (class 1259 OID 2007005)
-- Name: tasksubgrp_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.tasksubgrp_hdr (
    tasksubgrp_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskgrp numeric(16,0),
    tasksubgroup character varying(50),
    taskgroup character varying(200),
    uname character varying(50),
    type character varying(20),
    applicableto character varying(50),
    applicabletocnd character varying(50),
    assignto character varying(50),
    assigntocnd character varying(50),
    enable character varying(100),
    usergroups character varying(50),
    usernames character varying(50),
    ausergroups character varying(50),
    ausername character varying(50)
);


ALTER TABLE agilespacefresh.tasksubgrp_hdr OWNER TO agilespace;

--
-- TOC entry 697 (class 1259 OID 2007010)
-- Name: tasktype; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.tasktype (
    tasktypeid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    type character varying(50),
    owner character varying(200),
    applicableto character varying(100),
    assignto character varying(100),
    enable character varying(20),
    usergroups character varying(500),
    applicabletocnd character varying(50),
    assigntocnd character varying(50),
    ausergroups character varying(200),
    ausername character varying(800),
    usernames character varying(200),
    uname character varying(50),
    subtype character varying(500),
    userroles character varying(200),
    selectiongroup character varying(20),
    result character varying(700),
    ctr character varying(50)
);


ALTER TABLE agilespacefresh.tasktype OWNER TO agilespace;

--
-- TOC entry 698 (class 1259 OID 2007015)
-- Name: tasktype_more; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.tasktype_more (
    tasktype_moreid numeric(16,0) NOT NULL,
    tasktypeid numeric(16,0),
    tasktype_morerow integer,
    name character varying(50),
    datatype character varying(20),
    fieldtype character varying(20),
    mandatory character varying(20),
    drodownval character varying(50)
);


ALTER TABLE agilespacefresh.tasktype_more OWNER TO agilespace;

--
-- TOC entry 699 (class 1259 OID 2007018)
-- Name: tasktype_mst; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.tasktype_mst (
    tasktype_mstid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    tasktype character varying(500)
);


ALTER TABLE agilespacefresh.tasktype_mst OWNER TO agilespace;

--
-- TOC entry 700 (class 1259 OID 2007023)
-- Name: taskusers; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.taskusers (
    taskid character varying(50),
    usern character varying(50)
);


ALTER TABLE agilespacefresh.taskusers OWNER TO agilespace;

--
-- TOC entry 701 (class 1259 OID 2007026)
-- Name: tblofflntableconfigmst; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.tblofflntableconfigmst (
    tblofflntableconfigmstid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    tstructid character varying(30),
    tablenme character varying(60),
    fillsql text,
    istactive character varying(1)
);


ALTER TABLE agilespacefresh.tblofflntableconfigmst OWNER TO agilespace;

--
-- TOC entry 702 (class 1259 OID 2007031)
-- Name: tconfiguration; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.tconfiguration (
    tconfigurationid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    structname character varying(50),
    structtransid character varying(20),
    configname1 character varying(10),
    configname2 character varying(10),
    configname3 character varying(10),
    configname4 character varying(15),
    cntval character varying(10),
    cv_searchflds character varying(200),
    cv_groupbuttons character varying(200),
    getallhtml character varying(200),
    cv_htmlprints character varying(200),
    getallref character varying(1000),
    getallreff character varying(1000),
    cv_masterflds character varying(1000)
);


ALTER TABLE agilespacefresh.tconfiguration OWNER TO agilespace;

--
-- TOC entry 703 (class 1259 OID 2007036)
-- Name: templates; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.templates (
    templatesid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    type character varying(10),
    names character varying(100),
    iviewid character varying(10),
    elements character varying(100),
    cvalue text,
    dupchk character varying(500)
);


ALTER TABLE agilespacefresh.templates OWNER TO agilespace;

--
-- TOC entry 704 (class 1259 OID 2007041)
-- Name: tempt1_tempt1id_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.tempt1_tempt1id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.tempt1_tempt1id_seq OWNER TO agilespace;

--
-- TOC entry 705 (class 1259 OID 2007042)
-- Name: test11; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.test11 (
    test11id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    tid character varying(20),
    name character varying(50),
    status character varying(20),
    viewby character varying(50),
    seqname character varying(50),
    checkk character varying(50),
    getvaluee character varying(50)
);


ALTER TABLE agilespacefresh.test11 OWNER TO agilespace;

--
-- TOC entry 706 (class 1259 OID 2007047)
-- Name: timesheet_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.timesheet_hdr (
    timesheet_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    tdate date,
    period character varying(30),
    fromdt date,
    todate date,
    totalhours character varying,
    entrydate character varying(100),
    dupcheck character varying(50),
    entrtmadeon date,
    totalhr character varying(999),
    uname character varying(50),
    ctr character varying(10),
    edate date,
    thrs numeric(10,2),
    tmins numeric(10,2),
    lastworkingday date,
    lwd character varying(50)
);


ALTER TABLE agilespacefresh.timesheet_hdr OWNER TO agilespace;

--
-- TOC entry 707 (class 1259 OID 2007052)
-- Name: timesheet_with_status; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.timesheet_with_status AS
 SELECT u.pusername AS username,
    CURRENT_DATE AS today,
    max((th.entrydate)::date) AS last_entry,
        CASE
            WHEN ((EXTRACT(dow FROM CURRENT_DATE) >= (1)::numeric) AND (EXTRACT(dow FROM CURRENT_DATE) <= (5)::numeric) AND ((max((th.entrydate)::date) IS NULL) OR (max((th.entrydate)::date) < CURRENT_DATE))) THEN 'T'::text
            ELSE 'F'::text
        END AS timesheet_status
   FROM (agilespacefresh.axusers u
     LEFT JOIN agilespacefresh.timesheet_hdr th ON (((th.username)::text = (u.pusername)::text)))
  GROUP BY u.pusername;


ALTER TABLE agilespacefresh.timesheet_with_status OWNER TO agilespace;

--
-- TOC entry 708 (class 1259 OID 2007057)
-- Name: timeshett_dtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.timeshett_dtl (
    timeshett_dtlid numeric(16,0) NOT NULL,
    timesheet_hdrid numeric(16,0),
    timeshett_dtlrow integer,
    taskname character varying(800),
    taskdescription character varying(4000),
    timetaken character varying(50),
    totalhours numeric(10,2),
    timet numeric(10,6),
    timetake character varying(10),
    taskcategory character varying(50),
    tasktype character varying(200),
    taskid character varying(2000),
    isvalidtask character varying(10),
    hrs numeric(10,0),
    mins numeric(10,0),
    taskidc character varying(50),
    subtype character varying(50)
);


ALTER TABLE agilespacefresh.timeshett_dtl OWNER TO agilespace;

--
-- TOC entry 709 (class 1259 OID 2007062)
-- Name: trare1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.trare1 (
    trare1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    docid character varying(20),
    employeename character varying(50),
    dateofapply date,
    requestto character varying(20),
    details text,
    fromdate date,
    todate date,
    modeoftravel character varying(20),
    city character varying(50),
    amountt numeric(10,2),
    accomodationrequired character varying(20),
    axpfile_upload character varying(500),
    axpfilepath_upload character varying(500),
    request character varying(20)
);


ALTER TABLE agilespacefresh.trare1 OWNER TO agilespace;

--
-- TOC entry 710 (class 1259 OID 2007067)
-- Name: tstruct_mst_details; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.tstruct_mst_details (
    tstruct_mst_detailsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    mastertransid character varying(10),
    sourcetransid character varying(10),
    sourcename character varying(100),
    soucecaption character varying(150),
    sourcetype character varying(20),
    sourcedetails character varying(400),
    sourcerules character varying(200),
    sleveno numeric(10,0),
    sordno numeric(10,0),
    dcid numeric(15,0),
    fsordno numeric(10,0),
    moe character varying(30),
    dcname character varying(10),
    fnum numeric(10,2),
    fldordno numeric(10,0),
    trackchanges character varying(100),
    trackchangesmadeby character varying(100),
    selectedusers character varying(1000),
    selectedfields character varying(1000)
);


ALTER TABLE agilespacefresh.tstruct_mst_details OWNER TO agilespace;

--
-- TOC entry 711 (class 1259 OID 2007072)
-- Name: tstructscripts; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.tstructscripts (
    username character varying(50) NOT NULL,
    createdon timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    createdby character varying(50),
    modifiedon timestamp without time zone,
    modifiedby character varying(50),
    stransid character varying(5),
    control_type character(1),
    event character varying(50),
    type character varying(100),
    name character varying(100),
    caption character varying(200),
    script text
);


ALTER TABLE agilespacefresh.tstructscripts OWNER TO agilespace;

--
-- TOC entry 712 (class 1259 OID 2007078)
-- Name: tthy1; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.tthy1 (
    tthy1id numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    taskid character varying(20),
    fld1 character varying(50),
    users text
);


ALTER TABLE agilespacefresh.tthy1 OWNER TO agilespace;

--
-- TOC entry 713 (class 1259 OID 2007083)
-- Name: usagedtl; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.usagedtl (
    executeddate date,
    code character varying(20),
    title character varying(50),
    cnt numeric(18,0)
);


ALTER TABLE agilespacefresh.usagedtl OWNER TO agilespace;

--
-- TOC entry 714 (class 1259 OID 2007086)
-- Name: user_status; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.user_status (
    username text NOT NULL,
    status_date date NOT NULL,
    timesheet_missing character(1) DEFAULT 'F'::bpchar
);


ALTER TABLE agilespacefresh.user_status OWNER TO agilespace;

--
-- TOC entry 715 (class 1259 OID 2007092)
-- Name: usergroupings; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.usergroupings (
    username character varying(100),
    groupname character varying(100),
    groupvalue character varying(100)
);


ALTER TABLE agilespacefresh.usergroupings OWNER TO agilespace;

--
-- TOC entry 716 (class 1259 OID 2007095)
-- Name: usergroupmaster; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.usergroupmaster (
    groupname character varying(100)
);


ALTER TABLE agilespacefresh.usergroupmaster OWNER TO agilespace;

--
-- TOC entry 717 (class 1259 OID 2007098)
-- Name: users_branchlocations; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.users_branchlocations (
    users_branchlocationsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    users_branchlocationname character varying(254),
    isactive character varying(20)
);


ALTER TABLE agilespacefresh.users_branchlocations OWNER TO agilespace;

--
-- TOC entry 718 (class 1259 OID 2007103)
-- Name: users_group_master; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.users_group_master (
    users_group_masterid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    users_group_name character varying(254),
    users_group_description character varying(254),
    isactive character varying(1)
);


ALTER TABLE agilespacefresh.users_group_master OWNER TO agilespace;

--
-- TOC entry 719 (class 1259 OID 2007108)
-- Name: users_logincontrols; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.users_logincontrols (
    users_logincontrolsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    document_date date,
    changed_by character varying(500),
    user_name numeric(16,0),
    axp_dcstate character varying(100),
    present_isactive character varying(1),
    isactive character varying(1),
    effective_date date,
    change_parameter character varying(50),
    pconsolidated_userroles character varying(2000),
    consolidated_userroles character varying(1000),
    plogin_name character varying(100),
    login_name character varying(254),
    pmobile_number character varying(20),
    user_mobilenumber numeric(15,0),
    puser_email character varying(50),
    user_email character varying(50),
    present_branchlocation character varying(1000),
    team_leader character varying(254),
    users_branchlocationname numeric(16,0),
    present_reportingmanager character varying(500),
    primary_reporting_manager character varying(254),
    present_teamleader character varying(254),
    present_accesstoalldata character varying(1),
    access_alldata character varying(1),
    present_accessteamsdata character varying(1),
    access_teamsdata character varying(1),
    present_accesstosubordinates character varying(1),
    access_subordinatesdata character varying(1),
    present_accessofficelocation character varying(1),
    access_officelocation character varying(1),
    new_password character varying(15),
    ppassword character varying(50),
    pconsolidated_adminaccess character varying(2000),
    consolidated_adminaccess character varying(2000),
    pconsolidated_usergroups character varying(2000),
    consolidated_usergroups character varying(2000),
    pconsolidated_actors character varying(2000),
    consolidated_actors character varying(2000)
);


ALTER TABLE agilespacefresh.users_logincontrols OWNER TO agilespace;

--
-- TOC entry 720 (class 1259 OID 2007113)
-- Name: users_logincontrolsroles; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.users_logincontrolsroles (
    users_logincontrolsrolesid numeric(16,0) NOT NULL,
    users_logincontrolsid numeric(16,0),
    users_logincontrolsrolesrow integer,
    users_rolesid numeric(15,0),
    add_remove_roles character varying(6),
    user_roles_name character varying(10),
    effective_from date,
    effective_to date,
    user_name_onroles character varying(254),
    users_logindetailsid numeric(15,0),
    axusersid numeric(15,0)
);


ALTER TABLE agilespacefresh.users_logincontrolsroles OWNER TO agilespace;

--
-- TOC entry 721 (class 1259 OID 2007116)
-- Name: users_logindetails; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.users_logindetails (
    users_logindetailsid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    user_name character varying(50),
    login_name character varying(254),
    user_email character varying(100),
    user_mobilenumber numeric(12,0),
    consolidated_adminaccess character varying(500),
    consolidated_usergroups character varying(500),
    access_configstudio character varying(1),
    access_developerstudio character varying(1),
    access_exportdata character varying(1),
    access_importdata character varying(1),
    primary_reporting_manager character varying(50),
    users_branchlocationname numeric(16,0),
    team_leader character varying(50),
    isactive character varying(1),
    skip_level_manager character varying(50),
    access_alldata character varying(1),
    access_teamsdata character varying(1),
    access_subordinatesdata character varying(1),
    consolidated_accessusergroups character varying(500),
    consolidated_user_roles character varying(50),
    access_officelocation character varying(1),
    consolidated_actors character varying(1000)
);


ALTER TABLE agilespacefresh.users_logindetails OWNER TO agilespace;

--
-- TOC entry 722 (class 1259 OID 2007121)
-- Name: users_roles; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.users_roles (
    users_rolesid numeric(16,0) NOT NULL,
    users_logindetailsid numeric(16,0),
    users_rolesrow integer,
    users_role_name character varying(50),
    effective_from date,
    effective_to date,
    user_name_onroles character varying(50)
);


ALTER TABLE agilespacefresh.users_roles OWNER TO agilespace;

--
-- TOC entry 723 (class 1259 OID 2007124)
-- Name: users_roles_master; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.users_roles_master (
    users_roles_masterid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    users_role_name character varying(10),
    users_responsibilities text,
    isactive character varying(1)
);


ALTER TABLE agilespacefresh.users_roles_master OWNER TO agilespace;

--
-- TOC entry 724 (class 1259 OID 2007129)
-- Name: usersequence; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.usersequence (
    transtype character varying(5),
    fieldname character varying(20),
    uname character varying(30),
    prefix character varying(30)
);


ALTER TABLE agilespacefresh.usersequence OWNER TO agilespace;

--
-- TOC entry 725 (class 1259 OID 2007132)
-- Name: ut_timetaken; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.ut_timetaken (
    executed_date date,
    object_type character varying(10),
    service_name character varying(100),
    object_name character varying(100),
    tot_count numeric(10,0),
    count_8s numeric(10,0),
    count_30s numeric(10,0),
    count_90s numeric(10,0),
    min_time numeric(10,2),
    max_time numeric(10,2),
    avg_time numeric(10,2)
);


ALTER TABLE agilespacefresh.ut_timetaken OWNER TO agilespace;

--
-- TOC entry 726 (class 1259 OID 2007135)
-- Name: v_fillgrid; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.v_fillgrid AS
 SELECT a.stransid,
    a.name,
    a.caption,
    a.sql_editor_sql,
    a.targetdc,
        CASE
            WHEN ((a.multiselect)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS multiselect,
        CASE
            WHEN ((a.autoshow)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS autoshow,
    a.sourcedc,
        CASE
            WHEN ((a.vvalidate)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS vvalidate,
        CASE
            WHEN ((a.executeonsave)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS executeonsave,
        CASE
            WHEN ((a.firmbind)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS firmbind,
    a.selecton,
    a.footerstring,
    a.exp_editor_validateexpression AS validateexpression,
    a.addrows,
    a.columnproperty,
    a.purpose,
    string_agg((((((b.sourcefield)::text || ','::text) || (b.sourcecaption)::text) || ','::text) || (b.targetfield)::text), '$'::text ORDER BY 1::integer) AS mappingdetails,
    a.grpfield AS groupfield,
    a.dcname,
        CASE
            WHEN ((a.autoselectallrows)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS autoselectallrows
   FROM agilespacefresh.axpdef_fillgrid a,
    agilespacefresh.axpdef_fillgriddtl b
  WHERE (a.axpdef_fillgridid = b.axpdef_fillgridid)
  GROUP BY a.name, a.caption, a.sql_editor_sql, a.targetdc, a.multiselect, a.autoshow, a.vvalidate, a.executeonsave, a.firmbind, a.sourcedc, a.selecton, a.footerstring, a.exp_editor_validateexpression, a.addrows, a.columnproperty, a.purpose, a.stransid, a.grpfield, a.dcname, a.autoselectallrows;


ALTER TABLE agilespacefresh.v_fillgrid OWNER TO agilespace;

--
-- TOC entry 727 (class 1259 OID 2007140)
-- Name: v_genmap; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.v_genmap AS
 SELECT a.stransid,
    a.name,
    a.caption,
    a.dcname,
    a.targettstruct,
    a.basedondc,
    a.controlfieldname,
    a.schemaoftarget,
    a.onpost,
    a.purpose,
        CASE
            WHEN ((a.active)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS active,
        CASE
            WHEN ((a.onapprove)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS onapprove,
        CASE
            WHEN ((a.onreject)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS onreject,
    string_agg((((((((((((b.sourcefrom)::text || ','::text) || (COALESCE(b.source, ''::character varying))::text) || ','::text) || (b.fsource)::text) || ','::text) || (b.sourcedcasgrid)::text) || ','::text) || (b.targetfield)::text) || ','::text) || b.targetrow), '$'::text ORDER BY 1::integer) AS mapping,
    ((c.rtargetrow || ','::text) || (c.rowcontrolfield)::text) AS rowcontrol,
    a.targettrasid,
    a.groupfield,
    concat(c.rtargetrow, ',', c.rowcontrolfield) AS jjj
   FROM ((agilespacefresh.axpdef_genmap a
     LEFT JOIN agilespacefresh.axpdef_genmapdtl b ON ((a.axpdef_genmapid = b.axpdef_genmapid)))
     LEFT JOIN agilespacefresh.axpdef_genmaprowctrl c ON ((a.axpdef_genmapid = c.axpdef_genmapid)))
  GROUP BY a.name, a.caption, a.dcname, a.targettstruct, a.basedondc, a.stransid, a.controlfieldname, a.schemaoftarget, a.onpost, a.purpose, a.active, a.onapprove, a.onreject, c.rtargetrow, c.rowcontrolfield, a.targettrasid, a.groupfield;


ALTER TABLE agilespacefresh.v_genmap OWNER TO agilespace;

--
-- TOC entry 728 (class 1259 OID 2007145)
-- Name: vw_axlanguage_export; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_axlanguage_export AS
 SELECT 'tstruct'::text AS comptype,
    0 AS ord,
    ('t'::text || (tstructs.name)::text) AS ntransid,
    'x__headtext'::character varying AS compname,
    tstructs.caption,
    0 AS ord2,
    0 AS ord3,
    'NA'::text AS hidden
   FROM agilespacefresh.tstructs
UNION ALL
 SELECT 'tstruct'::text AS comptype,
    1 AS ord,
    ('t'::text || (axpdc.tstruct)::text) AS ntransid,
    axpdc.dname AS compname,
    axpdc.caption,
    ("substring"((axpdc.dname)::text, 3))::numeric AS ord2,
    ("substring"((axpdc.dname)::text, 3))::numeric AS ord3,
    'NA'::text AS hidden
   FROM agilespacefresh.axpdc
UNION ALL
 SELECT 'tstruct'::text AS comptype,
    2 AS ord,
    ('t'::text || (axpflds.tstruct)::text) AS ntransid,
    axpflds.fname AS compname,
    axpflds.caption,
    ("substring"((axpflds.dcname)::text, 3))::numeric AS ord2,
    axpflds.ordno AS ord3,
        CASE
            WHEN ((axpflds.hidden)::text = 'TRUE'::text) THEN 'Yes'::text
            ELSE 'No'::text
        END AS hidden
   FROM agilespacefresh.axpflds
UNION ALL
 SELECT 'tstruct'::text AS comptype,
    4 AS ord,
    ('t'::text || (axtoolbar.name)::text) AS ntransid,
    axtoolbar.key AS compname,
    axtoolbar.title AS caption,
    '100'::numeric AS ord2,
    axtoolbar.ordno AS ord3,
    'NA'::text AS hidden
   FROM agilespacefresh.axtoolbar
  WHERE ((axtoolbar.stype)::text = 'tstruct'::text)
UNION ALL
 SELECT 'tstruct'::text AS comptype,
    5 AS ord,
    ('t'::text || (b.name)::text) AS ntransid,
    a.ctype AS compname,
    a.ccaption AS caption,
    a.ord AS ord2,
    0 AS ord3,
    'NA'::text AS hidden
   FROM ( SELECT 'pop1'::text AS ctype,
            'Remove'::text AS ccaption,
            10001 AS ord
        UNION ALL
         SELECT 'pop2'::text AS text,
            'Print'::text AS text,
            10002
        UNION ALL
         SELECT 'pop3'::text AS text,
            'Preview'::text AS text,
            10003
        UNION ALL
         SELECT 'pop4'::text AS text,
            'Regenerate Packets'::text AS text,
            10004
        UNION ALL
         SELECT 'pop5'::text AS text,
            'View History'::text AS text,
            10005
        UNION ALL
         SELECT 'lpop1'::text AS text,
            'Remove'::text AS text,
            10006
        UNION ALL
         SELECT 'lpop2'::text AS text,
            'Print'::text AS text,
            10007
        UNION ALL
         SELECT 'lpop3'::text AS text,
            'Preview'::text AS text,
            10008
        UNION ALL
         SELECT 'lpop4'::text AS text,
            'Params'::text AS text,
            10009
        UNION ALL
         SELECT 'lpop5'::text AS text,
            'Preview Form'::text AS text,
            10010
        UNION ALL
         SELECT 'lpop6'::text AS text,
            'Print Form'::text AS text,
            10011
        UNION ALL
         SELECT 'lpop7'::text AS text,
            'PDF'::text AS text,
            10012
        UNION ALL
         SELECT 'lpop8'::text AS text,
            'Regenerate Packets'::text AS text,
            10013
        UNION ALL
         SELECT 'lpop9'::text AS text,
            'Save As'::text AS text,
            10014
        UNION ALL
         SELECT 'lpop10'::text AS text,
            'To XL'::text AS text,
            10015
        UNION ALL
         SELECT 'lpop11'::text AS text,
            'Rapid XL Export'::text AS text,
            10016
        UNION ALL
         SELECT 'lpop12'::text AS text,
            'View Attachment'::text AS text,
            10017
        UNION ALL
         SELECT 'lblSearh'::text AS text,
            'Search For'::text AS text,
            10018
        UNION ALL
         SELECT 'lblWith'::text AS text,
            'With'::text AS text,
            10019) a,
    agilespacefresh.tstructs b
UNION ALL
 SELECT 'AxPages'::text AS comptype,
    axpages.levelno AS ord,
    NULL::character varying AS ntransid,
    axpages.name AS compname,
    axpages.caption,
    axpages.ordno AS ord2,
    0 AS ord3,
    'NA'::text AS hidden
   FROM agilespacefresh.axpages
UNION ALL
 SELECT 'iview'::text AS comptype,
    0 AS ord,
    ('i'::text || (iviews.name)::text) AS ntransid,
    'x__head'::character varying AS compname,
    iviews.caption,
    1 AS ord2,
    0 AS ord3,
    'NA'::text AS hidden
   FROM agilespacefresh.iviews
UNION ALL
 SELECT 'iview'::text AS comptype,
    1 AS ord,
    ('i'::text || (iviewmain.iname)::text) AS ntransid,
    'RH1'::character varying AS compname,
    iviewmain.header1 AS caption,
    2 AS ord2,
    0 AS ord3,
    'NA'::text AS hidden
   FROM agilespacefresh.iviewmain
UNION ALL
 SELECT 'iview'::text AS comptype,
    2 AS ord,
    ('i'::text || (iviewparams.iname)::text) AS ntransid,
    iviewparams.pname AS compname,
    iviewparams.pcaption AS caption,
    iviewparams.ordno AS ord2,
    0 AS ord3,
    'NA'::text AS hidden
   FROM agilespacefresh.iviewparams
UNION ALL
 SELECT 'iview'::text AS comptype,
    3 AS ord,
    ('i'::text || (iviewcols.iname)::text) AS ntransid,
    iviewcols.f_name AS compname,
    iviewcols.f_caption AS caption,
    iviewcols.ordno AS ord2,
    0 AS ord3,
    'NA'::text AS hidden
   FROM agilespacefresh.iviewcols
UNION ALL
 SELECT 'iview'::text AS comptype,
    4 AS ord,
    ('i'::text || (axtoolbar.name)::text) AS ntransid,
    axtoolbar.key AS compname,
    axtoolbar.title AS caption,
    axtoolbar.ordno AS ord2,
    0 AS ord3,
    'NA'::text AS hidden
   FROM agilespacefresh.axtoolbar
  WHERE ((axtoolbar.stype)::text = 'iview'::text)
UNION ALL
 SELECT 'iview'::text AS comptype,
    5 AS ord,
    ('i'::text || (b.name)::text) AS ntransid,
    a.ctype AS compname,
    a.ccaption AS caption,
    a.ord AS ord2,
    0 AS ord3,
    'NA'::text AS hidden
   FROM agilespacefresh.iviews b,
    ( SELECT 'anac1'::text AS ctype,
            'Column Heading'::text AS ccaption,
            1 AS ord
        UNION ALL
         SELECT 'anac2'::text AS text,
            'Operator'::text AS text,
            2
        UNION ALL
         SELECT 'anac3'::text AS text,
            'Value (s)'::text AS text,
            3
        UNION ALL
         SELECT 'anac4'::text AS text,
            'Relations'::text AS text,
            4
        UNION ALL
         SELECT 'pop1'::text AS text,
            'Delete'::text AS text,
            5
        UNION ALL
         SELECT 'pop2'::text AS text,
            'New'::text AS text,
            6
        UNION ALL
         SELECT 'pop3'::text AS text,
            'Params'::text AS text,
            7
        UNION ALL
         SELECT 'pop4'::text AS text,
            'Preview Form'::text AS text,
            8
        UNION ALL
         SELECT 'pop5'::text AS text,
            'Print Form'::text AS text,
            9
        UNION ALL
         SELECT 'pop6'::text AS text,
            'PDF'::text AS text,
            10
        UNION ALL
         SELECT 'pop7'::text AS text,
            'Regenerate Packets'::text AS text,
            11
        UNION ALL
         SELECT 'pop8'::text AS text,
            'Save As'::text AS text,
            12
        UNION ALL
         SELECT 'pop9'::text AS text,
            'To XL'::text AS text,
            13
        UNION ALL
         SELECT 'pop10'::text AS text,
            'Rapid XL Export'::text AS text,
            14
        UNION ALL
         SELECT 'pop11'::text AS text,
            'View Attachment'::text AS text,
            15) a;


ALTER TABLE agilespacefresh.vw_axlanguage_export OWNER TO agilespace;

--
-- TOC entry 729 (class 1259 OID 2007150)
-- Name: vw_cards_calendar_data; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_cards_calendar_data AS
 SELECT DISTINCT a.uname,
    a.axcalendarid,
    a.eventname,
    a.sendername,
    a.messagetext,
    a.eventtype,
    a.startdate,
    COALESCE(a.axptm_starttime, '00:00'::character varying) AS axptm_starttime,
    a.enddate,
        CASE
            WHEN ((COALESCE(a.axptm_endtime, '00:00'::character varying))::text = '00:00'::text) THEN '23:59'::character varying
            ELSE a.axptm_endtime
        END AS axptm_endtime,
    a.location,
    a.status,
    b.eventcolor,
        CASE
            WHEN (a.sourceid = (0)::numeric) THEN a.axcalendarid
            ELSE a.sourceid
        END AS recordid,
    a.eventstatus,
    c.eventstatcolor,
    "substring"((a.mapname)::text, 1, 5) AS mapname
   FROM ((agilespacefresh.axcalendar a
     JOIN agilespacefresh.axpdef_axcalendar_event b ON ((a.axpdef_axcalendar_eventid = b.axpdef_axcalendar_eventid)))
     LEFT JOIN ( SELECT axpdef_axcalendar_eventstatus.axpdef_axcalendar_eventid,
            axpdef_axcalendar_eventstatus.eventstatus,
            axpdef_axcalendar_eventstatus.eventstatcolor
           FROM agilespacefresh.axpdef_axcalendar_eventstatus) c ON (((a.axpdef_axcalendar_eventid = c.axpdef_axcalendar_eventid) AND ((a.eventstatus)::text = (c.eventstatus)::text))))
  WHERE (((a.cancel)::text = 'F'::text) AND (a.parenteventid > (0)::numeric))
UNION ALL
 SELECT DISTINCT a.sendername AS uname,
    a.axcalendarid,
    a.eventname,
    a.sendername,
    a.messagetext,
    a.eventtype,
    a.startdate,
    COALESCE(a.axptm_starttime, '00:00'::character varying) AS axptm_starttime,
        CASE
            WHEN (a.recurring IS NULL) THEN a.enddate
            ELSE a.startdate
        END AS enddate,
        CASE
            WHEN ((COALESCE(a.axptm_endtime, '00:00'::character varying))::text = '00:00'::text) THEN '23:59'::character varying
            ELSE a.axptm_endtime
        END AS axptm_endtime,
    a.location,
    a.status,
    b.eventcolor,
        CASE
            WHEN (a.sourceid = (0)::numeric) THEN a.axcalendarid
            ELSE a.sourceid
        END AS recordid,
    a.eventstatus,
    c.eventstatcolor,
    "substring"((a.mapname)::text, 1, 5) AS mapname
   FROM ((agilespacefresh.axcalendar a
     JOIN agilespacefresh.axpdef_axcalendar_event b ON ((a.axpdef_axcalendar_eventid = b.axpdef_axcalendar_eventid)))
     LEFT JOIN ( SELECT axpdef_axcalendar_eventstatus.axpdef_axcalendar_eventid,
            axpdef_axcalendar_eventstatus.eventstatus,
            axpdef_axcalendar_eventstatus.eventstatcolor
           FROM agilespacefresh.axpdef_axcalendar_eventstatus) c ON (((a.axpdef_axcalendar_eventid = c.axpdef_axcalendar_eventid) AND ((a.eventstatus)::text = (c.eventstatus)::text))))
  WHERE (((a.cancel)::text = 'F'::text) AND (a.parenteventid = (0)::numeric))
  ORDER BY 7;


ALTER TABLE agilespacefresh.vw_cards_calendar_data OWNER TO agilespace;

--
-- TOC entry 730 (class 1259 OID 2007155)
-- Name: vw_cards_dashboard; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_cards_dashboard AS
 SELECT a.cardtype,
    a.cardname,
    a.cardicon,
    a.charttype,
    a.pluginname,
        CASE
            WHEN (a.pluginname IS NULL) THEN a.html_editor_card
            ELSE h.htmltext
        END AS htmltext,
    a.card_datasource,
    s.sqltext,
    a.width,
    a.height,
    a.autorefresh,
    unnest(string_to_array((a.accessstringui)::text, ','::text)) AS uroles,
    a.axp_cardsid,
    h.context,
    a.orderno,
    a.chartjson
   FROM ((agilespacefresh.axp_cards a
     LEFT JOIN agilespacefresh.ax_htmlplugins h ON (((a.pluginname)::text = (h.name)::text)))
     LEFT JOIN agilespacefresh.axdirectsql s ON (((a.card_datasource)::text = (s.sqlname)::text)))
  WHERE ((a.indashboard)::text = 'T'::text);


ALTER TABLE agilespacefresh.vw_cards_dashboard OWNER TO agilespace;

--
-- TOC entry 731 (class 1259 OID 2007160)
-- Name: vw_cards_homepages; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_cards_homepages AS
 SELECT a.cardtype,
    a.cardname,
    a.cardicon,
    a.charttype,
    a.pluginname,
        CASE
            WHEN (a.pluginname IS NULL) THEN a.html_editor_card
            ELSE h.htmltext
        END AS htmltext,
    a.card_datasource,
    s.sqltext,
    a.width,
    a.height,
    a.autorefresh,
    unnest(string_to_array((a.accessstringui)::text, ','::text)) AS uroles,
    a.axp_cardsid,
    h.context,
    a.orderno,
    a.chartjson
   FROM ((agilespacefresh.axp_cards a
     LEFT JOIN agilespacefresh.ax_htmlplugins h ON (((a.pluginname)::text = (h.name)::text)))
     LEFT JOIN agilespacefresh.axdirectsql s ON (((a.card_datasource)::text = (s.sqlname)::text)))
  WHERE ((a.inhomepage)::text = 'T'::text);


ALTER TABLE agilespacefresh.vw_cards_homepages OWNER TO agilespace;

--
-- TOC entry 732 (class 1259 OID 2007165)
-- Name: vw_dc; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_dc AS
 SELECT a.stransid AS transid,
    a.name,
    a.caption,
    a.tablename,
        CASE
            WHEN ((a.asgrid)::text = 'F'::text) THEN 'FALSE'::text
            ELSE 'TRUE'::text
        END AS asgrid,
        CASE
            WHEN ((a.allowchange)::text = 'F'::text) THEN 'FALSE'::text
            ELSE 'TRUE'::text
        END AS allowchange,
        CASE
            WHEN ((a.allowempty)::text = 'F'::text) THEN 'FALSE'::text
            ELSE 'TRUE'::text
        END AS allowempty,
        CASE
            WHEN ((a.adddcrows)::text = 'F'::text) THEN 'FALSE'::text
            ELSE 'TRUE'::text
        END AS adddcrows,
        CASE
            WHEN ((a.deletedcrows)::text = 'F'::text) THEN 'FALSE'::text
            ELSE 'TRUE'::text
        END AS deletedcrows,
        CASE
            WHEN ((a.popup)::text = 'F'::text) THEN 'FALSE'::text
            ELSE 'TRUE'::text
        END AS popup,
    a.purpose
   FROM agilespacefresh.axpdef_dc a;


ALTER TABLE agilespacefresh.vw_dc OWNER TO agilespace;

--
-- TOC entry 733 (class 1259 OID 2007170)
-- Name: vw_entityrelations; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_entityrelations AS
 SELECT DISTINCT nextval('agilespacefresh.ax_entity_relseq'::regclass) AS axentityrelationsid,
    'F'::text AS cancel,
    'admin'::text AS username,
    CURRENT_TIMESTAMP AS modifiedon,
    'admin'::text AS createdby,
    CURRENT_TIMESTAMP AS createdon,
    1 AS app_level,
    1 AS app_desc,
    a.rtype,
    a.mstruct,
    a.mfield,
    m.tablename AS mtable,
    dc.tablename AS primarytable,
    a.dstruct,
    a.dfield,
    d.tablename AS dtable,
    'Dropdown'::text AS rtypeui,
    concat(mt.caption, '-(', mt.name, ')') AS mstructui,
    concat(m.caption, '-(', m.fname, ')') AS mfieldui,
    concat(dt.caption, '-(', dt.name, ')') AS dstructui,
    concat(d.caption, '-(', d.fname, ')') AS dfieldui,
    ddc.tablename AS dprimarytable
   FROM ((((((( SELECT DISTINCT axrelations.mstruct,
            axrelations.dstruct,
            axrelations.mfield,
            axrelations.dfield,
            axrelations.rtype
           FROM agilespacefresh.axrelations) a
     JOIN agilespacefresh.tstructs mt ON (((a.mstruct)::text = (mt.name)::text)))
     JOIN agilespacefresh.tstructs dt ON (((a.dstruct)::text = (dt.name)::text)))
     LEFT JOIN agilespacefresh.axpflds m ON ((((a.mstruct)::text = (m.tstruct)::text) AND ((a.mfield)::text = (m.fname)::text))))
     LEFT JOIN agilespacefresh.axpflds d ON ((((a.dstruct)::text = (d.tstruct)::text) AND ((a.dfield)::text = (d.fname)::text))))
     LEFT JOIN agilespacefresh.axpdc dc ON ((((a.mstruct)::text = (dc.tstruct)::text) AND ((dc.dname)::text = 'dc1'::text))))
     LEFT JOIN agilespacefresh.axpdc ddc ON ((((a.dstruct)::text = (ddc.tstruct)::text) AND ((ddc.dname)::text = 'dc1'::text))))
  WHERE ((a.rtype)::text = 'md'::text)
UNION ALL
 SELECT DISTINCT nextval('agilespacefresh.ax_entity_relseq'::regclass) AS axentityrelationsid,
    'F'::text AS cancel,
    'admin'::text AS username,
    CURRENT_TIMESTAMP AS modifiedon,
    'admin'::text AS createdby,
    CURRENT_TIMESTAMP AS createdon,
    1 AS app_level,
    1 AS app_desc,
    'gm'::character varying AS rtype,
    a.tstruct AS mstruct,
    concat(sd.tablename, 'id') AS mfield,
    sd.tablename AS mtable,
    pd.tablename AS primarytable,
    a.targettstr AS dstruct,
    'sourceid'::character varying AS dfield,
    td.tablename AS dtable,
    'Genmap'::text AS rtypeui,
    concat(mt.caption, '-(', mt.name, ')') AS mstructui,
    NULL::text AS mfieldui,
    concat(dt.caption, '-(', dt.name, ')') AS dstructui,
    NULL::text AS dfieldui,
    td.tablename AS dprimarytable
   FROM (((((agilespacefresh.axpgenmaps a
     JOIN agilespacefresh.tstructs mt ON (((a.tstruct)::text = (mt.name)::text)))
     JOIN agilespacefresh.tstructs dt ON (((a.targettstr)::text = (dt.name)::text)))
     LEFT JOIN agilespacefresh.axpdc sd ON ((((a.tstruct)::text = (sd.tstruct)::text) AND ((sd.dname)::text = (a.basedondc)::text))))
     LEFT JOIN agilespacefresh.axpdc td ON ((((a.targettstr)::text = (td.tstruct)::text) AND ((td.dname)::text = 'dc1'::text))))
     LEFT JOIN agilespacefresh.axpdc pd ON ((((a.tstruct)::text = (pd.tstruct)::text) AND ((pd.dname)::text = 'dc1'::text))));


ALTER TABLE agilespacefresh.vw_entityrelations OWNER TO agilespace;

--
-- TOC entry 734 (class 1259 OID 2007175)
-- Name: vw_field_informations; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_field_informations AS
 SELECT DISTINCT 1 AS sno,
    a.stransid AS transid,
    a.dcname,
    a.name,
    a.caption,
    a.datatype,
    a.customdatatype,
    a.datawidth,
    a.fdecimal,
    a.modeofentry,
    a.sql_editor_detail AS detail,
        CASE
            WHEN ((a.hidden)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS hidden,
        CASE
            WHEN ((a.allowempty)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS allowempty,
        CASE
            WHEN ((a.readonly)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS readonly,
        CASE
            WHEN ((a.setcarry)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS setcarry,
        CASE
            WHEN ((a.savevale)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS savevalue,
    a.exp_editor_expression AS expression,
    a.exp_editor_validateexpression AS validateexpression,
        CASE
            WHEN ((a.allowduplicate)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS allowduplicate,
        CASE
            WHEN ((a.onlypositive)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS onlypositive,
    NULL::text AS sourcekey,
    NULL::text AS carryfield,
    NULL::text AS displaytotal,
    NULL::text AS windowwidth,
    NULL::text AS windowheight,
    NULL::text AS sql,
        CASE
            WHEN ((a.autoselect)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS autoselect,
        CASE
            WHEN ((a.refreshonsave)::text = 'F'::text) THEN 'FALSE'::text
            ELSE 'TRUE'::text
        END AS refresh1,
    NULL::text AS listvalues,
    NULL::text AS prefix,
    NULL::text AS prefix_fields,
    NULL::text AS description,
    NULL::text AS start_no,
    'FALSE'::text AS sactive,
    NULL::text AS no_of_digits,
    'FALSE'::text AS savenormalized,
        CASE
            WHEN ((a.suggestive)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS suggestive,
    NULL::text AS sourcefield,
    NULL::text AS source_table,
    NULL::text AS datasource,
    NULL::text AS sequence,
    NULL::text AS tname,
    NULL::text AS fromtransid,
    NULL::text AS selectfield,
    NULL::text AS parent,
    NULL::text AS gui,
        CASE
            WHEN ((a.applycomma)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS applycomma,
    a.mask,
    a.pattern,
    a.pwdchar AS password_character,
    a.hint,
        CASE
            WHEN ((a.clienvalidation)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS clientvalidation,
    a.searchsql AS search_sql,
    a.displaydetails AS displaydetail,
        CASE
            WHEN ((a.tabstop)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS tabstop,
    m.sleveno,
    m.sordno,
    NULL::text AS source,
    a.purpose,
    NULL::text AS cwidth,
    NULL::text AS list,
    NULL::text AS selectfrom,
    a.fldordno,
    m.trackchanges,
    m.trackchangesmadeby,
    m.selectedusers,
    m.selectedfields,
    NULL::text AS master,
    'FALSE'::text AS combobox,
    a.componenttype,
    a.separator
   FROM agilespacefresh.coretstructhdr a,
    agilespacefresh.tstruct_mst_details m
  WHERE ((a.coretstructhdrid = m.sourceid) AND ((a.modeofentry)::text = ANY (ARRAY[('Accept'::character varying)::text, ('Calculate'::character varying)::text])))
UNION
 SELECT DISTINCT 2 AS sno,
    a.stransid AS transid,
    a.dcname,
    a.name,
    a.caption,
    a.datatype,
    a.customdatatype,
    a.datawidth,
    a.fdecimal,
    a.modeofentry,
    a.sql_editor_detail AS detail,
        CASE
            WHEN ((a.hidden)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS hidden,
        CASE
            WHEN ((a.allowempty)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS allowempty,
        CASE
            WHEN ((a.readonly)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS readonly,
        CASE
            WHEN ((a.setcarry)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS setcarry,
        CASE
            WHEN ((a.savevale)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS savevalue,
    a.exp_editor_expression AS expression,
    a.exp_editor_validateexpression AS validateexpression,
        CASE
            WHEN ((a.allowduplicate)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS allowduplicate,
        CASE
            WHEN ((a.onlypositive)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS onlypositive,
    NULL::text AS sourcekey,
    NULL::text AS carryfield,
    NULL::text AS displaytotal,
    NULL::text AS windowwidth,
    NULL::text AS windowheight,
    NULL::text AS sql,
    'FALSE'::text AS autoselect,
    'FALSE'::text AS refresh1,
    NULL::text AS listvalues,
    ag.prefix,
    ag.prefixfield AS prefix_fields,
    ag.description,
    (ag.startingno)::character(1) AS start_no,
        CASE
            WHEN ((ag.active)::text = 'F'::text) THEN 'FALSE'::text
            ELSE 'TRUE'::text
        END AS sactive,
    (ag.noofdigits)::character(1) AS no_of_digits,
    'FALSE'::text AS savenormalized,
    'FALSE'::text AS suggestive,
    NULL::text AS sourcefield,
    NULL::text AS source_table,
    NULL::text AS datasource,
    NULL::text AS sequence,
    NULL::text AS tname,
    NULL::text AS fromtransid,
    NULL::text AS selectfield,
    NULL::text AS parent,
    NULL::text AS gui,
        CASE
            WHEN ((a.applycomma)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS applycomma,
    a.mask,
    a.pattern,
    a.pwdchar AS password_character,
    a.hint,
        CASE
            WHEN ((a.clienvalidation)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS clientvalidation,
    a.searchsql AS search_sql,
    a.displaydetails AS displaydetail,
        CASE
            WHEN ((a.tabstop)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS tabstop,
    m.sleveno,
    m.sordno,
    NULL::text AS source,
    a.purpose,
    NULL::text AS cwidth,
    NULL::text AS list,
    NULL::text AS selectfrom,
    a.fldordno,
    m.trackchanges,
    m.trackchangesmadeby,
    m.selectedusers,
    m.selectedfields,
    NULL::text AS master,
    'FALSE'::text AS combobox,
    a.componenttype,
    a.separator
   FROM agilespacefresh.coretstructhdr a,
    agilespacefresh.coretstructdtlsauto ag,
    agilespacefresh.tstruct_mst_details m
  WHERE ((a.coretstructhdrid = m.sourceid) AND (a.coretstructhdrid = ag.coretstructhdrid) AND ((a.modeofentry)::text = 'AutoGenerate'::text))
UNION
 SELECT DISTINCT 3 AS sno,
    a.stransid AS transid,
    a.dcname,
    a.name,
    a.caption,
    a.datatype,
    a.customdatatype,
    a.datawidth,
    a.fdecimal,
    a.modeofentry,
    a.sql_editor_detail AS detail,
        CASE
            WHEN ((a.hidden)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS hidden,
        CASE
            WHEN ((a.allowempty)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS allowempty,
        CASE
            WHEN ((a.readonly)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS readonly,
        CASE
            WHEN ((a.setcarry)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS setcarry,
        CASE
            WHEN ((a.savevale)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS savevalue,
    a.exp_editor_expression AS expression,
    a.exp_editor_validateexpression AS validateexpression,
        CASE
            WHEN ((a.allowduplicate)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS allowduplicate,
        CASE
            WHEN ((a.onlypositive)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS onlypositive,
    NULL::text AS sourcekey,
    NULL::text AS carryfield,
    NULL::text AS displaytotal,
    NULL::text AS windowwidth,
    NULL::text AS windowheight,
    NULL::text AS sql,
    'FALSE'::text AS autoselect,
    'FALSE'::text AS refresh1,
    string_agg((l.listofvalues)::text, ','::text ORDER BY
        CASE
            WHEN ((l.listofvalues)::text = ANY (ARRAY[('YES'::character varying)::text, ('T'::character varying)::text, ('TRUE'::character varying)::text, ('yes'::character varying)::text, ('t'::character varying)::text, ('true'::character varying)::text])) THEN '01'::character varying
            WHEN ((l.listofvalues)::text = ANY (ARRAY[('NO'::character varying)::text, ('F'::character varying)::text, ('FALSE'::character varying)::text, ('no'::character varying)::text, ('f'::character varying)::text, ('false'::character varying)::text])) THEN '02'::character varying
            ELSE l.listofvalues
        END) AS listvalues,
    NULL::text AS prefix,
    NULL::text AS prefix_fields,
    NULL::text AS description,
    NULL::text AS start_no,
    'FALSE'::text AS sactive,
    NULL::text AS no_of_digits,
    'FALSE'::text AS savenormalized,
    'FALSE'::text AS suggestive,
    NULL::text AS sourcefield,
    NULL::text AS source_table,
    NULL::text AS datasource,
    NULL::text AS sequence,
    NULL::text AS tname,
    NULL::text AS fromtransid,
    NULL::text AS selectfield,
    NULL::text AS parent,
    NULL::text AS gui,
        CASE
            WHEN ((a.applycomma)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS applycomma,
    a.mask,
    a.pattern,
    a.pwdchar AS password_character,
    a.hint,
        CASE
            WHEN ((a.clienvalidation)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS clientvalidation,
    a.searchsql AS search_sql,
    a.displaydetails AS displaydetail,
        CASE
            WHEN ((a.tabstop)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS tabstop,
    m.sleveno,
    m.sordno,
    NULL::text AS source,
    a.purpose,
    NULL::text AS cwidth,
    NULL::text AS list,
    NULL::text AS selectfrom,
    a.fldordno,
    m.trackchanges,
    m.trackchangesmadeby,
    m.selectedusers,
    m.selectedfields,
    NULL::text AS master,
    'FALSE'::text AS combobox,
    a.componenttype,
    a.separator
   FROM agilespacefresh.coretstructhdr a,
    agilespacefresh.coretstructdtls l,
    agilespacefresh.tstruct_mst_details m
  WHERE ((a.coretstructhdrid = m.sourceid) AND (a.coretstructhdrid = l.coretstructhdrid) AND ((a.modeofentry)::text = 'Select From List'::text))
  GROUP BY a.stransid, m.sordno, a.dcname, a.name, a.caption, a.datatype, a.customdatatype, a.datawidth, a.fdecimal, a.modeofentry, a.sql_editor_detail, a.hidden, a.allowempty, a.allowduplicate, a.readonly, a.exp_editor_expression, a.exp_editor_validateexpression, a.setcarry, a.savevale, a.onlypositive, a.applycomma, a.mask, a.pattern, a.hint, a.pwdchar, a.clienvalidation, a.searchsql, a.displaydetails, a.tabstop, m.sleveno, a.purpose, a.fldordno, m.trackchanges, m.trackchangesmadeby, m.selectedusers, m.selectedfields, a.componenttype, a.separator
UNION
 SELECT DISTINCT 4 AS sno,
    a.stransid AS transid,
    a.dcname,
    a.name,
    a.caption,
    a.datatype,
    a.customdatatype,
    a.datawidth,
    a.fdecimal,
    a.modeofentry,
    a.sql_editor_detail AS detail,
        CASE
            WHEN ((a.hidden)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS hidden,
        CASE
            WHEN ((a.allowempty)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS allowempty,
        CASE
            WHEN ((a.readonly)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS readonly,
        CASE
            WHEN ((a.setcarry)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS setcarry,
        CASE
            WHEN ((a.savevale)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS savevalue,
    a.exp_editor_expression AS expression,
    a.exp_editor_validateexpression AS validateexpression,
        CASE
            WHEN ((a.allowduplicate)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS allowduplicate,
        CASE
            WHEN ((a.onlypositive)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS onlypositive,
    'TRUE'::text AS sourcekey,
    NULL::text AS carryfield,
    NULL::text AS displaytotal,
    (a.windowwidth_form)::character(1) AS windowwidth,
    (a.windowheight_form)::character(1) AS windowheight,
    a.sql_editor_sqltextform AS sql,
        CASE
            WHEN ((a.autoselect_form)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS autoselect,
        CASE
            WHEN ((a.refreshonsave_form)::text = 'F'::text) THEN 'FALSE'::text
            ELSE 'TRUE'::text
        END AS refresh1,
    NULL::text AS listvalues,
    NULL::text AS prefix,
    NULL::text AS prefix_fields,
    NULL::text AS description,
    NULL::text AS start_no,
    'FALSE'::text AS sactive,
    NULL::text AS no_of_digits,
        CASE
            WHEN ((a.savenormalized_form)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS savenormalized,
    'FALSE'::text AS suggestive,
    NULL::text AS sourcefield,
    a.tname AS source_table,
    a.datasource_form AS datasource,
    NULL::text AS sequence,
    NULL::text AS tname,
    a.fromtransid,
    a.selectfield,
    NULL::text AS parent,
    NULL::text AS gui,
        CASE
            WHEN ((a.applycomma)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS applycomma,
    a.mask,
    a.pattern,
    a.pwdchar AS password_character,
    a.hint,
        CASE
            WHEN ((a.clienvalidation)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS clientvalidation,
    a.searchsql AS search_sql,
    a.displaydetails AS displaydetail,
        CASE
            WHEN ((a.tabstop)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS tabstop,
    m.sleveno,
    m.sordno,
    NULL::text AS source,
    a.purpose,
    NULL::text AS cwidth,
    NULL::text AS list,
    NULL::text AS selectfrom,
    a.fldordno,
    m.trackchanges,
    m.trackchangesmadeby,
    m.selectedusers,
    m.selectedfields,
    NULL::text AS master,
        CASE
            WHEN ((a.combobox_form)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS combobox,
    a.componenttype,
    a.separator
   FROM agilespacefresh.coretstructhdr a,
    agilespacefresh.tstruct_mst_details m
  WHERE ((a.coretstructhdrid = m.sourceid) AND ((a.modeofentry)::text = 'Select From Form'::text))
UNION
 SELECT DISTINCT 5 AS sno,
    a.stransid AS transid,
    a.dcname,
    a.name,
    a.caption,
    a.datatype,
    a.customdatatype,
    a.datawidth,
    a.fdecimal,
    a.modeofentry,
    a.sql_editor_detail AS detail,
        CASE
            WHEN ((a.hidden)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS hidden,
        CASE
            WHEN ((a.allowempty)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS allowempty,
        CASE
            WHEN ((a.readonly)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS readonly,
        CASE
            WHEN ((a.setcarry)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS setcarry,
        CASE
            WHEN ((a.savevale)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS savevalue,
    a.exp_editor_expression AS expression,
    a.exp_editor_validateexpression AS validateexpression,
        CASE
            WHEN ((a.allowduplicate)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS allowduplicate,
        CASE
            WHEN ((a.onlypositive)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS onlypositive,
        CASE
            WHEN ((a.savenormalized)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS sourcekey,
    NULL::text AS carryfield,
    NULL::text AS displaytotal,
    (a.windowwidth)::character(1) AS windowwidth,
    (a.windowheight)::character(1) AS windowheight,
    a.sql_editor_test AS sql,
        CASE
            WHEN ((a.autoselect_sql)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS autoselect,
        CASE
            WHEN ((a.refreshonsav)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS refresh1,
    NULL::text AS listvalues,
    NULL::text AS prefix,
    NULL::text AS prefix_fields,
    NULL::text AS description,
    NULL::text AS start_no,
    'FALSE'::text AS sactive,
    NULL::text AS no_of_digits,
        CASE
            WHEN ((a.savenormalized)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS savenormalized,
    'FALSE'::text AS suggestive,
    a.sourcefield,
    a.sourcetable AS source_table,
    a.datasource,
    NULL::text AS sequence,
    NULL::text AS tname,
    NULL::text AS fromtransid,
    NULL::text AS selectfield,
    NULL::text AS parent,
    NULL::text AS gui,
        CASE
            WHEN ((a.applycomma)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS applycomma,
    a.mask,
    a.pattern,
    a.pwdchar AS password_character,
    a.hint,
        CASE
            WHEN ((a.clienvalidation)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS clientvalidation,
    a.searchsql AS search_sql,
    a.displaydetails AS displaydetail,
        CASE
            WHEN ((a.tabstop)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS tabstop,
    m.sleveno,
    m.sordno,
    NULL::text AS source,
    a.purpose,
    NULL::text AS cwidth,
    NULL::text AS list,
    a.selectform_ AS selectfrom,
    a.fldordno,
    m.trackchanges,
    m.trackchangesmadeby,
    m.selectedusers,
    m.selectedfields,
    NULL::text AS master,
        CASE
            WHEN ((a.combobox_sql)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS combobox,
    a.componenttype,
    a.separator
   FROM agilespacefresh.coretstructhdr a,
    agilespacefresh.tstruct_mst_details m
  WHERE ((a.coretstructhdrid = m.sourceid) AND ((a.modeofentry)::text = 'Select From Sql'::text))
UNION
 SELECT 6 AS sno,
    a.stransid AS transid,
    a.dcname,
    a.name,
    a.caption,
    a.datatype,
    a.customdatatype,
    a.datawidth,
    a.fdecimal,
    a.modeofentry,
    a.sql_editor_detail AS detail,
        CASE
            WHEN ((a.hidden)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS hidden,
        CASE
            WHEN ((a.allowempty)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS allowempty,
        CASE
            WHEN ((a.readonly)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS readonly,
        CASE
            WHEN ((a.setcarry)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS setcarry,
        CASE
            WHEN ((a.savevale)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS savevalue,
    a.exp_editor_expression AS expression,
    a.exp_editor_validateexpression AS validateexpression,
        CASE
            WHEN ((a.allowduplicate)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS allowduplicate,
        CASE
            WHEN ((a.onlypositive)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS onlypositive,
    NULL::text AS sourcekey,
    NULL::text AS carryfield,
    NULL::text AS displaytotal,
    NULL::text AS windowwidth,
    NULL::text AS windowheight,
    NULL::text AS sql,
    'FALSE'::text AS autoselect,
    'FALSE'::text AS refresh1,
    NULL::text AS listvalues,
    NULL::text AS prefix,
    NULL::text AS prefix_fields,
    NULL::text AS description,
    NULL::text AS start_no,
    'FALSE'::text AS sactive,
    NULL::text AS no_of_digits,
    'FALSE'::text AS savenormalized,
        CASE
            WHEN ((a.suggestive_fill)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS suggestive,
    NULL::text AS sourcefield,
    NULL::text AS source_table,
    NULL::text AS datasource,
    NULL::text AS sequence,
    NULL::text AS tname,
    NULL::text AS fromtransid,
    NULL::text AS selectfield,
    NULL::text AS parent,
    NULL::text AS gui,
        CASE
            WHEN ((a.applycomma)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS applycomma,
    a.mask,
    a.pattern,
    a.pwdchar AS password_character,
    a.hint,
        CASE
            WHEN ((a.clienvalidation)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS clientvalidation,
    a.searchsql AS search_sql,
    a.displaydetails AS displaydetail,
        CASE
            WHEN ((a.tabstop)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS tabstop,
    m.sleveno,
    m.sordno,
    a.source,
    a.purpose,
    NULL::text AS cwidth,
    NULL::text AS list,
    NULL::text AS selectfrom,
    a.fldordno,
    m.trackchanges,
    m.trackchangesmadeby,
    m.selectedusers,
    m.selectedfields,
    a.master,
    'FALSE'::text AS combobox,
    a.componenttype,
    a.separator
   FROM agilespacefresh.coretstructhdr a,
    agilespacefresh.tstruct_mst_details m
  WHERE ((a.coretstructhdrid = m.sourceid) AND ((a.modeofentry)::text = 'Fill'::text));


ALTER TABLE agilespacefresh.vw_field_informations OWNER TO agilespace;

--
-- TOC entry 735 (class 1259 OID 2007180)
-- Name: vw_mdmap; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_mdmap AS
 SELECT a.stransid,
    a.name,
    a.caption,
        CASE
            WHEN ((a.extended)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS extended,
    a.mastertransaction,
    a.masterfield,
    a.mastersearchfield,
    a.detailsearchfield,
    a.mastertable,
    a.updatetype,
    a.controlfield,
        CASE
            WHEN ((a.append)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS append,
        CASE
            WHEN ((a.initondel)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS initondel,
    a.maptext,
    a.detailfield,
        CASE
            WHEN ((a.onapprove)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS onapprove,
        CASE
            WHEN ((a.onreject)::text = 'T'::text) THEN 'TRUE'::text
            ELSE 'FALSE'::text
        END AS onreject,
    a.purpose,
    a.dcname,
    a.ctdc,
    a.ctmd
   FROM agilespacefresh.axpdef_mdmap a
  WHERE (a.ctdc IS NOT NULL)
  ORDER BY a.name;


ALTER TABLE agilespacefresh.vw_mdmap OWNER TO agilespace;

--
-- TOC entry 736 (class 1259 OID 2007185)
-- Name: vw_pegv2_activetasks; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_pegv2_activetasks AS
 SELECT DISTINCT a.touser,
    a.processname,
    a.taskname,
    a.taskid,
    a.tasktype,
    a.eventdatetime AS edatetime,
    to_char(to_timestamp((a.eventdatetime)::text, 'YYYYMMDDHH24MISSSSS'::text), 'dd/mm/yyyy hh24:mi:ss'::text) AS eventdatetime,
    a.fromuser,
    a.fromrole,
    a.displayicon,
    a.displaytitle,
    a.displaymcontent,
    a.displaycontent,
    a.displaybuttons,
    a.keyfield,
    a.keyvalue,
    a.transid,
    a.priorindex,
    a.indexno,
    a.subindexno,
    a.approvereasons,
    a.defapptext,
    a.returnreasons,
    a.defrettext,
    a.rejectreasons,
    a.defregtext,
    aa.recordid,
    a.approvalcomments,
    a.rejectcomments,
    a.returncomments,
    'PEG'::text AS rectype,
    'NA'::text AS msgtype,
    a.returnable,
    a.initiator,
    a.initiator_approval,
    a.displaysubtitle,
    p.amendment,
    a.allowsend,
    a.allowsendflg,
    b.cmsg_appcheck,
    b.cmsg_return,
    b.cmsg_reject,
    b.showbuttons,
    NULL::text AS hlink,
    NULL::text AS hlink_transid,
    NULL::text AS hlink_params
   FROM (((agilespacefresh.axactivetasks a
     JOIN agilespacefresh.axprocessdefv2 b ON ((((a.processname)::text = (b.processname)::text) AND ((a.taskname)::text = (b.taskname)::text))))
     JOIN agilespacefresh.axpdef_peg_processmaster p ON (((a.processname)::text = (p.caption)::text)))
     LEFT JOIN agilespacefresh.axactivetasks aa ON ((((a.processname)::text = (aa.processname)::text) AND ((a.keyvalue)::text = (aa.keyvalue)::text) AND ((a.transid)::text = (aa.transid)::text) AND ((aa.tasktype)::text = 'Make'::text) AND (aa.recordid IS NOT NULL))))
  WHERE ((NOT (EXISTS ( SELECT b_1.taskid
           FROM agilespacefresh.axactivetaskstatus b_1
          WHERE ((a.taskid)::text = (b_1.taskid)::text)))) AND ((a.removeflg)::text = 'F'::text))
UNION ALL
 SELECT axactivemessages.touser,
    axactivemessages.processname,
    axactivemessages.taskname,
    axactivemessages.taskid,
    axactivemessages.tasktype,
    axactivemessages.eventdatetime AS edatetime,
    to_char(to_timestamp((axactivemessages.eventdatetime)::text, 'YYYYMMDDHH24MISSSSS'::text), 'dd/mm/yyyy hh24:mi:ss'::text) AS eventdatetime,
    axactivemessages.fromuser,
    NULL::character varying AS fromrole,
    axactivemessages.displayicon,
    axactivemessages.displaytitle,
    NULL::text AS displaymcontent,
    axactivemessages.displaycontent,
    NULL::character varying AS displaybuttons,
    axactivemessages.keyfield,
    axactivemessages.keyvalue,
    axactivemessages.transid,
    0 AS priorindex,
    axactivemessages.indexno,
    0 AS subindexno,
    NULL::character varying AS approvereasons,
    NULL::character varying AS defapptext,
    NULL::character varying AS returnreasons,
    NULL::character varying AS defrettext,
    NULL::character varying AS rejectreasons,
    NULL::character varying AS defregtext,
    0 AS recordid,
    NULL::character varying AS approvalcomments,
    NULL::character varying AS rejectcomments,
    NULL::character varying AS returncomments,
    'MSG'::text AS rectype,
    axactivemessages.msgtype,
    'F'::character varying AS returnable,
    NULL::character varying AS initiator,
    NULL::character varying AS initiator_approval,
    NULL::character varying AS displaysubtitle,
    p.amendment,
    'F'::character varying AS allowsend,
    'F'::character varying AS allowsendflg,
    NULL::text AS cmsg_appcheck,
    NULL::text AS cmsg_return,
    NULL::text AS cmsg_reject,
    NULL::character varying AS showbuttons,
    axactivemessages.hlink,
    axactivemessages.hlink_transid,
    axactivemessages.hlink_params
   FROM (agilespacefresh.axactivemessages
     LEFT JOIN agilespacefresh.axpdef_peg_processmaster p ON (((axactivemessages.processname)::text = (p.caption)::text)))
  WHERE (NOT (EXISTS ( SELECT b.taskid
           FROM agilespacefresh.axactivetaskstatus b
          WHERE ((axactivemessages.taskid)::text = (b.taskid)::text))));


ALTER TABLE agilespacefresh.vw_pegv2_activetasks OWNER TO agilespace;

--
-- TOC entry 737 (class 1259 OID 2007190)
-- Name: vw_pegv2_alltasks; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_pegv2_alltasks AS
 SELECT DISTINCT a.touser,
    a.processname,
    a.taskname,
    a.taskid,
    a.tasktype,
    a.eventdatetime AS edatetime,
    to_char(to_timestamp((a.eventdatetime)::text, 'YYYYMMDDHH24MISSSSS'::text), 'dd/mm/yyyy hh24:mi:ss'::text) AS eventdatetime,
    a.fromuser,
    a.fromrole,
    a.displayicon,
    a.displaytitle,
    a.displaymcontent,
    a.displaycontent,
    a.displaybuttons,
    a.keyfield,
    a.keyvalue,
    a.transid,
    a.priorindex,
    a.indexno,
    a.subindexno,
    a.approvereasons,
    a.defapptext,
    a.returnreasons,
    a.defrettext,
    a.rejectreasons,
    a.defregtext,
    aa.recordid,
    a.approvalcomments,
    a.rejectcomments,
    a.returncomments,
    'PEG'::text AS rectype,
    'NA'::text AS msgtype,
    a.returnable,
    a.initiator,
    a.initiator_approval,
    a.displaysubtitle,
    p.amendment,
    a.allowsend,
    a.allowsendflg,
    b.cmsg_appcheck,
    b.cmsg_return,
    b.cmsg_reject,
    b.showbuttons,
    NULL::text AS hlink,
    NULL::text AS hlink_transid,
    NULL::text AS hlink_params,
    NULL::text AS taskstatus,
    NULL::text AS statusreason,
    NULL::text AS statustext,
    NULL::text AS cancelremarks,
    NULL::text AS cancelledby,
    NULL::text AS cancelledon,
    NULL::text AS cancel,
    NULL::text AS username,
    'Active'::text AS cstatus
   FROM (((agilespacefresh.axactivetasks a
     JOIN agilespacefresh.axprocessdefv2 b ON ((((a.processname)::text = (b.processname)::text) AND ((a.taskname)::text = (b.taskname)::text))))
     JOIN agilespacefresh.axpdef_peg_processmaster p ON (((a.processname)::text = (p.caption)::text)))
     LEFT JOIN agilespacefresh.axactivetasks aa ON ((((a.processname)::text = (aa.processname)::text) AND ((a.keyvalue)::text = (aa.keyvalue)::text) AND ((a.transid)::text = (aa.transid)::text) AND ((aa.tasktype)::text = 'Make'::text) AND (aa.recordid IS NOT NULL))))
  WHERE ((NOT (EXISTS ( SELECT b_1.taskid
           FROM agilespacefresh.axactivetaskstatus b_1
          WHERE ((a.taskid)::text = (b_1.taskid)::text)))) AND ((a.removeflg)::text = 'F'::text))
UNION ALL
 SELECT axactivemessages.touser,
    axactivemessages.processname,
    axactivemessages.taskname,
    axactivemessages.taskid,
    axactivemessages.tasktype,
    axactivemessages.eventdatetime AS edatetime,
    to_char(to_timestamp((axactivemessages.eventdatetime)::text, 'YYYYMMDDHH24MISSSSS'::text), 'dd/mm/yyyy hh24:mi:ss'::text) AS eventdatetime,
    axactivemessages.fromuser,
    NULL::character varying AS fromrole,
    axactivemessages.displayicon,
    axactivemessages.displaytitle,
    NULL::text AS displaymcontent,
    axactivemessages.displaycontent,
    NULL::character varying AS displaybuttons,
    axactivemessages.keyfield,
    axactivemessages.keyvalue,
    axactivemessages.transid,
    0 AS priorindex,
    axactivemessages.indexno,
    0 AS subindexno,
    NULL::character varying AS approvereasons,
    NULL::character varying AS defapptext,
    NULL::character varying AS returnreasons,
    NULL::character varying AS defrettext,
    NULL::character varying AS rejectreasons,
    NULL::character varying AS defregtext,
    0 AS recordid,
    NULL::character varying AS approvalcomments,
    NULL::character varying AS rejectcomments,
    NULL::character varying AS returncomments,
    'MSG'::text AS rectype,
    axactivemessages.msgtype,
    'F'::character varying AS returnable,
    NULL::character varying AS initiator,
    NULL::character varying AS initiator_approval,
    NULL::character varying AS displaysubtitle,
    p.amendment,
    'F'::character varying AS allowsend,
    'F'::character varying AS allowsendflg,
    NULL::text AS cmsg_appcheck,
    NULL::text AS cmsg_return,
    NULL::text AS cmsg_reject,
    NULL::character varying AS showbuttons,
    axactivemessages.hlink,
    axactivemessages.hlink_transid,
    axactivemessages.hlink_params,
    NULL::text AS taskstatus,
    NULL::text AS statusreason,
    NULL::text AS statustext,
    NULL::text AS cancelremarks,
    NULL::text AS cancelledby,
    NULL::text AS cancelledon,
    NULL::text AS cancel,
    NULL::text AS username,
    'Active'::text AS cstatus
   FROM (agilespacefresh.axactivemessages
     LEFT JOIN agilespacefresh.axpdef_peg_processmaster p ON (((axactivemessages.processname)::text = (p.caption)::text)))
  WHERE (NOT (EXISTS ( SELECT b.taskid
           FROM agilespacefresh.axactivetaskstatus b
          WHERE ((axactivemessages.taskid)::text = (b.taskid)::text))))
UNION ALL
 SELECT a.touser,
    a.processname,
    a.taskname,
    a.taskid,
    a.tasktype,
    a.eventdatetime AS edatetime,
    to_char(to_timestamp((a.eventdatetime)::text, 'YYYYMMDDHH24MISSSSS'::text), 'dd/mm/yyyy hh24:mi:ss'::text) AS eventdatetime,
    a.fromuser,
    a.fromrole,
    a.displayicon,
    a.displaytitle,
    a.displaymcontent,
    a.displaycontent,
    a.displaybuttons,
    a.keyfield,
    a.keyvalue,
    a.transid,
    a.priorindex,
    a.indexno,
    a.subindexno,
    a.approvereasons,
    a.defapptext,
    a.returnreasons,
    a.defrettext,
    a.rejectreasons,
    a.defregtext,
    a.recordid,
    a.approvalcomments,
    a.rejectcomments,
    a.returncomments,
    'PEG'::text AS rectype,
    'NA'::text AS msgtype,
    a.returnable,
    a.initiator,
    a.initiator_approval,
    a.displaysubtitle,
    NULL::character varying AS amendment,
    a.allowsend,
    a.allowsendflg,
    NULL::text AS cmsg_appcheck,
    NULL::text AS cmsg_return,
    NULL::text AS cmsg_reject,
    NULL::character varying AS showbuttons,
    NULL::text AS hlink,
    NULL::text AS hlink_transid,
    NULL::text AS hlink_params,
    b.taskstatus,
    b.statusreason,
    b.statustext,
    b.cancelremarks,
    b.cancelledby,
    (b.cancelledon)::character varying AS cancelledon,
    b.cancel,
    b.username,
    'Completed'::text AS cstatus
   FROM (agilespacefresh.axactivetasks a
     JOIN agilespacefresh.axactivetaskstatus b ON ((((a.taskid)::text = (b.taskid)::text) AND ((
        CASE
            WHEN (a.indexno = (1)::numeric) THEN a.fromuser
            ELSE a.touser
        END)::text = (b.username)::text))));


ALTER TABLE agilespacefresh.vw_pegv2_alltasks OWNER TO agilespace;

--
-- TOC entry 738 (class 1259 OID 2007195)
-- Name: vw_pegv2_completed_tasks; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_pegv2_completed_tasks AS
 SELECT a.processname,
    a.taskname,
    a.tasktype,
    to_char(to_timestamp((b.eventdatetime)::text, 'YYYYMMDDHH24MISSSSS'::text), 'dd/mm/yyyy hh24:mi:ss'::text) AS eventdatetime,
    a.eventdatetime AS edatetime,
    a.fromuser,
    a.displayicon,
    a.displaytitle,
    a.taskid,
    a.keyfield,
    a.keyvalue,
    a.recordid,
    a.transid,
    a.displaycontent,
    a.indexno,
    b.taskstatus,
    b.statusreason,
    b.statustext,
    b.cancelremarks,
    b.cancelledby,
    b.cancelledon,
    b.cancel,
    b.username
   FROM (agilespacefresh.axactivetasks a
     JOIN agilespacefresh.axactivetaskstatus b ON ((((a.taskid)::text = (b.taskid)::text) AND ((
        CASE
            WHEN (a.indexno = (1)::numeric) THEN a.fromuser
            ELSE a.touser
        END)::text = (b.username)::text))));


ALTER TABLE agilespacefresh.vw_pegv2_completed_tasks OWNER TO agilespace;

--
-- TOC entry 739 (class 1259 OID 2007200)
-- Name: vw_pegv2_global_cards; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_pegv2_global_cards AS
 WITH a AS (
         SELECT a_1.card,
            a_1.ctype,
            a_1.axprocessdefv2id,
            a_1.processname,
            a_1.taskname
           FROM ( SELECT "substring"(unnest(string_to_array((a_2.cards)::text, ','::text)), ("position"(unnest(string_to_array((a_2.cards)::text, ','::text)), '-('::text) + 2), abs((("position"(unnest(string_to_array((a_2.cards)::text, ','::text)), '-('::text) + 2) - length("substring"(unnest(string_to_array((a_2.cards)::text, ','::text)), 1, length(unnest(string_to_array((a_2.cards)::text, ','::text)))))))) AS card,
                    split_part(unnest(string_to_array((a_2.cards)::text, ','::text)), '-('::text, 1) AS ctype,
                    b_1.axprocessdefv2id,
                    b_1.processname,
                    b_1.taskname
                   FROM agilespacefresh.axpdef_peg_processmaster a_2,
                    agilespacefresh.axprocessdefv2 b_1
                  WHERE (((a_2.caption)::text = (b_1.processname)::text) AND ((b_1.stransid)::text <> 'pgv2c'::text))) a_1
          WHERE (a_1.ctype = 'Global'::text)
        ), b AS (
         SELECT a_1.hidecard,
            a_1.ctype,
            a_1.axprocessdefv2id,
            a_1.processname,
            a_1.taskname
           FROM ( SELECT "substring"(unnest(string_to_array((b_1.hidecards)::text, ','::text)), ("position"(unnest(string_to_array((b_1.hidecards)::text, ','::text)), '-('::text) + 2), abs((("position"(unnest(string_to_array((b_1.hidecards)::text, ','::text)), '-('::text) + 2) - length("substring"(unnest(string_to_array((b_1.hidecards)::text, ','::text)), 1, length(unnest(string_to_array((b_1.hidecards)::text, ','::text)))))))) AS hidecard,
                    split_part(unnest(string_to_array((b_1.hidecards)::text, ','::text)), '-('::text, 1) AS ctype,
                    b_1.axprocessdefv2id,
                    b_1.processname,
                    b_1.taskname
                   FROM agilespacefresh.axprocessdefv2 b_1
                  WHERE ((b_1.stransid)::text <> 'pgv2c'::text)) a_1
          WHERE (a_1.ctype = 'Global'::text)
        )
 SELECT a.axprocessdefv2id,
    a.processname,
    a.taskname,
    d.cardname,
    d.axp_cardsid AS cardsid,
    d.sql_editor_cardsql AS cardsql,
    d.cardtype,
    d.charttype,
    d.chartjson,
    'col-md-12'::text AS width,
    'Global'::text AS ctype,
    'NA'::text AS accessstring
   FROM ((a
     LEFT JOIN b ON ((((a.processname)::text = (b.processname)::text) AND ((a.taskname)::text = (b.taskname)::text) AND (a.card = b.hidecard))))
     JOIN agilespacefresh.axp_cards d ON ((a.card = (d.cardname)::text)))
  WHERE (b.hidecard IS NULL);


ALTER TABLE agilespacefresh.vw_pegv2_global_cards OWNER TO agilespace;

--
-- TOC entry 740 (class 1259 OID 2007205)
-- Name: vw_pegv2_process_cards; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_pegv2_process_cards AS
 WITH a AS (
         SELECT a_1.card,
            a_1.ctype,
            a_1.axprocessdefv2id,
            a_1.processname,
            a_1.taskname
           FROM ( SELECT "substring"(unnest(string_to_array((a_2.cards)::text, ','::text)), ("position"(unnest(string_to_array((a_2.cards)::text, ','::text)), '-('::text) + 2), abs((("position"(unnest(string_to_array((a_2.cards)::text, ','::text)), '-('::text) + 2) - length("substring"(unnest(string_to_array((a_2.cards)::text, ','::text)), 1, length(unnest(string_to_array((a_2.cards)::text, ','::text)))))))) AS card,
                    split_part(unnest(string_to_array((a_2.cards)::text, ','::text)), '-('::text, 1) AS ctype,
                    b_1.axprocessdefv2id,
                    b_1.processname,
                    b_1.taskname
                   FROM agilespacefresh.axpdef_peg_processmaster a_2,
                    agilespacefresh.axprocessdefv2 b_1
                  WHERE (((a_2.caption)::text = (b_1.processname)::text) AND ((b_1.stransid)::text <> 'pgv2c'::text))) a_1
          WHERE (a_1.ctype = 'Process'::text)
        ), b AS (
         SELECT a_1.hidecard,
            a_1.ctype,
            a_1.axprocessdefv2id,
            a_1.processname,
            a_1.taskname
           FROM ( SELECT "substring"(unnest(string_to_array((b_1.hidecards)::text, ','::text)), ("position"(unnest(string_to_array((b_1.hidecards)::text, ','::text)), '-('::text) + 2), abs((("position"(unnest(string_to_array((b_1.hidecards)::text, ','::text)), '-('::text) + 2) - length("substring"(unnest(string_to_array((b_1.hidecards)::text, ','::text)), 1, length(unnest(string_to_array((b_1.hidecards)::text, ','::text)))))))) AS hidecard,
                    split_part(unnest(string_to_array((b_1.hidecards)::text, ','::text)), '-('::text, 1) AS ctype,
                    b_1.axprocessdefv2id,
                    b_1.processname,
                    b_1.taskname
                   FROM agilespacefresh.axprocessdefv2 b_1
                  WHERE ((b_1.stransid)::text <> 'pgv2c'::text)) a_1
          WHERE (a_1.ctype = 'Process'::text)
        )
 SELECT a.axprocessdefv2id,
    a.processname,
    a.taskname,
    d.cardname,
    d.axpdef_prcardsid AS cardsid,
    d.sql_editor_cardsql AS cardsql,
    d.cardtype,
    d.charttype,
    d.chartjson,
    'col-md-12'::text AS width,
    'Process'::text AS ctype,
    'NA'::text AS accessstring
   FROM ((a
     LEFT JOIN b ON ((((a.processname)::text = (b.processname)::text) AND ((a.taskname)::text = (b.taskname)::text) AND (a.card = b.hidecard))))
     JOIN agilespacefresh.axpdef_prcards d ON ((a.card = (d.cardname)::text)))
  WHERE (b.hidecard IS NULL);


ALTER TABLE agilespacefresh.vw_pegv2_process_cards OWNER TO agilespace;

--
-- TOC entry 741 (class 1259 OID 2007210)
-- Name: vw_pegv2_processdef_cards; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_pegv2_processdef_cards AS
 WITH a AS (
         SELECT a_1.caption,
            c.taskname,
            regexp_split_to_table((a_1.cards)::text, ','::text) AS card,
            c.axprocessdefv2id
           FROM agilespacefresh.axpdef_peg_processmaster a_1,
            agilespacefresh.axprocessdefv2 c
          WHERE (a_1.axpdef_peg_processmasterid = c.axpdef_peg_processmasterid)
        ), b AS (
         SELECT axprocessdefv2.processname,
            axprocessdefv2.taskname,
            regexp_split_to_table((COALESCE(axprocessdefv2.hidecards, 'NA'::character varying))::text, ','::text) AS hidecard
           FROM agilespacefresh.axprocessdefv2
        )
 SELECT a.axprocessdefv2id,
    a.caption AS processname,
    a.taskname,
    d.cardname,
    d.axp_cardsid,
    d.sql_editor_cardsql,
    d.cardtype,
    d.chartjson,
    d.pagecaption,
    d.pagename,
    d.hcaption,
    d.htype,
    d.htransid
   FROM ((a
     LEFT JOIN b ON ((((a.caption)::text = (b.processname)::text) AND ((a.taskname)::text = (b.taskname)::text) AND (a.card = b.hidecard))))
     JOIN agilespacefresh.axp_cards d ON ((a.card = (d.cardname)::text)))
  WHERE (b.hidecard IS NULL);


ALTER TABLE agilespacefresh.vw_pegv2_processdef_cards OWNER TO agilespace;

--
-- TOC entry 742 (class 1259 OID 2007215)
-- Name: vw_pegv2_processdef_tree; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_pegv2_processdef_tree AS
 SELECT axprocessdefv2.processname,
    axprocessdefv2.taskname,
    axprocessdefv2.tasktype,
    axprocessdefv2.taskgroupname AS taskgroup,
    axprocessdefv2.active AS taskactive,
    axprocessdefv2.indexno,
    axprocessdefv2.subindexno AS subindex,
    axprocessdefv2.groupwithprior AS details,
    axprocessdefv2.transid,
    axprocessdefv2.axprocessdefv2id AS recordid,
    axprocessdefv2.displayicon,
    axprocessdefv2.groupwithprior,
    axprocessdefv2.keyfield
   FROM agilespacefresh.axprocessdefv2;


ALTER TABLE agilespacefresh.vw_pegv2_processdef_tree OWNER TO agilespace;

--
-- TOC entry 743 (class 1259 OID 2007220)
-- Name: vw_tstruct_mst_details; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_tstruct_mst_details AS
 SELECT 1 AS ord,
    s.sourcetype,
    s.mastertransid,
    s.soucecaption,
    s.sourcedetails,
    s.sourcerules,
    s.sleveno,
    s.sordno,
    s.tstruct_mst_detailsid,
    s.sourceid,
    s.sourcetransid,
    s.sourcename,
    ('t'::text || (s.sourcetransid)::text) AS ptransid,
    NULL::text AS linkurl,
    s.dcname
   FROM agilespacefresh.tstruct_mst_details s;


ALTER TABLE agilespacefresh.vw_tstruct_mst_details OWNER TO agilespace;

--
-- TOC entry 744 (class 1259 OID 2007224)
-- Name: vw_tstructs; Type: VIEW; Schema: agilespacefresh; Owner: agilespace
--

CREATE VIEW agilespacefresh.vw_tstructs AS
 SELECT a.ntransid AS transid,
    a.caption,
    a.purpose,
    a.savecontrolfield AS savecontrol,
    a.deletecontrolfield AS deletecontrol,
    a.trackchanges,
    a.attachment,
    a.listview,
    a.workflow,
    a.schema,
        CASE
            WHEN ((a.isacoretrans)::text = 'Yes'::text) THEN 'No'::text
            ELSE 'Yes'::text
        END AS isacoretrans,
    a.menuposition,
    a.menulist,
    a.selectfieldlist,
    a.selectuserlist,
    a.trackchangesmadeby,
    a.trackchangesfield,
    a.layouttype
   FROM agilespacefresh.axpdef_tstruct a;


ALTER TABLE agilespacefresh.vw_tstructs OWNER TO agilespace;

--
-- TOC entry 745 (class 1259 OID 2007229)
-- Name: workrequest_hdr; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.workrequest_hdr (
    workrequest_hdrid numeric(16,0) NOT NULL,
    cancel character varying(1),
    sourceid numeric(16,0),
    mapname character varying(20),
    username character varying(50),
    modifiedon timestamp without time zone,
    createdby character varying(50),
    createdon timestamp without time zone,
    wkid character varying(15),
    app_level numeric(3,0),
    app_desc numeric(1,0),
    app_slevel numeric(3,0),
    cancelremarks character varying(150),
    wfroles character varying(250),
    docid character varying(20),
    employeename character varying(50),
    requestedto character varying(20),
    dateofapply date,
    reasonforapply text,
    type character varying(20),
    fromdate date,
    todate date,
    axpfile_upload character varying(500),
    axpfilepath_upload character varying(500)
);


ALTER TABLE agilespacefresh.workrequest_hdr OWNER TO agilespace;

--
-- TOC entry 746 (class 1259 OID 2007234)
-- Name: your_table_name; Type: TABLE; Schema: agilespacefresh; Owner: agilespace
--

CREATE TABLE agilespacefresh.your_table_name (
    id integer NOT NULL,
    taskname text,
    type character varying(10)
);


ALTER TABLE agilespacefresh.your_table_name OWNER TO agilespace;

--
-- TOC entry 747 (class 1259 OID 2007239)
-- Name: your_table_name_id_seq; Type: SEQUENCE; Schema: agilespacefresh; Owner: agilespace
--

CREATE SEQUENCE agilespacefresh.your_table_name_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE agilespacefresh.your_table_name_id_seq OWNER TO agilespace;

--
-- TOC entry 6769 (class 0 OID 0)
-- Dependencies: 747
-- Name: your_table_name_id_seq; Type: SEQUENCE OWNED BY; Schema: agilespacefresh; Owner: agilespace
--

ALTER SEQUENCE agilespacefresh.your_table_name_id_seq OWNED BY agilespacefresh.your_table_name.id;


--
-- TOC entry 5382 (class 2604 OID 2007240)
-- Name: ax_homebuild_master homebuild_id; Type: DEFAULT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_homebuild_master ALTER COLUMN homebuild_id SET DEFAULT nextval('agilespacefresh.ax_homebuild_master_homebuild_id_seq'::regclass);


--
-- TOC entry 5390 (class 2604 OID 2007241)
-- Name: ax_homebuild_saved homebuild_id; Type: DEFAULT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_homebuild_saved ALTER COLUMN homebuild_id SET DEFAULT nextval('agilespacefresh.ax_homebuild_saved_homebuild_id_seq'::regclass);


--
-- TOC entry 5433 (class 2604 OID 2007242)
-- Name: ax_widget widget_id; Type: DEFAULT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_widget ALTER COLUMN widget_id SET DEFAULT nextval('agilespacefresh.ax_widget_widget_id_seq'::regclass);


--
-- TOC entry 5463 (class 2604 OID 2007243)
-- Name: axsms recordid; Type: DEFAULT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axsms ALTER COLUMN recordid SET DEFAULT nextval('agilespacefresh.axsms_recordid_seq'::regclass);


--
-- TOC entry 5394 (class 2604 OID 2007244)
-- Name: inbound inboundid; Type: DEFAULT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.inbound ALTER COLUMN inboundid SET DEFAULT nextval('agilespacefresh.inbound_inboundid_seq'::regclass);


--
-- TOC entry 5411 (class 2604 OID 2007245)
-- Name: outbound outboundid; Type: DEFAULT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.outbound ALTER COLUMN outboundid SET DEFAULT nextval('agilespacefresh.outbound_outboundid_seq'::regclass);


--
-- TOC entry 5472 (class 2604 OID 2007246)
-- Name: your_table_name id; Type: DEFAULT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.your_table_name ALTER COLUMN id SET DEFAULT nextval('agilespacefresh.your_table_name_id_seq'::regclass);


--
-- TOC entry 6247 (class 0 OID 2004786)
-- Dependencies: 211
-- Data for Name: a__cocompany_logo; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.a__cocompany_logo (recordid, img, blobno, ftype) FROM stdin;
\.


--
-- TOC entry 6248 (class 0 OID 2004791)
-- Dependencies: 212
-- Data for Name: a__cohistory; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.a__cohistory (recordid, modifieddate, username, fieldname, oldvalue, newvalue, rowno, delflag, modno, frameno, parentrow, tablerecid, idvalue, oldidvalue, transdeleted, newtrans, canceltrans, cancelremarks) FROM stdin;
\.


--
-- TOC entry 6249 (class 0 OID 2004796)
-- Dependencies: 213
-- Data for Name: a__naeventimg; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.a__naeventimg (recordid, img, blobno, ftype) FROM stdin;
\.


--
-- TOC entry 6250 (class 0 OID 2004801)
-- Dependencies: 214
-- Data for Name: a__ulhistory; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.a__ulhistory (recordid, modifieddate, username, fieldname, oldvalue, newvalue, rowno, delflag, modno, frameno, parentrow, tablerecid, idvalue, oldidvalue, transdeleted, newtrans, canceltrans, cancelremarks) FROM stdin;
\.


--
-- TOC entry 6251 (class 0 OID 2004806)
-- Dependencies: 215
-- Data for Name: ad_prhistory; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ad_prhistory (recordid, modifieddate, username, fieldname, oldvalue, newvalue, rowno, delflag, modno, frameno, parentrow, tablerecid, idvalue, oldidvalue, transdeleted, newtrans, canceltrans, cancelremarks) FROM stdin;
\.


--
-- TOC entry 6252 (class 0 OID 2004811)
-- Dependencies: 216
-- Data for Name: astcpattach; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.astcpattach (recordid, filename, template, blobno, recid) FROM stdin;
\.


--
-- TOC entry 6253 (class 0 OID 2004816)
-- Dependencies: 217
-- Data for Name: attendance; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.attendance (attendanceid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, empname, docid, punchdate, latitude, longitude, intime, outtime, punchin, punchout, signin_lat, signin_long, signout_lat, signout_long, userr) FROM stdin;
\.


--
-- TOC entry 6254 (class 0 OID 2004821)
-- Dependencies: 218
-- Data for Name: ax_configure_fast_prints; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_configure_fast_prints (ax_configure_fast_printsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, template_name, template_validname, form_templateui, form_template, form_caption, form_name, form_source, tstructsql, master_data_source, mssqltext, sql_text, paper_size, pheight, paper_width, report_outputformat, print_app_logo, print_app_title, print_app_subtitle, autoprint, report_title, report_title_height, rt_image_leftui, rt_image_left, rt_image_left_height, rt_image_left_width, rt_image_rightui, rt_image_right, rt_image_right_height, rt_image_right_width, page_header, page_header_height, ph_image_leftui, ph_image_left, ph_image_left_height, ph_image_left_width, ph_image_rightui, ph_image_right, ph_image_right_height, ph_image_right_width, fr_body, fr_body_height, detail_data_frame_type, detail_source, detail_data_source, detail_datasource_sql_text, detail_qry_cols, tbl_detail_band, tbl_fstyle, page_footer, page_footer_height, pf_image_leftui, pf_image_left, pf_image_left_height, pf_image_left_width, pf_image_rightui, pf_image_right, pf_image_right_height, pf_image_right_width, report_summary, report_summary_height, rs_image_leftui, rs_image_left, rs_image_left_height, rs_image_left_width, rs_image_rightui, rs_image_right, rs_image_right_height, rs_image_right_width, annx_data_src, tbl_annexure, iview_name, iviewsql, key_field, fr_parameter, detail_data_columnheadstring) FROM stdin;
\.


--
-- TOC entry 6256 (class 0 OID 2004827)
-- Dependencies: 220
-- Data for Name: ax_homebuild_master; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_homebuild_master (homebuild_id, title, widget_type, content, target, is_private, created_by, updated_by, responsibility, is_deleted, is_lock, order_by, created_on, updated_on, is_migrated) FROM stdin;
\.


--
-- TOC entry 6259 (class 0 OID 2004840)
-- Dependencies: 223
-- Data for Name: ax_homebuild_responsibility; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_homebuild_responsibility (homebuild_id, responsibility, responsibility_id) FROM stdin;
\.


--
-- TOC entry 6260 (class 0 OID 2004843)
-- Dependencies: 224
-- Data for Name: ax_homebuild_saved; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_homebuild_saved (homebuild_id, title, widget_type, content, target, is_private, created_by, updated_by, responsibility, is_deleted, is_lock, order_by, is_publish, parent_homebuild_id, created_on, updated_on, is_migrated) FROM stdin;
\.


--
-- TOC entry 6263 (class 0 OID 2004857)
-- Dependencies: 227
-- Data for Name: ax_homebuild_sd_responsibility; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_homebuild_sd_responsibility (homebuild_id, responsibility, responsibility_id) FROM stdin;
\.


--
-- TOC entry 6264 (class 0 OID 2004860)
-- Dependencies: 228
-- Data for Name: ax_hp_user_level_widget; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_hp_user_level_widget (page_id, widgets, username, is_deleted, created_on, updated_on) FROM stdin;
\.


--
-- TOC entry 6265 (class 0 OID 2004868)
-- Dependencies: 229
-- Data for Name: ax_htmlplugins; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_htmlplugins (name, htmltext, context) FROM stdin;
\.


--
-- TOC entry 6268 (class 0 OID 2004885)
-- Dependencies: 233
-- Data for Name: ax_layoutdesign; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_layoutdesign (design_id, transid, module, content, created_by, updated_by, is_deleted, is_private, created_on, updated_on, is_migrated) FROM stdin;
\.


--
-- TOC entry 6269 (class 0 OID 2004895)
-- Dependencies: 234
-- Data for Name: ax_layoutdesign_saved; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_layoutdesign_saved (design_id, transid, module, content, created_by, updated_by, is_deleted, created_on, updated_on, is_migrated, is_publish, is_private, parent_design_id, responsibility, order_by) FROM stdin;
\.


--
-- TOC entry 6272 (class 0 OID 2004908)
-- Dependencies: 237
-- Data for Name: ax_mobile_response; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_mobile_response (notification_id, user_id, response, project_id) FROM stdin;
\.


--
-- TOC entry 6273 (class 0 OID 2004913)
-- Dependencies: 238
-- Data for Name: ax_mobile_user; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_mobile_user (imei, user_id, project_id, firebase_id, groupname, active) FROM stdin;
\.


--
-- TOC entry 6274 (class 0 OID 2004918)
-- Dependencies: 239
-- Data for Name: ax_mobilenotify; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_mobilenotify (username, projectname, guid, firebase_id, imei_no, status) FROM stdin;
\.


--
-- TOC entry 6275 (class 0 OID 2004923)
-- Dependencies: 240
-- Data for Name: ax_notify; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_notify (notification_id, title, message, actions, fromuser, broadcast, status, created_by, created_on, workflow_id, project_id, purge_on_first_action, notification_sent_datetime, recordid, lno, elno) FROM stdin;
\.


--
-- TOC entry 6277 (class 0 OID 2004933)
-- Dependencies: 242
-- Data for Name: ax_notify_users; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_notify_users (notification_id, user_id, status, project_id) FROM stdin;
\.


--
-- TOC entry 6278 (class 0 OID 2004938)
-- Dependencies: 243
-- Data for Name: ax_notify_workflow; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_notify_workflow (notification_id, recordid, app_level, app_desc, created_on, workflow_id, project_id, lno, elno) FROM stdin;
\.


--
-- TOC entry 6280 (class 0 OID 2004951)
-- Dependencies: 246
-- Data for Name: ax_page_responsibility; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_page_responsibility (page_id, responsibility, responsibility_id) FROM stdin;
\.


--
-- TOC entry 6281 (class 0 OID 2004956)
-- Dependencies: 247
-- Data for Name: ax_page_saved; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_page_saved (page_id, title, type, module, template, page_menu, content, created_by, updated_by, is_deleted, created_on, updated_on, is_migrated, is_lock, is_publish, is_private, is_default, parent_page_id, responsibility, order_by, widget_groups) FROM stdin;
\.


--
-- TOC entry 6283 (class 0 OID 2004970)
-- Dependencies: 249
-- Data for Name: ax_page_sd_responsibility; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_page_sd_responsibility (page_id, responsibility, responsibility_id) FROM stdin;
\.


--
-- TOC entry 6285 (class 0 OID 2004976)
-- Dependencies: 251
-- Data for Name: ax_page_templates; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_page_templates (template_id, title, module, content, created_by, updated_by, is_deleted, created_on, updated_on) FROM stdin;
\.


--
-- TOC entry 6286 (class 0 OID 2004984)
-- Dependencies: 252
-- Data for Name: ax_pages; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_pages (page_id, title, type, module, template, page_menu, content, created_by, updated_by, is_deleted, is_private, created_on, updated_on, is_migrated, is_default, order_by, widget_groups) FROM stdin;
\.


--
-- TOC entry 6288 (class 0 OID 2004996)
-- Dependencies: 254
-- Data for Name: ax_template_fast_prints; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_template_fast_prints (ax_template_fast_printsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, docid) FROM stdin;
\.


--
-- TOC entry 6289 (class 0 OID 2005001)
-- Dependencies: 255
-- Data for Name: ax_user_settings; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_user_settings (username, ir_config, appsettings) FROM stdin;
\.


--
-- TOC entry 6290 (class 0 OID 2005006)
-- Dependencies: 256
-- Data for Name: ax_userconfigdata; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_userconfigdata (page, struct, keyname, username, value) FROM stdin;
\.


--
-- TOC entry 6291 (class 0 OID 2005011)
-- Dependencies: 257
-- Data for Name: ax_wfcomments; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_wfcomments (ax_wfcommentsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, stransid, wfid, wfrole, wfaction, wfcomments) FROM stdin;
\.


--
-- TOC entry 6293 (class 0 OID 2005017)
-- Dependencies: 259
-- Data for Name: ax_widget; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_widget (widget_id, widget_type, sub_type, title, sqltext, tabletext, attributes, created_by, created_on, updated_on, charttype, is_migrated, is_public) FROM stdin;
\.


--
-- TOC entry 6295 (class 0 OID 2005027)
-- Dependencies: 261
-- Data for Name: ax_widget_published; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_widget_published (widget_id, title, widget_type, content, target, is_private, created_by, updated_by, is_deleted, is_lock, order_by, is_publish, parent_widget_id, page_id, created_on, updated_on, is_migrated) FROM stdin;
\.


--
-- TOC entry 6296 (class 0 OID 2005039)
-- Dependencies: 262
-- Data for Name: ax_widget_responsibility; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_widget_responsibility (widget_id, responsibility, responsibility_id) FROM stdin;
\.


--
-- TOC entry 6297 (class 0 OID 2005042)
-- Dependencies: 263
-- Data for Name: ax_widget_saved; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ax_widget_saved (widget_id, title, widget_type, content, target, is_private, created_by, updated_by, is_deleted, is_lock, order_by, is_publish, parent_widget_id, page_id, created_on, updated_on, is_migrated) FROM stdin;
\.


--
-- TOC entry 6300 (class 0 OID 2005056)
-- Dependencies: 266
-- Data for Name: axaction; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axaction (actionname, structname, structtype, actnode) FROM stdin;
\.


--
-- TOC entry 6301 (class 0 OID 2005061)
-- Dependencies: 267
-- Data for Name: axactivemessages; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axactivemessages (eventdatetime, msgtype, fromuser, touser, taskid, tasktype, processname, taskname, indexno, keyfield, keyvalue, transid, displaytitle, displaycontent, effectivefrom, effectiveto, html, scripts, hide, displayicon, hlink, hlink_transid, hlink_params, requestpayload) FROM stdin;
\.


--
-- TOC entry 6302 (class 0 OID 2005066)
-- Dependencies: 268
-- Data for Name: axactivetaskdata; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axactivetaskdata (eventdatetime, taskid, transid, keyfield, keyvalue, datavalues) FROM stdin;
\.


--
-- TOC entry 6303 (class 0 OID 2005071)
-- Dependencies: 269
-- Data for Name: axactivetaskparams; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axactivetaskparams (eventdatetime, taskid, transid, keyfield, keyvalue, taskstatus, username, tasktype, taskname, processname, priorindex, indexno, subindexno, recordid, taskparams) FROM stdin;
\.


--
-- TOC entry 6304 (class 0 OID 2005076)
-- Dependencies: 270
-- Data for Name: axactivetasks; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axactivetasks (eventdatetime, taskid, processname, tasktype, taskname, taskdescription, assigntorole, transid, keyfield, execonapprove, keyvalue, transdata, fromrole, fromuser, touser, priorindex, priortaskname, corpdimension, orgdimension, department, grade, datavalue, displayicon, displaytitle, displaysubtitle, displaycontent, displaybuttons, groupfield, groupvalue, priorusername, initiator, mapfieldvalue, useridentificationfilter, useridentificationfilter_of, mapfield_group, mapfield, grouped, indexno, subindexno, processowner, assigntoflg, assigntoactor, actorfilter, recordid, processownerflg, pownerfilter, approvereasons, defapptext, returnreasons, defrettext, rejectreasons, defregtext, approvalcomments, rejectcomments, returncomments, escalation, reminder, displaymcontent, groupwithpriorindex, delegation, returnable, sendtoactor, allowsend, allowsendflg, sendtocomments, usebusinessdatelogic, initiator_approval, initonbehalf, removeflg, pownerflg, changedusr, actor_user_groups, actor_default_users, actor_data_grp, cancel, cancelledby, cancelledon, cancelremarks, action_buttons, autoapprove, isoptional, reminderstartdate, escalationstartdate, reminderjsondata, escalationjsondata) FROM stdin;
\.


--
-- TOC entry 6305 (class 0 OID 2005086)
-- Dependencies: 271
-- Data for Name: axactivetaskstatus; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axactivetaskstatus (eventdatetime, taskid, transid, keyfield, keyvalue, taskstatus, username, tasktype, taskname, processname, priorindex, indexno, subindexno, recordid, statusreason, statustext, cancelremarks, cancelledby, cancelledon, cancel) FROM stdin;
\.


--
-- TOC entry 6306 (class 0 OID 2005091)
-- Dependencies: 272
-- Data for Name: axamend; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axamend (transid, usersession, primaryrecordid, amendno, amendedby, amendedon, fieldlist, parselist, recidlist) FROM stdin;
\.


--
-- TOC entry 6307 (class 0 OID 2005096)
-- Dependencies: 273
-- Data for Name: axapijobdetails; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axapijobdetails (jobid, requestid, url, servicename, method, requeststr, params, bparams, header, responsestr, status, starttime, endtime, schjobid, sessionid, username, context, act_script_name, authstr) FROM stdin;
\.


--
-- TOC entry 6308 (class 0 OID 2005101)
-- Dependencies: 274
-- Data for Name: axappconfig; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axappconfig (ordno, rolename, username, userlevel, propname, propvalue) FROM stdin;
\.


--
-- TOC entry 6309 (class 0 OID 2005106)
-- Dependencies: 275
-- Data for Name: axattachworkflow; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axattachworkflow (wkid, transid, wf_condition, condtext, blobno, updatedon, readonly, updusername, wf_edit, wf_cancel, subtype, wf_reapproval) FROM stdin;
\.


--
-- TOC entry 6310 (class 0 OID 2005111)
-- Dependencies: 276
-- Data for Name: axaudit; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axaudit (sessionid, username, logintime, status, reason, ip, mac, other, logouttime, nologout, exeverdet) FROM stdin;
\.


--
-- TOC entry 6311 (class 0 OID 2005116)
-- Dependencies: 277
-- Data for Name: axautoprints; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axautoprints (axautoprintsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, autoprintid, form, stransid, fast_prt, fp_name, printdoc, dupchk, directprint, formula, formula_expr) FROM stdin;
\.


--
-- TOC entry 6312 (class 0 OID 2005121)
-- Dependencies: 278
-- Data for Name: axcalendar; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axcalendar (axcalendarid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, calendarevent, aftsaveflg, transid, eventname, notifiedon, sendername, uname, unameemail, messagetext, eventtype, axpdef_axcalendar_eventid, startdate, axptm_starttime, enddate, axptm_endtime, location, recurring, isrecevent, statusui, status, sqltext, parenteventid, emailalert, eventstatus, axpdef_axcalendar_eventstatusid) FROM stdin;
\.


--
-- TOC entry 6313 (class 0 OID 2005126)
-- Dependencies: 279
-- Data for Name: axcardtypemaster; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axcardtypemaster (axcardtypemasterid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, cardtype, cardcaption, cardicon, axpfile_cardimg, axpfilepath_cardimg) FROM stdin;
\.


--
-- TOC entry 6314 (class 0 OID 2005131)
-- Dependencies: 280
-- Data for Name: axconstraints; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axconstraints (axconstraintsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, constraint_name, msg, completiondate) FROM stdin;
\.


--
-- TOC entry 6315 (class 0 OID 2005136)
-- Dependencies: 281
-- Data for Name: axctx1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axctx1 (atype, axcontext) FROM stdin;
\.


--
-- TOC entry 6316 (class 0 OID 2005139)
-- Dependencies: 282
-- Data for Name: axcustomviews; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axcustomviews (name, caption, props, blobno, updatedon, createdon, importedon, createdby, updatedby, importedby, readonly, updusername, username, transid) FROM stdin;
\.


--
-- TOC entry 6317 (class 0 OID 2005144)
-- Dependencies: 283
-- Data for Name: axdef_newfield; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axdef_newfield (axdef_newfieldid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, formcaption, stransid, formtype, dcname, name, caption, flddupchk, ftype, fieldtype, datatype, width, flddecimal, dsformcaptionui, dsformcaption, dsform, dsfieldui, dsfield, dsfieldcaption, deflist, apinamemo, defsrcfieldui, defsrcfield, defsrcfieldcaption, deftable, rangeperiod, autogenprefix, autogenprefixfld, autogensno, autogenno, autogenstr, exp_editor_formula, exp_editor_valexpr, allowduplicate, allowempty, fldposition, "position", moe, source, sql_editor_psql, savenormalised, srcfield, srctable, savevalue, hidden, masterdl, sourcedl) FROM stdin;
\.


--
-- TOC entry 6318 (class 0 OID 2005149)
-- Dependencies: 284
-- Data for Name: axdelegatedtasks; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axdelegatedtasks (fromuser, sname, recordid, delegated, del_user, finalapprove, uroles) FROM stdin;
\.


--
-- TOC entry 6319 (class 0 OID 2005152)
-- Dependencies: 285
-- Data for Name: axdelegateusers; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axdelegateusers (fromuser, touser, fromdate, todate) FROM stdin;
\.


--
-- TOC entry 6320 (class 0 OID 2005155)
-- Dependencies: 286
-- Data for Name: axdirectsql; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axdirectsql (axdirectsqlid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, sqlname, ddldatatype, sqltext, paramcal, sqlparams, accessstring, groupname, sqlsrc, sqlsrccnd, sqlquerycols, cachedata, cacheinterval) FROM stdin;
\.


--
-- TOC entry 6321 (class 0 OID 2005160)
-- Dependencies: 287
-- Data for Name: axdsignconfig; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axdsignconfig (axdsignconfigid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, stransid, printdocname, docnamefield, pusername, ordno, doctype, axpmailid, mailid, mobileno, sendemail, sendsms, prolename, rolename) FROM stdin;
\.


--
-- TOC entry 6322 (class 0 OID 2005165)
-- Dependencies: 288
-- Data for Name: axdsignmail; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axdsignmail (axdsignmailid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, docid, axpmailid, docdate, mailtype, filename, subject, mailcontent, smscontent) FROM stdin;
\.


--
-- TOC entry 6324 (class 0 OID 2005171)
-- Dependencies: 290
-- Data for Name: axdsigntrans; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axdsigntrans (stransid, doctype, docdate, documentname, username, ordno, status, signedon, axpmailid, mailid, mobileno, sendmail, sendsms, mailstatus, smsstatus) FROM stdin;
\.


--
-- TOC entry 6325 (class 0 OID 2005176)
-- Dependencies: 291
-- Data for Name: axentityrelations; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axentityrelations (axentityrelationsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, rtypeui, rtype, mstructui, mstruct, primarytable, mfieldui, mfield, mtable, dstructui, dstruct, dprimarytable, dfieldui, dfield, dtable, dupchk) FROM stdin;
\.


--
-- TOC entry 6326 (class 0 OID 2005181)
-- Dependencies: 292
-- Data for Name: axerrorlog; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axerrorlog (username, eventdate, sname, actname, errormsg) FROM stdin;
\.


--
-- TOC entry 6327 (class 0 OID 2005184)
-- Dependencies: 293
-- Data for Name: axexportjobs; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axexportjobs (jobid, jobdate, taskname, datasource, owner, iviewname, tstructname, recordid, starttime, endtime, status) FROM stdin;
\.


--
-- TOC entry 6328 (class 0 OID 2005189)
-- Dependencies: 294
-- Data for Name: axexportjobsexception; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axexportjobsexception (jobid, recordid, errormsg) FROM stdin;
\.


--
-- TOC entry 6329 (class 0 OID 2005194)
-- Dependencies: 295
-- Data for Name: axfastlink; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axfastlink (transid, caption, output, efont, istemplate) FROM stdin;
\.


--
-- TOC entry 6330 (class 0 OID 2005197)
-- Dependencies: 296
-- Data for Name: axfinworkflow; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axfinworkflow (recordid, comments, updusername, app_datetime, app_level, app_desc) FROM stdin;
\.


--
-- TOC entry 6331 (class 0 OID 2005200)
-- Dependencies: 297
-- Data for Name: axformnotify; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axformnotify (axformnotifyid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, form, stransid, active, formula, formula_expr, notifyto, notifytocnd, usergroups, usernames, formfield, formfieldname, whatsapp_usernames, whatsapp_formfield, sms_usernames, sms_formfield, sms_formfieldname, whatsapp_formfieldname, notify_msg_prints, notify_msg_new, notify_msg_edit, notify_msg_cancel, notify_msg_delete, emailto, emailto_usergroups, emailto_usernames, emailto_formfield, emailto_formfieldname, emailcc, emailcc_usergroups, emailcc_usernames, emailcc_formfield, emailcc_formfieldname, emailbcc, emailbcc_usergroups, emailbcc_usernames, emailbcc_formfield, emailbcc_formfieldname, email_msg_prints, email_msg_new, email_msg_edit, email_msg_cancel, email_msg_delete, isemailreq, navigateto, pagetype, loadopen, tbl_params, tbl_paramval, tbl_navigationparam, notify_sub_new, notify_sub_edit, notify_sub_cancel, notify_sub_delete, email_msg_attachmentsui, email_msg_attachments, email_sub_new, email_sub_edit, email_sub_cancel, email_sub_delete) FROM stdin;
\.


--
-- TOC entry 6332 (class 0 OID 2005205)
-- Dependencies: 298
-- Data for Name: axfscpf_image_left; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axfscpf_image_left (recordid, img, blobno, ftype) FROM stdin;
\.


--
-- TOC entry 6333 (class 0 OID 2005210)
-- Dependencies: 299
-- Data for Name: axfscpf_image_right; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axfscpf_image_right (recordid, img, blobno, ftype) FROM stdin;
\.


--
-- TOC entry 6334 (class 0 OID 2005215)
-- Dependencies: 300
-- Data for Name: axfscph_image_left; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axfscph_image_left (recordid, img, blobno, ftype) FROM stdin;
\.


--
-- TOC entry 6335 (class 0 OID 2005220)
-- Dependencies: 301
-- Data for Name: axfscph_image_right; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axfscph_image_right (recordid, img, blobno, ftype) FROM stdin;
\.


--
-- TOC entry 6336 (class 0 OID 2005225)
-- Dependencies: 302
-- Data for Name: axfscrs_image_left; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axfscrs_image_left (recordid, img, blobno, ftype) FROM stdin;
\.


--
-- TOC entry 6337 (class 0 OID 2005230)
-- Dependencies: 303
-- Data for Name: axfscrs_image_right; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axfscrs_image_right (recordid, img, blobno, ftype) FROM stdin;
\.


--
-- TOC entry 6338 (class 0 OID 2005235)
-- Dependencies: 304
-- Data for Name: axfscrt_image_left; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axfscrt_image_left (recordid, img, blobno, ftype) FROM stdin;
\.


--
-- TOC entry 6339 (class 0 OID 2005240)
-- Dependencies: 305
-- Data for Name: axfscrt_image_right; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axfscrt_image_right (recordid, img, blobno, ftype) FROM stdin;
\.


--
-- TOC entry 6340 (class 0 OID 2005245)
-- Dependencies: 306
-- Data for Name: axglovar; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axglovar (axglovarid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, fromuserlogin, axglo_user, axp_displaytext, axglo_hide, axpimageserver, axpimagepath) FROM stdin;
\.


--
-- TOC entry 6341 (class 0 OID 2005250)
-- Dependencies: 307
-- Data for Name: axgraphcols; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axgraphcols (name, xaxiscolumn, yaxiscolumn, groupbycolumn, filtercolumn) FROM stdin;
\.


--
-- TOC entry 6342 (class 0 OID 2005253)
-- Dependencies: 308
-- Data for Name: axgraphsetting; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axgraphsetting (name, graphstyle, barstyle, barposition, bottomaxis, leftaxis, rotation, dvalue, xlabelangle, horizontallines, verticallines, showlegend, view3d, marks, legendposition, legendvalues, markstyle, piecircled, piepattern, formheight, formwidth, formtop, formleft, xaxisfsize, xaxisfname, xaxisfbold, xaxisfitallic, xaxisfunderline, xaxisfst, xaxisfcolor, xcaptionfsize, xcaptionfname, xcaptionfbold, xcaptionfitallic, xcaptionfunderline, xcaptionfst, xcaptionfcolor, yaxisfunderline, yaxisfst, yaxisfcolor, ycaptionfsize, ycaptionfname, ycaptionfbold, ycaptionfitallic, ycaptionfunderline, ycaptionfst, ycaptionfcolor, titlefsize, titlefname, titlefbold, titlefitallic, titlefunderline, titlefst, titlefcolor, legendfsize, legendfname, legendfbold, legendfitallic, legendfunderline, legendfst, legendfcolor, barcolor, linecolor, areacolor, xcaption, ycaption, title, legenddrawing, legendtextstyle, horizlinewidth, horizlinecolor, hlinestyle, vertlinewidth, vertlinecolor, vlinestyle, pierotationspeed, invertyaxis, invertxaxis, showtoolbar, showsettingbar, formborderstyle) FROM stdin;
\.


--
-- TOC entry 6343 (class 0 OID 2005258)
-- Dependencies: 309
-- Data for Name: axgrouping; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axgrouping (axgroupingid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, grpname, grpvalue, dupchk, grpparent, grpnamedb) FROM stdin;
\.


--
-- TOC entry 6344 (class 0 OID 2005263)
-- Dependencies: 310
-- Data for Name: axgroupingmst; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axgroupingmst (axgroupingmstid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, grpname, grpcaption, dc2fldprops, dc3fldprops) FROM stdin;
\.


--
-- TOC entry 6345 (class 0 OID 2005268)
-- Dependencies: 311
-- Data for Name: axgrouptstructs; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axgrouptstructs (axgrouptstructsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, formcap, ftransid) FROM stdin;
\.


--
-- TOC entry 6346 (class 0 OID 2005273)
-- Dependencies: 312
-- Data for Name: axhomeconfig; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axhomeconfig (axhomeconfigid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, pagetype, pagecaption, caption, carddesc, displayicon, stransid, pgname, grouped, groupfolder, grppageid, datasource, moreoption, disporder, active, colorcode, cardlayout, btnstyle, cardhide, paneltype, paneltypecnd, menufoldercapui, menufoldercap, menufolderptype, menufoldername, menuoptioncap, menuoptionname, menuoptionptype, dupchk, html_editor_card, cardwidth) FROM stdin;
\.


--
-- TOC entry 6347 (class 0 OID 2005278)
-- Dependencies: 313
-- Data for Name: axhomeconfigdtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axhomeconfigdtl (axhomeconfigdtlid, axhomeconfigid, axhomeconfigdtlrow, btnname, btntitle, btnaction, axpstruct, btnstransid, custompage) FROM stdin;
\.


--
-- TOC entry 6348 (class 0 OID 2005281)
-- Dependencies: 314
-- Data for Name: axiconmenu; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axiconmenu (parentpagename, iconname) FROM stdin;
\.


--
-- TOC entry 6349 (class 0 OID 2005284)
-- Dependencies: 315
-- Data for Name: aximpappping; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.aximpappping (ttransid, jobid, application, threadno, username, pingedon, status, remarks) FROM stdin;
\.


--
-- TOC entry 6350 (class 0 OID 2005289)
-- Dependencies: 316
-- Data for Name: aximpdatauploadjobs; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.aximpdatauploadjobs (jobid, ttransid, dnstructure, actname, temptablename, primaryfield, groupfield, selectscript, username, createdon, updatedon, starttime, endtime, status, remarks) FROM stdin;
\.


--
-- TOC entry 6351 (class 0 OID 2005294)
-- Dependencies: 317
-- Data for Name: aximpdef; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.aximpdef (aximpdefid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, aximpdefname, aximpform, aximptransid, aximptextqualifier, aximpmapinfile, aximpheaderrows, aximpprimayfield, aximpgroupfield, aximpfieldseperator, aximpmapfields, aximpthreadcount, aximpprocname, aximpbindtotstruct, aximpstdcolumnwidth, aximpignorefldexception, aximponlyappend, aximpprocessmode, aximpfilefromtable, aximpfieldseperatorui, aximpprimaryfield_details) FROM stdin;
\.


--
-- TOC entry 6352 (class 0 OID 2005299)
-- Dependencies: 318
-- Data for Name: aximpfailedrecords; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.aximpfailedrecords (jobid, ttransid, recordid, primaryfield, status, createdon, mapname, parenttransid, parentrecordid) FROM stdin;
\.


--
-- TOC entry 6353 (class 0 OID 2005304)
-- Dependencies: 319
-- Data for Name: aximpjobs; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.aximpjobs (jobid, sessionid, jobdate, aximpdefname, act_script_name, aximptransid, aximptextqualifier, aximpmapinfile, aximpheaderrows, aximpprimayfield, aximpgroupfield, aximpfieldseperator, aximpmapfields, aximpthreadcount, aximpprocname, aximpbindtotstruct, aximpstdcolumnwidth, aximpignorefldexception, aximponlyappend, aximpprocessmode, dbdirpath, filename, threadcount, username, status) FROM stdin;
\.


--
-- TOC entry 6354 (class 0 OID 2005309)
-- Dependencies: 320
-- Data for Name: aximportdef; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.aximportdef (actname, ttransid, transcaption, textqualifier, mapinfile, bgact, headerrows, primaryfield, groupfield, fieldseperator, mapfields, dbdirpath, filepath, threadcount, procname, bindtotstruct, stdcolumnwidth, ignorefldexception, onlyappend, transid, impprocessmode, filefromtable) FROM stdin;
\.


--
-- TOC entry 6355 (class 0 OID 2005314)
-- Dependencies: 321
-- Data for Name: aximportjobs; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.aximportjobs (jobid, jobdate, actname, ttransid, dbdirpath, filepath, filename, threadcount, ip, username, status, uname, ordseq, transid) FROM stdin;
\.


--
-- TOC entry 6356 (class 0 OID 2005319)
-- Dependencies: 322
-- Data for Name: axinqueues; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axinqueues (axinqueuesid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, axqueuename, axqueuedesc, unameui, uname, secretkey, active, defqueu) FROM stdin;
\.


--
-- TOC entry 6357 (class 0 OID 2005324)
-- Dependencies: 323
-- Data for Name: axinqueuesdata; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axinqueuesdata (createdon, axqueuename, transid, recordid, queuedata) FROM stdin;
\.


--
-- TOC entry 6358 (class 0 OID 2005330)
-- Dependencies: 324
-- Data for Name: axintelliviewdet; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axintelliviewdet (axintelliviewdetid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, repid, ivname, ax_user, companyname, reportname, filtername, filtervalues, reporttype, pusername, ppassword) FROM stdin;
\.


--
-- TOC entry 6359 (class 0 OID 2005335)
-- Dependencies: 325
-- Data for Name: axivuserconfig; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axivuserconfig (rolename, username, userlevel, reportname, paramname, propname, propvalue) FROM stdin;
\.


--
-- TOC entry 6360 (class 0 OID 2005340)
-- Dependencies: 326
-- Data for Name: axlangsource; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axlangsource (langname, fontcharset, fontname, fontsize) FROM stdin;
\.


--
-- TOC entry 6361 (class 0 OID 2005343)
-- Dependencies: 327
-- Data for Name: axlanguage; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axlanguage (lngname, sname, fontname, fontsize, compname, compcaption, comphint, dispname) FROM stdin;
\.


--
-- TOC entry 6362 (class 0 OID 2005348)
-- Dependencies: 328
-- Data for Name: axlanguage11x; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axlanguage11x (axlanguage11xid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, dispname, sname, compname, compengcap, compcaption, comphint, lngname, fontname, fontsize) FROM stdin;
\.


--
-- TOC entry 6363 (class 0 OID 2005353)
-- Dependencies: 329
-- Data for Name: axliccontrol; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axliccontrol (licid, regkey, mlicid, alicid, dlicid, llicid, lictrans, mdt, adt, blobno) FROM stdin;
\.


--
-- TOC entry 6364 (class 0 OID 2005358)
-- Dependencies: 330
-- Data for Name: axlictrans; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axlictrans (licid, lictrans) FROM stdin;
\.


--
-- TOC entry 6365 (class 0 OID 2005361)
-- Dependencies: 331
-- Data for Name: axlov; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axlov (axlovid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, group_name, value_name, dupcheck, identifier, disp_order, activeyes) FROM stdin;
\.


--
-- TOC entry 6366 (class 0 OID 2005366)
-- Dependencies: 332
-- Data for Name: axmaudit; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axmaudit (sessionid, username, logintime, status, reason, other, logouttime, nologout) FROM stdin;
\.


--
-- TOC entry 6367 (class 0 OID 2005369)
-- Dependencies: 333
-- Data for Name: axmconnections; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axmconnections (sessionid, logintime, username, usergroup, groupno, project, pageaccess, appvars, userroles, transidlist) FROM stdin;
\.


--
-- TOC entry 6368 (class 0 OID 2005374)
-- Dependencies: 334
-- Data for Name: axmeetingstatus; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axmeetingstatus (axmeetingstatusid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, meetingid, employeename, tdate, status) FROM stdin;
\.


--
-- TOC entry 6369 (class 0 OID 2005379)
-- Dependencies: 335
-- Data for Name: axmessage; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axmessage (msgid, groupid, fromwhom, towhom, fromstatus, status, upddatetime, readstatus, message, towhoms) FROM stdin;
\.


--
-- TOC entry 6370 (class 0 OID 2005384)
-- Dependencies: 336
-- Data for Name: axmessage_archive; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axmessage_archive (msgid, groupid, fromwhom, towhom, fromstatus, tostatus, upddatetime, readstatus, message, towhoms) FROM stdin;
\.


--
-- TOC entry 6371 (class 0 OID 2005389)
-- Dependencies: 337
-- Data for Name: axmmenodb_icon; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axmmenodb_icon (recordid, img, blobno, ftype) FROM stdin;
\.


--
-- TOC entry 6372 (class 0 OID 2005394)
-- Dependencies: 338
-- Data for Name: axmmetadatamaster; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axmmetadatamaster (structtype, structname, structcaption, structstatus, ordno, createdon, updatedon, createdby, updatedby) FROM stdin;
\.


--
-- TOC entry 6373 (class 0 OID 2005399)
-- Dependencies: 339
-- Data for Name: axmpagedtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axmpagedtl (axmpagedtlid, axmpagehdrid, axmpagedtlrow, sno, fld_name, fld_caption, data_type, data_width, fld_decimal, modeofentry, s_name, hidden) FROM stdin;
\.


--
-- TOC entry 6374 (class 0 OID 2005402)
-- Dependencies: 340
-- Data for Name: axmpagehdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axmpagehdr (axmpagehdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, structtype, struct_type, menu_caption, sname, html_view, button_param, mapview, forcecamera, geo, pageorder) FROM stdin;
\.


--
-- TOC entry 6375 (class 0 OID 2005407)
-- Dependencies: 341
-- Data for Name: axmtranscontrol; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axmtranscontrol (username, transid, sessionid, recordid, loadedon) FROM stdin;
\.


--
-- TOC entry 6376 (class 0 OID 2005410)
-- Dependencies: 342
-- Data for Name: axmwslog; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axmwslog (sessionid, username, calledon, structname, recordid, timetaken, dbtimetaken, servicename, serviceresult, callfinished, db_conntime) FROM stdin;
\.


--
-- TOC entry 6377 (class 0 OID 2005413)
-- Dependencies: 343
-- Data for Name: axmyviews; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axmyviews (viewname, iname, username, params, filtercond, sortcond, hiddencols) FROM stdin;
\.


--
-- TOC entry 6378 (class 0 OID 2005418)
-- Dependencies: 344
-- Data for Name: axnotificationdef; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axnotificationdef (axnotificationdefid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, name, processname, taskname, indexno, ttransid, notifyto, fromfieldcaption, fromfieldname, roles, actors, taskparams, tasklist, emailaddr, enableemail, enablesms, enablewhatsapp, enablemobilenotify, emailsubject, emailattachment, emailtext, notifyto_cc, fromfieldcaption_cc, roles_cc, fromfieldname_cc, actors_cc, taskparams_cc, tasklist_cc, emailaddr_cc, notifyto_bcc, fromfieldcaption_bcc, fromfieldname_bcc, roles_bcc, actors_bcc, taskparams_bcc, tasklist_bcc, emailaddr_bcc, smstext, whatsapptext, mobile_title, mobile_content) FROM stdin;
\.


--
-- TOC entry 6379 (class 0 OID 2005423)
-- Dependencies: 345
-- Data for Name: axonlineconvlog; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axonlineconvlog (script, errmsg, tablename) FROM stdin;
\.


--
-- TOC entry 6380 (class 0 OID 2005428)
-- Dependencies: 346
-- Data for Name: axoutqueues; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axoutqueues (axoutqueuesid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, axqueuename, axqueuedesc, active, axqueuesource, formcaption, stransid, allfields, formfields, fieldnames, printforms, fastprints, fileattachments, datasource, onformdata, ds_forms, ds_stransid, ds_interval, primaryfieldui, primaryfield) FROM stdin;
\.


--
-- TOC entry 6381 (class 0 OID 2005433)
-- Dependencies: 347
-- Data for Name: axoutqueuesdata; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axoutqueuesdata (createdon, axqueuename, transid, recordid, queuedata) FROM stdin;
\.


--
-- TOC entry 6382 (class 0 OID 2005439)
-- Dependencies: 348
-- Data for Name: axoutqueuesmst; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axoutqueuesmst (axoutqueuesmstid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, axqueuename, axqueuedesc, defqueue) FROM stdin;
\.


--
-- TOC entry 6383 (class 0 OID 2005444)
-- Dependencies: 349
-- Data for Name: axp__appmgrms1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp__appmgrms1 (axp__appmgrms1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles) FROM stdin;
\.


--
-- TOC entry 6384 (class 0 OID 2005449)
-- Dependencies: 350
-- Data for Name: axp__appmgrss1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp__appmgrss1 (axp__appmgrss1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles) FROM stdin;
\.


--
-- TOC entry 6385 (class 0 OID 2005454)
-- Dependencies: 351
-- Data for Name: axp_appmgr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_appmgr (tstruct, fname) FROM stdin;
\.


--
-- TOC entry 6386 (class 0 OID 2005457)
-- Dependencies: 352
-- Data for Name: axp_appsearch_data; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_appsearch_data (cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, hltype, structname, searchtext, params, axp_appsearch_dataid) FROM stdin;
\.


--
-- TOC entry 6393 (class 0 OID 2005505)
-- Dependencies: 362
-- Data for Name: axp_appsearch_data_period; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_appsearch_data_period (axp_appsearch_data_periodid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, docid, hltype, caption, structname, action, periodically, searchfor, period, searchtext, periodfromdt, periodtodt, fromdt, todt, duplicate, dynamicparam, srctrans, srctransid, tsrcfield, srcfield, dcname, srctable, paramvalue, sourcefieldchanged, srcmultipletransid, params, triggerscripts) FROM stdin;
\.


--
-- TOC entry 6387 (class 0 OID 2005462)
-- Dependencies: 353
-- Data for Name: axp_appsearch_data_v2; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_appsearch_data_v2 (hltype, structname, searchtext, params, createdon, docid) FROM stdin;
\.


--
-- TOC entry 6394 (class 0 OID 2005510)
-- Dependencies: 363
-- Data for Name: axp_appsearchdtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_appsearchdtl (axp_appsearchdtlid, axp_appsearch_dataid, axp_appsearchdtlrow, paramcaption, paramname, paramvalue, tiviewparams, refsearchtext) FROM stdin;
\.


--
-- TOC entry 6395 (class 0 OID 2005515)
-- Dependencies: 364
-- Data for Name: axp_cards; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_cards (axp_cardsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, cardtypeui, cardtype, cardicon, charttype, sql_editor_cardsql, cardname, heightui, height, widthui, width, cachedata, autorefresh, orderno, clrpalet, trufalse, chartprops, accessstringui, chartjson, accessstring, axpfile_imgcard, con_name, pagecaption, axpfilepath_imgcard, pagename, cardbgclr, hcaption, isparentpage, htype, pagedesc, htranstypeui, htransid, is_migrated, html_editor_card, calendarsource, calendarstransid, exp_editor_buttons, inhomepage, card_datasource, pluginname, indashboard) FROM stdin;
\.


--
-- TOC entry 6396 (class 0 OID 2005520)
-- Dependencies: 365
-- Data for Name: axp_chartconfig; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_chartconfig (axp_chartconfigid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, title, chartgroup, cusertype, subtitle, graphtype, changegraph, piecolor, linkname, sqltext, hyptext, flinkname) FROM stdin;
\.


--
-- TOC entry 6397 (class 0 OID 2005525)
-- Dependencies: 366
-- Data for Name: axp_customdatatype; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_customdatatype (axp_customdatatypeid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, typename, datatype, width, dwidth, isactive) FROM stdin;
\.


--
-- TOC entry 6398 (class 0 OID 2005530)
-- Dependencies: 367
-- Data for Name: axp_customtypes; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_customtypes (typename, datatype, width, deci) FROM stdin;
\.


--
-- TOC entry 6399 (class 0 OID 2005533)
-- Dependencies: 368
-- Data for Name: axp_dbwdetails; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_dbwdetails (axp_dbwdetailsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, title, subtitle, graphtype, piecolor, linkname, sqltext, hyptext, flinkname, uname, chartgroup) FROM stdin;
\.


--
-- TOC entry 6400 (class 0 OID 2005538)
-- Dependencies: 369
-- Data for Name: axp_dependent; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_dependent (tstruct, parentfield, childfield, dependenttype, frmno, fldsql, active, userdefined) FROM stdin;
\.


--
-- TOC entry 6401 (class 0 OID 2005543)
-- Dependencies: 370
-- Data for Name: axp_files; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_files (filename, storedon, filecontent, blobno, status) FROM stdin;
\.


--
-- TOC entry 6402 (class 0 OID 2005548)
-- Dependencies: 371
-- Data for Name: axp_formload; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_formload (tstruct, context, fieldname, fldsql, frmno, active, userdefined) FROM stdin;
\.


--
-- TOC entry 6403 (class 0 OID 2005553)
-- Dependencies: 372
-- Data for Name: axp_mailjobs; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_mailjobs (mailto, mailcc, subject, body, recipientcategory, enquiryno, attachments, iviewname, iviewparams, transid, recordid, status, errormessage, senton, jobid, jobdate) FROM stdin;
\.


--
-- TOC entry 6405 (class 0 OID 2005559)
-- Dependencies: 374
-- Data for Name: axp_params; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_params (tstruct, context, childfield, paramname, paramtype, allrows, frmno, fldsql, active, userdefined, dirparam) FROM stdin;
\.


--
-- TOC entry 6406 (class 0 OID 2005564)
-- Dependencies: 375
-- Data for Name: axp_reportjobs; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_reportjobs (jobid, jobdate, iviewname, iviewparams, transid, recordid, status, errormessage, senton, filepath, tablename, sjobid) FROM stdin;
\.


--
-- TOC entry 6407 (class 0 OID 2005569)
-- Dependencies: 376
-- Data for Name: axp_sales_data; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_sales_data (first_name, country, sales_year, sales_qty, sales_amount) FROM stdin;
\.


--
-- TOC entry 6408 (class 0 OID 2005572)
-- Dependencies: 377
-- Data for Name: axp_smartviews_config; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_smartviews_config (username, ivname, config_data, createdon, createdby, updatedon, updatedby) FROM stdin;
\.


--
-- TOC entry 6409 (class 0 OID 2005577)
-- Dependencies: 378
-- Data for Name: axp_struct_release_log; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_struct_release_log (createdon, axpversion) FROM stdin;
\.


--
-- TOC entry 6410 (class 0 OID 2005581)
-- Dependencies: 379
-- Data for Name: axp_tabledescriptor; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_tabledescriptor (axp_tabledescriptorid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, dname, tjson, isactive) FROM stdin;
\.


--
-- TOC entry 6411 (class 0 OID 2005586)
-- Dependencies: 380
-- Data for Name: axp_transcheck; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_transcheck (sessionid) FROM stdin;
\.


--
-- TOC entry 6412 (class 0 OID 2005589)
-- Dependencies: 381
-- Data for Name: axp_versionchangedetails; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_versionchangedetails (verno, transid, name, stype, status, property, oldvalue, newvalue, blobno, oldvalueclob, newvalueclob) FROM stdin;
\.


--
-- TOC entry 6413 (class 0 OID 2005594)
-- Dependencies: 382
-- Data for Name: axp_versionchanges; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_versionchanges (verno, stype, name, caption, createdby, createdon, updatedby, updatedon) FROM stdin;
\.


--
-- TOC entry 6414 (class 0 OID 2005597)
-- Dependencies: 383
-- Data for Name: axp_versions; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_versions (verno, domainname, servername, publishedon, publishedby, publishedfrom, comments, blobno) FROM stdin;
\.


--
-- TOC entry 6415 (class 0 OID 2005602)
-- Dependencies: 384
-- Data for Name: axp_vp; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_vp (axp_vpid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, vpname, isparam, vscript, pcaption, pdatatype, modeofentry, sql_editor_psql, vpvalue, display, readonly, postaccept, postselect, customdatatype, datawidth, ttransid, dcselect, masterdl, source, masterdlselect, masterdlui, isconstant, isvariable, isappparam, remarks) FROM stdin;
\.


--
-- TOC entry 6416 (class 0 OID 2005612)
-- Dependencies: 386
-- Data for Name: axp_webtrace; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axp_webtrace (username, sessionid, datetime, logtext) FROM stdin;
\.


--
-- TOC entry 6417 (class 0 OID 2005617)
-- Dependencies: 387
-- Data for Name: axpagedetail; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpagedetail (name, sname, stype) FROM stdin;
\.


--
-- TOC entry 6388 (class 0 OID 2005466)
-- Dependencies: 354
-- Data for Name: axpages; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpages (name, caption, props, blobno, img, visible, type, parent, ordno, levelno, updatedon, createdon, importedon, createdby, updatedby, importedby, readonly, updusername, category, pagetype, intview, webenable, shortcut, icon, websubtype, workflow, oldappurl) FROM stdin;
\.


--
-- TOC entry 6418 (class 0 OID 2005620)
-- Dependencies: 388
-- Data for Name: axpcal; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpcal (axpcalid, profitdoc, approval, approvalstatus, maxapproved, cancel, sourceid, mapname, stdate, sttime, enddate, endtime, task, recordid, active, status, transid, unameid, inv, pagename) FROM stdin;
\.


--
-- TOC entry 6419 (class 0 OID 2005623)
-- Dependencies: 389
-- Data for Name: axpclouddevsettings; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpclouddevsettings (userid, tranid, type, value) FROM stdin;
\.


--
-- TOC entry 6420 (class 0 OID 2005628)
-- Dependencies: 390
-- Data for Name: axpconfigsiv_mainrepo; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpconfigsiv_mainrepo (configname, cvalue, condition) FROM stdin;
\.


--
-- TOC entry 6421 (class 0 OID 2005633)
-- Dependencies: 391
-- Data for Name: axpdc; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdc (tstruct, dname, caption, tablename, asgrid, allowchange, allowempty, popup, dcno, addrow, deleterow, purpose, createdby, createdon, modifiedby, modifiedon) FROM stdin;
\.


--
-- TOC entry 6422 (class 0 OID 2005638)
-- Dependencies: 392
-- Data for Name: axpdef_axcalendar_event; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_axcalendar_event (axpdef_axcalendar_eventid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, eventname, eventcolor) FROM stdin;
\.


--
-- TOC entry 6423 (class 0 OID 2005643)
-- Dependencies: 393
-- Data for Name: axpdef_axcalendar_eventstatus; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_axcalendar_eventstatus (axpdef_axcalendar_eventstatusid, axpdef_axcalendar_eventid, axpdef_axcalendar_eventstatusrow, eventstatus, eventstatcolor) FROM stdin;
\.


--
-- TOC entry 6246 (class 0 OID 2004658)
-- Dependencies: 210
-- Data for Name: axpdef_axpanalytics_mdata; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_axpanalytics_mdata (ftransid, fcaption, fldname, fldcap, cdatatype, fdatatype, fmodeofentry, hide, props, normalized, srctable, srcfield, srctransid, allowempty, filtertype, grpfield, aggfield, subentity, datacnd, entityrelfld, allowduplicate, tablename, dcname, fordno, dccaption, griddc, listingfld, encrypted, masking, lastcharmask, firstcharmask, maskchar, maskroles, customdecimal) FROM stdin;
\.


--
-- TOC entry 6424 (class 0 OID 2005646)
-- Dependencies: 394
-- Data for Name: axpdef_axpertapi; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_axpertapi (axpdef_axpertapiid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, apicategory, page, pagecaption, pagename, pagescript, pagescriptname, fldcnd, formcaption, tname, dd_caption, fldname, iviewcaption, iname, sql_reffield, sql_editor_apiquery, sql_output, apiurl, reqformat, res_success, res_fail) FROM stdin;
\.


--
-- TOC entry 6425 (class 0 OID 2005651)
-- Dependencies: 395
-- Data for Name: axpdef_axpertprops; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_axpertprops (axpdef_axpertpropsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, smtphost, smtpport, smtpuser, smtppwd, axpsiteno, amtinmillions, currseperator, lastlogin, autogen, customfrom, customto, loginattempt, pwdexp, pwdchange, pwdminchar, pwdreuse, pwdalphanum, pwdencrypt, pwdmaxchar, pwdcapchar, pwdsmallchar, pwdnumchar, pwdsplchar, emailsubject, emailbody, smscontent, onlysso, sso_windows, sso_saml, sso_office365, sso_okta, sso_google, sso_facebook, sso_openid, tbl_windows, tbl_saml, tbl_okta, tbl_office365, tbl_google, tbl_facebook, tbl_openid, otpauth, otpchars, otpexpiry) FROM stdin;
\.


--
-- TOC entry 6426 (class 0 OID 2005656)
-- Dependencies: 396
-- Data for Name: axpdef_axvars; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_axvars (axpdef_axvarsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, transid, db_function, db_function_params, event_onlogin, event_onformload, forms, forms_transid, event_onreportload, reports, reports_transid, isdbobj, remarks) FROM stdin;
\.


--
-- TOC entry 6427 (class 0 OID 2005661)
-- Dependencies: 397
-- Data for Name: axpdef_axvars_dbvar; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_axvars_dbvar (axpdef_axvars_dbvarid, axpdef_axvarsid, axpdef_axvars_dbvarrow, db_varname, db_varval, db_vartype, db_varcaption) FROM stdin;
\.


--
-- TOC entry 6428 (class 0 OID 2005666)
-- Dependencies: 398
-- Data for Name: axpdef_branch; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_branch (axpdef_branchid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, users_branchlocationname, isactive, company, companybranch) FROM stdin;
\.


--
-- TOC entry 6429 (class 0 OID 2005671)
-- Dependencies: 399
-- Data for Name: axpdef_company; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_company (axpdef_companyid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, company_name, business_vertical, company_country, company_state, company_address, company_regno, company_displaytitle, primarycompany, url_fb, url_instagram, url_twitter, url_youtube, url_linkedin, company_url) FROM stdin;
\.


--
-- TOC entry 6430 (class 0 OID 2005676)
-- Dependencies: 400
-- Data for Name: axpdef_dac_config; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_dac_config (axpdef_dac_configid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, user_name_role, uname, urole, editmode, dataaccess, dataaccesscnd, formcap, stransid, editmodeui) FROM stdin;
\.


--
-- TOC entry 6431 (class 0 OID 2005681)
-- Dependencies: 401
-- Data for Name: axpdef_dac_configdtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_dac_configdtl (axpdef_dac_configdtlid, axpdef_dac_configid, axpdef_dac_configdtlrow, fldcap, fldname, filtercnd, dynamicval, fldstaticval, pmtransid, pmfldname, fldmastvalue, flddatatype, filtercndui, isglovar) FROM stdin;
\.


--
-- TOC entry 6432 (class 0 OID 2005686)
-- Dependencies: 402
-- Data for Name: axpdef_dac_masterconfig; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_dac_masterconfig (axpdef_dac_masterconfigid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, formcap, stransid, fldcap, fldname, dupchk, mform, mtransid, mfieldcap, mfldname) FROM stdin;
\.


--
-- TOC entry 6433 (class 0 OID 2005691)
-- Dependencies: 403
-- Data for Name: axpdef_dc; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_dc (axpdef_dcid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, recid, stransid, axpdef_tstructid, ctdc, name, caption, dupchk_dccaption, tablename, toldtablename, dropdc, field_maxnum, type, asgrid, tablecount, allowchange, allowempty, adddcrows, deletedcrows, popup, purpose, tdcs, alldcs, dcflag, structname, replacechar, fcharcheck, validchk, oldtablename, deleteoldtable, booleandc, defaultstate) FROM stdin;
\.


--
-- TOC entry 6434 (class 0 OID 2005696)
-- Dependencies: 404
-- Data for Name: axpdef_errcodes; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_errcodes (axpdef_errcodesid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, errcode, errlang, errmsg, applicableforms, applicabletransid, dupchk) FROM stdin;
\.


--
-- TOC entry 6435 (class 0 OID 2005701)
-- Dependencies: 405
-- Data for Name: axpdef_fillgrid; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_fillgrid (axpdef_fillgridid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, recid, stransid, axpdef_tstructid, ctfg, name, caption, dcname, purpose, ctdc, field_maxnum, frules, fdetails, type, axp_web_sqlexp_val_def_restrad, sql_editor_sql, targetdc, mapdgpfield, multiselect, autoshow, vvalidate, executeonsave, firmbind, sourcedc, selecton, footerstring, exp_editor_validateexpression, addrows, columnproperty, autoselectallrows, tfillgrid, allfillgrids, fgflag, dupchk, grpfield) FROM stdin;
\.


--
-- TOC entry 6436 (class 0 OID 2005706)
-- Dependencies: 406
-- Data for Name: axpdef_fillgriddtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_fillgriddtl (axpdef_fillgriddtlid, axpdef_fillgridid, axpdef_fillgriddtlrow, htransid, sourcefield, sourcecaption, targetfield) FROM stdin;
\.


--
-- TOC entry 6437 (class 0 OID 2005709)
-- Dependencies: 407
-- Data for Name: axpdef_genmap; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_genmap (axpdef_genmapid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, recid, stransid, axpdef_tstructid, ctgm, name, caption, dcname, ctdc, field_maxnum, targettstruct, targettrasid, basedondc, controlfieldname, schemaoftarget, onpost, purpose, active, onapprove, onreject, tgmap, allgenmaps, gmapflag, dupchk, fdetails, frules, groupfield) FROM stdin;
\.


--
-- TOC entry 6438 (class 0 OID 2005714)
-- Dependencies: 408
-- Data for Name: axpdef_genmapdtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_genmapdtl (axpdef_genmapdtlid, axpdef_genmapid, axpdef_genmapdtlrow, sourcefrom, source, fsource, sourcedcasgridui, sourcedcasgrid, targetfield, targetrow) FROM stdin;
\.


--
-- TOC entry 6439 (class 0 OID 2005717)
-- Dependencies: 409
-- Data for Name: axpdef_genmaprowctrl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_genmaprowctrl (axpdef_genmaprowctrlid, axpdef_genmapid, axpdef_genmaprowctrlrow, rtargetrow, rowcontrolfield) FROM stdin;
\.


--
-- TOC entry 6440 (class 0 OID 2005720)
-- Dependencies: 410
-- Data for Name: axpdef_impdata_templates; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_impdata_templates (axpdef_impdata_templatesid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, templatename, stransid, dupchk, templatecap, impfields, dataupd, fldpkey) FROM stdin;
\.


--
-- TOC entry 6441 (class 0 OID 2005725)
-- Dependencies: 411
-- Data for Name: axpdef_jobs; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_jobs (axpdef_jobsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, jname, priority, prefix, jobid, exp_editor_jobscript, jobschedule, weekday, jday, jhrs, jminutes, ampm, noofhrs, noofmins, jobstartfrom, jobdesc, status, lastrun, remarks, isactive, isdefault, jobdatechar, jobstarttime, rediskeyname, appname, rediskeyval, redisserver, deletepending, formload, formtransid, formevent, axptm_starttime, deletekey, rmq_version, rmq_json) FROM stdin;
\.


--
-- TOC entry 6442 (class 0 OID 2005730)
-- Dependencies: 412
-- Data for Name: axpdef_language; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_language (axpdef_languageid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, language, fontcharset, exportto, fontname, fontsize, exportfiles, expalltstruct, expalliview, tstructcap, tstructnames, iviewcap, iviewnames, uploadfiletype) FROM stdin;
\.


--
-- TOC entry 6443 (class 0 OID 2005735)
-- Dependencies: 413
-- Data for Name: axpdef_mdmap; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_mdmap (axpdef_mdmapid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, recid, stransid, axpdef_tstructid, ctmd, name, caption, dcname, ctdc, field_maxnum, mastertransaction, mastertransid, masterfield, detailfield, mastersearchfield, detailsearchfield, mastertable, updatetype, controlfield, maptext, purpose, extended, append, initondel, onapprove, onreject, dupchk, tmdmap, allmdmaps, mdmapflag, fdetails) FROM stdin;
\.


--
-- TOC entry 6444 (class 0 OID 2005740)
-- Dependencies: 414
-- Data for Name: axpdef_news_events; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_news_events (axpdef_news_eventsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, title, subdetails, redirecturl, effectfrom, effecto, active) FROM stdin;
\.


--
-- TOC entry 6445 (class 0 OID 2005745)
-- Dependencies: 415
-- Data for Name: axpdef_peg_actor; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_peg_actor (axpdef_peg_actorid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, process, taskname, actorname, axpdef_peg_processmasterid, dupchk, acttype, assignmode, assignmodecnd, olddefusername, axprocessdefv2id, defusername, stransid, priorindextransid, datagrpgrid, applicableto, applicablecnd, sprocessname) FROM stdin;
\.


--
-- TOC entry 6446 (class 0 OID 2005750)
-- Dependencies: 416
-- Data for Name: axpdef_peg_actorusergrp; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_peg_actorusergrp (axpdef_peg_actorusergrpid, axpdef_peg_actorid, axpdef_peg_actorusergrprow, usergroupname, usergrpcode, oldugrpusername, ugrpusername, ug_actorname) FROM stdin;
\.


--
-- TOC entry 6447 (class 0 OID 2005755)
-- Dependencies: 417
-- Data for Name: axpdef_peg_group; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_peg_group (axpdef_peg_groupid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, actorname, grpname, dupchk, totalcnd, axpdef_peg_actorid, grpcriteria, process, taskname) FROM stdin;
\.


--
-- TOC entry 6448 (class 0 OID 2005760)
-- Dependencies: 418
-- Data for Name: axpdef_peg_grpfilter; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_peg_grpfilter (axpdef_peg_grpfilterid, axpdef_peg_actorid, axpdef_peg_grpfilterrow, cndopr, fldcnd, dg_actorname, dgname, tbl_datagrp, olddatagrpusers, datagrpusers, cnd, stransid, isformfld, fldname, isnum_date, fldvalue, cndoprsym, condition) FROM stdin;
\.


--
-- TOC entry 6449 (class 0 OID 2005765)
-- Dependencies: 419
-- Data for Name: axpdef_peg_processmaster; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_peg_processmaster (axpdef_peg_processmasterid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, caption, processowner, axpicon_process, processdesc, powner, pownerflg, processtable, createscr, amendment, cards, amendconfirm, amendconfirmmsg) FROM stdin;
\.


--
-- TOC entry 6450 (class 0 OID 2005770)
-- Dependencies: 420
-- Data for Name: axpdef_peg_usergroups; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_peg_usergroups (username, usergroupname, usergroupcode, active, effectivefrom, fromuser) FROM stdin;
\.


--
-- TOC entry 6451 (class 0 OID 2005775)
-- Dependencies: 421
-- Data for Name: axpdef_prcards; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_prcards (axpdef_prcardsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, cardtype, charttype, cardname, sql_editor_cardsql, chartprops, chartjson) FROM stdin;
\.


--
-- TOC entry 6452 (class 0 OID 2005780)
-- Dependencies: 422
-- Data for Name: axpdef_publishapi; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_publishapi (axpdef_publishapiid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, publickey, secretkey, secretkeyflg, apitype, structcapui, structcapuiname, objdatasrc, structcap, objname, scriptcap, printform, unameui, uname, apirequeststring, apisuccess, apierror, scriptcapui) FROM stdin;
\.


--
-- TOC entry 6453 (class 0 OID 2005785)
-- Dependencies: 423
-- Data for Name: axpdef_ruleeng; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_ruleeng (axpdef_ruleengid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, rulename, formcaption, stransid, uroles, formula, formula_expr, active, isapplicableui, readonly, cachedsave, exp_editor_scriptload, exp_editor_onsubmit, showfieldsui, hidefieldsui, enablefieldsui, disablefieldsui, mandatoryfieldsui, nonmandatoryfieldsui, fldsmasking) FROM stdin;
\.


--
-- TOC entry 6454 (class 0 OID 2005790)
-- Dependencies: 424
-- Data for Name: axpdef_ruleeng_expr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_ruleeng_expr (axpdef_ruleeng_exprid, axpdef_ruleengid, axpdef_ruleeng_exprrow, fldname_expr, flds_expr, exp_editor_expr) FROM stdin;
\.


--
-- TOC entry 6455 (class 0 OID 2005795)
-- Dependencies: 425
-- Data for Name: axpdef_ruleeng_fctl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_ruleeng_fctl (axpdef_ruleeng_fctlid, axpdef_ruleengid, axpdef_ruleeng_fctlrow, cmd, fldcomps, tbl_comps) FROM stdin;
\.


--
-- TOC entry 6456 (class 0 OID 2005800)
-- Dependencies: 426
-- Data for Name: axpdef_ruleeng_masks; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_ruleeng_masks (axpdef_ruleeng_masksid, axpdef_ruleengid, axpdef_ruleeng_masksrow, mask_fldcap, mask_fldname, maskcmd, mask_pcnd, maskchar, firstnchar, lastnchar, compval) FROM stdin;
\.


--
-- TOC entry 6457 (class 0 OID 2005805)
-- Dependencies: 427
-- Data for Name: axpdef_ruleeng_msg; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_ruleeng_msg (axpdef_ruleeng_msgid, axpdef_ruleengid, axpdef_ruleeng_msgrow, btncaption, btnname, btnformula, btnapplicable, btn_message) FROM stdin;
\.


--
-- TOC entry 6458 (class 0 OID 2005810)
-- Dependencies: 428
-- Data for Name: axpdef_ruleeng_valexpr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_ruleeng_valexpr (axpdef_ruleeng_valexprid, axpdef_ruleengid, axpdef_ruleeng_valexprrow, fldname_vexpr, flds_vexpr, exp_editor_valexpr) FROM stdin;
\.


--
-- TOC entry 6459 (class 0 OID 2005815)
-- Dependencies: 429
-- Data for Name: axpdef_rulegroup; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_rulegroup (axpdef_rulegroupid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, groupname) FROM stdin;
\.


--
-- TOC entry 6460 (class 0 OID 2005820)
-- Dependencies: 430
-- Data for Name: axpdef_rulesdef; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_rulesdef (axpdef_rulesdefid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, rulegroup, rulename, active, formcaption, uroles, formula, formula_expr, isapplicableui, stransid, cdocid, isruntime, formctrltmp, formcontrl, onchngfldname, exp_editor_onsubmit, exp_editor_scriptload) FROM stdin;
\.


--
-- TOC entry 6461 (class 0 OID 2005825)
-- Dependencies: 431
-- Data for Name: axpdef_rulesdef_basic; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_rulesdef_basic (axpdef_rulesdef_basicid, axpdef_rulesdefid, axpdef_rulesdef_basicrow, cmd, pcnd, cndfldcaption, fctlfldcaption, maskchar, tbldtls, axpscript, setvalueflds) FROM stdin;
\.


--
-- TOC entry 6462 (class 0 OID 2005830)
-- Dependencies: 432
-- Data for Name: axpdef_rulesdef_conmsg; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_rulesdef_conmsg (axpdef_rulesdef_conmsgid, axpdef_rulesdefid, axpdef_rulesdef_conmsgrow, btncaption, btnname, btnformula, btn_message, btntransid) FROM stdin;
\.


--
-- TOC entry 6463 (class 0 OID 2005835)
-- Dependencies: 433
-- Data for Name: axpdef_stdpages; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_stdpages (axpdef_stdpagesid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, pageno, caption, addtomenu, isacoretrans, menuposition, menulist, spsavejson) FROM stdin;
\.


--
-- TOC entry 6464 (class 0 OID 2005840)
-- Dependencies: 434
-- Data for Name: axpdef_tstruct; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_tstruct (axpdef_tstructid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, recid, ntransid, caption, fieldcount, purpose, isacoretrans, menuposition, menulist, pageid, ttrackchanges, trackchanges, trackchangesmadeby, trackchangesfield, selectuserlist, selectfieldlist, tattachment, attachment, tlistview, listview, schema, tworkflow, workflow, cupdatedon, savecontrolfield, deletecontrolfield, cstring, allfillgrids, allgenmaps, allmdmaps, layouttype, structname, pcaptitle, axlibrary, savecontrolfielddl, deletecontrolfielddl, includepage, runtimemod, runtimetstruct, cachedsave, savemode, apiqueuename, savequeuename, notificationsonsave, notificationtemplates, printonsave, printtemplates, printtoqueue, printqueuename, printdirect, printinviewmode, printviewroles, enablelviewdesign) FROM stdin;
\.


--
-- TOC entry 6465 (class 0 OID 2005845)
-- Dependencies: 435
-- Data for Name: axpdef_tstructfdtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_tstructfdtl (axpdef_tstructfdtlid, axpdef_tstructid, axpdef_tstructfdtlrow, fields) FROM stdin;
\.


--
-- TOC entry 6466 (class 0 OID 2005848)
-- Dependencies: 436
-- Data for Name: axpdef_tstructudtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_tstructudtl (axpdef_tstructudtlid, axpdef_tstructid, axpdef_tstructudtlrow, selected_user) FROM stdin;
\.


--
-- TOC entry 6467 (class 0 OID 2005851)
-- Dependencies: 437
-- Data for Name: axpdef_user_logins; Type: TABLE DATA; Schema: agilespacefresh; Owner: postgres
--

COPY agilespacefresh.axpdef_user_logins (axpdef_user_loginsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, user_name, login_name, email, mobile, adminaccess, usergroups, userroles, access_configstudio, access_developerstudio, access_exportdata, access_importdata, actors, active, primary_reporting_manager, sec_reporting_manager, skip_level_manager, company, branch, access_alldata, access_alldatacnd, access_subdata, access_viewusergrp, access_editusergrp, access_teamdata, access_viewbranch, access_editbranch, branchname) FROM stdin;
\.


--
-- TOC entry 6468 (class 0 OID 2005856)
-- Dependencies: 438
-- Data for Name: axpdef_usergroups; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_usergroups (axpdef_usergroupsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, usernames, users_group_name, users_group_description, isactive) FROM stdin;
\.


--
-- TOC entry 6469 (class 0 OID 2005861)
-- Dependencies: 439
-- Data for Name: axpdef_userroles; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_userroles (axpdef_userrolesid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, axusergroup, dhomepage, homepage, useprodform, active, rolev2) FROM stdin;
\.


--
-- TOC entry 6470 (class 0 OID 2005866)
-- Dependencies: 440
-- Data for Name: axpdef_workflowdtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_workflowdtl (axpdef_workflowdtlid, axpdef_workflowhdrid, axpdef_workflowdtlrow, wrole, isapproval, wfrights, wfidentification, mtresponsedays, mtresponsehrs, wfaction) FROM stdin;
\.


--
-- TOC entry 6471 (class 0 OID 2005871)
-- Dependencies: 441
-- Data for Name: axpdef_workflowhdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdef_workflowhdr (axpdef_workflowhdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, wfname, wcaption, tsname, stransid, appemail, flddetails, condetails, wfandor, wfconditions, calcondition, wf_condition, editapproval, cancelapproval, allreapproval, m_workflow, chkms, url, cc, bcc, subject, rtf_mailbody, attach, auth) FROM stdin;
\.


--
-- TOC entry 6472 (class 0 OID 2005876)
-- Dependencies: 442
-- Data for Name: axpdflanguage; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdflanguage (lngname, sname, fontname, fontsize, compname, compcaption, comphint) FROM stdin;
\.


--
-- TOC entry 6473 (class 0 OID 2005879)
-- Dependencies: 443
-- Data for Name: axpdraft; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpdraft (transid, username, usersession, ip, holdid, createdon, modifiedon, fieldlist, parselist, assignedlist, rec_varlist, blobno) FROM stdin;
\.


--
-- TOC entry 6474 (class 0 OID 2005884)
-- Dependencies: 444
-- Data for Name: axpeg00001; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg00001 (eventdatetime, taskid, transid, processname, taskname, keyvalue, taskstatus, tasktype, username, nexttask, displayicon, displaytitle, indexno, keyfield, recordid, timelinetitle) FROM stdin;
\.


--
-- TOC entry 6475 (class 0 OID 2005889)
-- Dependencies: 445
-- Data for Name: axpeg00002; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg00002 (eventdatetime, taskid, transid, processname, taskname, keyvalue, taskstatus, tasktype, username, nexttask, displayicon, displaytitle, indexno, keyfield, recordid, timelinetitle) FROM stdin;
\.


--
-- TOC entry 6476 (class 0 OID 2005894)
-- Dependencies: 446
-- Data for Name: axpeg00003; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg00003 (eventdatetime, taskid, transid, processname, taskname, keyvalue, taskstatus, tasktype, username, nexttask, displayicon, displaytitle, indexno, keyfield, recordid, timelinetitle) FROM stdin;
\.


--
-- TOC entry 6477 (class 0 OID 2005899)
-- Dependencies: 447
-- Data for Name: axpeg00004; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg00004 (eventdatetime, taskid, transid, processname, taskname, keyvalue, taskstatus, tasktype, username, nexttask, displayicon, displaytitle, indexno, keyfield, recordid, timelinetitle) FROM stdin;
\.


--
-- TOC entry 6478 (class 0 OID 2005904)
-- Dependencies: 448
-- Data for Name: axpeg00005; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg00005 (eventdatetime, taskid, transid, processname, taskname, keyvalue, taskstatus, tasktype, username, nexttask, displayicon, displaytitle, indexno, keyfield, recordid, timelinetitle) FROM stdin;
\.


--
-- TOC entry 6479 (class 0 OID 2005909)
-- Dependencies: 449
-- Data for Name: axpeg00006; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg00006 (eventdatetime, taskid, transid, processname, taskname, keyvalue, taskstatus, tasktype, username, nexttask, displayicon, displaytitle, indexno, keyfield, recordid, timelinetitle) FROM stdin;
\.


--
-- TOC entry 6480 (class 0 OID 2005914)
-- Dependencies: 450
-- Data for Name: axpeg00007; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg00007 (eventdatetime, taskid, transid, processname, taskname, keyvalue, taskstatus, tasktype, username, nexttask, displayicon, displaytitle, indexno, keyfield, recordid, timelinetitle) FROM stdin;
\.


--
-- TOC entry 6481 (class 0 OID 2005919)
-- Dependencies: 451
-- Data for Name: axpeg_assig; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg_assig (eventdatetime, transid, processname, keyvalue, recordid, status, statustext, withdrawn) FROM stdin;
\.


--
-- TOC entry 6482 (class 0 OID 2005924)
-- Dependencies: 452
-- Data for Name: axpeg_bugtr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg_bugtr (eventdatetime, transid, processname, keyvalue, recordid, status, statustext, withdrawn) FROM stdin;
\.


--
-- TOC entry 6483 (class 0 OID 2005929)
-- Dependencies: 453
-- Data for Name: axpeg_dipur; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg_dipur (eventdatetime, transid, processname, keyvalue, recordid, status, statustext, withdrawn) FROM stdin;
\.


--
-- TOC entry 6484 (class 0 OID 2005934)
-- Dependencies: 454
-- Data for Name: axpeg_leave; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg_leave (eventdatetime, transid, processname, keyvalue, recordid, status, statustext, withdrawn) FROM stdin;
\.


--
-- TOC entry 6485 (class 0 OID 2005939)
-- Dependencies: 455
-- Data for Name: axpeg_levrq; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg_levrq (eventdatetime, transid, processname, keyvalue, recordid, status, statustext, withdrawn) FROM stdin;
\.


--
-- TOC entry 6486 (class 0 OID 2005944)
-- Dependencies: 456
-- Data for Name: axpeg_sendmsg; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg_sendmsg (axpeg_sendmsgid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, touser_ui, touser, msgtitle, message, pagetype, formmode, formcaption, stransid, msgtype, loadparams, effectiveto, fromuser, hlink_transid, hlink_params) FROM stdin;
\.


--
-- TOC entry 6487 (class 0 OID 2005949)
-- Dependencies: 457
-- Data for Name: axpeg_test; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg_test (eventdatetime, transid, processname, keyvalue, recordid, status, statustext, withdrawn) FROM stdin;
\.


--
-- TOC entry 6488 (class 0 OID 2005954)
-- Dependencies: 458
-- Data for Name: axpeg_trare; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg_trare (eventdatetime, transid, processname, keyvalue, recordid, status, statustext, withdrawn) FROM stdin;
\.


--
-- TOC entry 6489 (class 0 OID 2005959)
-- Dependencies: 459
-- Data for Name: axpeg_workr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpeg_workr (eventdatetime, transid, processname, keyvalue, recordid, status, statustext, withdrawn) FROM stdin;
\.


--
-- TOC entry 6490 (class 0 OID 2005964)
-- Dependencies: 460
-- Data for Name: axperiodnotify; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axperiodnotify (axperiodnotifyid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, name, startdate, starttime, frequency, sendday, sendon, sendtime, active, datasource, messagetitle, messagetext, messageattsingle, messageattsinglename, messageattachmentsui, messageattachments, notifyto, usergroups, usernames, externalemails, fromuserui, fromuser, mobilenotify, queuestat, exp_editor_condition, pagetype, navigateto, loadopen, tbl_navigationparam, formula, formula_expr, projname) FROM stdin;
\.


--
-- TOC entry 6491 (class 0 OID 2005969)
-- Dependencies: 461
-- Data for Name: axpermissions; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpermissions (axpermissionsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, axuserrole, comptype, formcap, formtransid, allowcreate, viewcnd, viewctrl, view_flds, viewlist, editcnd, editctrl, edit_flds, editlist, fieldmasks, fieldmaskstr, dupchk) FROM stdin;
\.


--
-- TOC entry 6492 (class 0 OID 2005974)
-- Dependencies: 462
-- Data for Name: axpertlog; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpertlog (sessionid, username, calledon, structname, recordid, timetaken, db_conntime, dbtimetaken, servicename, serviceresult, callfinished) FROM stdin;
\.


--
-- TOC entry 6493 (class 0 OID 2005977)
-- Dependencies: 463
-- Data for Name: axpertreports; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpertreports (caption, design, blobno) FROM stdin;
\.


--
-- TOC entry 6494 (class 0 OID 2005982)
-- Dependencies: 464
-- Data for Name: axpexception; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpexception (exp_date, structname, servicename, serviceresult, count) FROM stdin;
\.


--
-- TOC entry 6495 (class 0 OID 2005987)
-- Dependencies: 465
-- Data for Name: axpexchange; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpexchange (axpexchangeid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, transid, idfield, adxinout, ftphost, ftpname, ftppwd, ftp, formatfile, extension, ordno, cond, outfolder, infolder, succfolder, failfolder, archsuccfolder, archfailfolder) FROM stdin;
\.


--
-- TOC entry 6496 (class 0 OID 2005992)
-- Dependencies: 466
-- Data for Name: axpfgdtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpfgdtl (tstruct, fgname, srcfld, tarfld, caption) FROM stdin;
\.


--
-- TOC entry 6497 (class 0 OID 2005997)
-- Dependencies: 467
-- Data for Name: axpfillgrid; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpfillgrid (tstruct, fgname, caption, fgsql, fromiview, tardc, multiselect, autoshow, srcdc, validat, exeonsave, firmbind, selecton, footer, valexpr, addrows, purpose, gfld, plist, createdby, createdon, modifiedby, modifiedon) FROM stdin;
\.


--
-- TOC entry 6498 (class 0 OID 2006002)
-- Dependencies: 468
-- Data for Name: axpflds; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpflds (tstruct, itype, fname, caption, datatype, datawidth, flddecimal, modeofentry, expression, valexpr, srctf, purpose, fldsql, srcfld, hidden, readonly, savevalue, dcname, ordno, customdatatype, stype, allowempty, allowduplicate, tabstop, setcarry, applycomma, onlypositive, clientvalidate, mask, pattern, hint, pwordchar, srckey, sgwidth, sgheight, cfield, srctrans, scol, autoselect, linkfield, suggestive, ctype, disptype, sep, font, color, refreshonsave, searchsql, dispdet, depflds, parentflds, listvalues, autogendet, tablename, asgrid, frmno, tlhw, lbltlhw, runtimefld, applyrule, displaytotal, createdby, createdon, modifiedby, modifiedon, encrypted, masking, lastcharmask, firstcharmask, maskchar, maskroles, customdecimal) FROM stdin;
\.


--
-- TOC entry 6499 (class 0 OID 2006007)
-- Dependencies: 469
-- Data for Name: axpformlbls; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpformlbls (transid, lblname, lblcaption) FROM stdin;
\.


--
-- TOC entry 6500 (class 0 OID 2006012)
-- Dependencies: 470
-- Data for Name: axpgenmapdtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpgenmapdtl (tstruct, gname, tarfld, srcfld, trow, srow, control, dgroup, dtype, ord, id) FROM stdin;
\.


--
-- TOC entry 6501 (class 0 OID 2006015)
-- Dependencies: 471
-- Data for Name: axpgenmaps; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpgenmaps (tstruct, gname, caption, targettstr, basedondc, ctrlfldname, active, axpschema, onpost, purpose, onapprove, onreject, createdby, createdon, modifiedby, modifiedon) FROM stdin;
\.


--
-- TOC entry 6502 (class 0 OID 2006020)
-- Dependencies: 472
-- Data for Name: axphelpdocs; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axphelpdocs (axphelpdocsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, topicid, module, topic, rtf_description, duplicatechk) FROM stdin;
\.


--
-- TOC entry 6503 (class 0 OID 2006025)
-- Dependencies: 473
-- Data for Name: axpinstance; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpinstance (axpid) FROM stdin;
\.


--
-- TOC entry 6504 (class 0 OID 2006028)
-- Dependencies: 474
-- Data for Name: axpkeywords; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpkeywords (keyword, f2) FROM stdin;
\.


--
-- TOC entry 6505 (class 0 OID 2006033)
-- Dependencies: 475
-- Data for Name: axpkt; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpkt (siteno, name, pkt, pktdate, blobno, pktname) FROM stdin;
\.


--
-- TOC entry 6506 (class 0 OID 2006038)
-- Dependencies: 476
-- Data for Name: axpmdmaps; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpmdmaps (tstruct, mname, caption, extended, mastrans, masfld, detfld, msrcfld, dtlsrcfld, mastable, updatetype, ctrlfield, mdappend, initondel, maptext, purpose, onapprove, reject, masdec, onreject, createdby, createdon, modifiedby, modifiedon) FROM stdin;
\.


--
-- TOC entry 6507 (class 0 OID 2006043)
-- Dependencies: 477
-- Data for Name: axpmsgkeywords; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpmsgkeywords (axpmsgkeywordsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, templatename) FROM stdin;
\.


--
-- TOC entry 6508 (class 0 OID 2006048)
-- Dependencies: 478
-- Data for Name: axpmsgkeywordsdtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpmsgkeywordsdtl (axpmsgkeywordsdtlid, axpmsgkeywordsid, axpmsgkeywordsdtlrow, keywords) FROM stdin;
\.


--
-- TOC entry 6509 (class 0 OID 2006051)
-- Dependencies: 479
-- Data for Name: axppopdc; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axppopdc (tstruct, dcname, frameno, parent, parentfield, heading, popcond, autoshow, autofill, firmbind, keycols, dispfield, sumformat, delimiter, addrow, showbuttons) FROM stdin;
\.


--
-- TOC entry 6510 (class 0 OID 2006056)
-- Dependencies: 480
-- Data for Name: axprintdef; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axprintdef (axprintdefid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, axprintdefname, axprintwhat, stype, axprintform, axprinttransid, axprintfilterstring, axprintformnames, axprintiview, axprintiviewname, axprintparams, sql_editor_axprintsqltext, axprintsaveto) FROM stdin;
\.


--
-- TOC entry 6511 (class 0 OID 2006061)
-- Dependencies: 481
-- Data for Name: axprintdetails; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axprintdetails (id, sessionid, username, calledon, context, act_script_name, source, structname, paramstring, fileservername, uploadtype, url, fileserverauth, urldir, printforms, outputfilepathandname, printfiletype, directprint, totallines, succlines, status) FROM stdin;
\.


--
-- TOC entry 6512 (class 0 OID 2006066)
-- Dependencies: 482
-- Data for Name: axprintexceptiondetails; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axprintexceptiondetails (id, transid, recordid, iviewname, formnames, filename, lineno, errormsg) FROM stdin;
\.


--
-- TOC entry 6513 (class 0 OID 2006071)
-- Dependencies: 483
-- Data for Name: axprinting; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axprinting (jobid, jobname, paramsnamevalue, transid, recordid, printfilename, filepath, filename, status, source, enddatetime, jobdate) FROM stdin;
\.


--
-- TOC entry 6514 (class 0 OID 2006076)
-- Dependencies: 484
-- Data for Name: axprintjobs; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axprintjobs (jobname, iviewname, printfilename) FROM stdin;
\.


--
-- TOC entry 6515 (class 0 OID 2006079)
-- Dependencies: 485
-- Data for Name: axprocess; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axprocess (eventdatetime, taskid, transid, processname, taskname, keyvalue, taskstatus) FROM stdin;
\.


--
-- TOC entry 6516 (class 0 OID 2006084)
-- Dependencies: 486
-- Data for Name: axprocessdef; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axprocessdef (axprocessdefid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, processname, indexno, subindexno, tasktype, active, taskgroupname, taskname, taskdescription, formcaption, keyfieldcaption, transid, keyfield, axpdef_peg_processmasterid, prenotify, postnotify, assignto, assigntoflg, formfieldscaption, formfieldname, assigntoactor, assigntorole, useridentificationfilter, useridentificationfilter_of, assigntouserflag, assigntouser, mapfield, mapfieldcaption, mapfield_group, formula_opr, formula_andor, applicability_tbl, applicability, exp_editor_applicability, nexttask_tbl, nexttask_truecnd, nexttask_falsecnd, nexttask, exp_editor_nexttask, displaybuttons, displayicon, displaytitle, displaysubtitle, displaycontent, displaytemplate, processownerui, processowner, processownerflg, approvereasons, defapptext, returnreasons, defrettext, rejectreasons, defregtext, execmaps, editablefieldscaption, execonapprove, approvecmt, rejectcmt, returncmt, reminder, escalation, indexdupchk, mobilenotify) FROM stdin;
\.


--
-- TOC entry 6517 (class 0 OID 2006089)
-- Dependencies: 487
-- Data for Name: axprocessdef_delegation; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axprocessdef_delegation (axprocessdef_delegationid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, fromuser, fromusername, touser, tousername, fromdate, todate) FROM stdin;
\.


--
-- TOC entry 6518 (class 0 OID 2006094)
-- Dependencies: 488
-- Data for Name: axprocessdefv2; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axprocessdefv2 (axprocessdefv2id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, processname, indexno, subindexno, tasktype, active, taskgroupname, taskname, taskdescription, formcaption, keyfieldcaption, transid, keyfield, axpdef_peg_processmasterid, postnotify, assignto, assigntoflg, formfieldscaption, formfieldname, assigntoactor, assigntorole, useridentificationfilter, useridentificationfilter_of, assigntouserflag, assigntouser, mapfield, mapfieldcaption, mapfield_group, formula_opr, formula_andor, applicability_tbl, applicability, nexttask_tbl, nexttask_truecnd, nexttask_falsecnd, nexttask, exp_editor_nexttask, displayicon, displaytitle, displaycontent, displaytemplate, processownerui, processowner, processownerflg, approvereasons, defapptext, returnreasons, defrettext, rejectreasons, defregtext, execmaps, approvecmt, rejectcmt, returncmt, reminder, escalation, groupwithprior, displaymcontent, taskparams, execonapprove, taskparamsui, displaysubtitle, displaybuttons, timelinetitle, hidecards, parenttaskname, stransid, isoptional, formcontrl, postnotify_return, postnotify_reject, orphan_autoapproval, returnable, usebusinessdatelogic, allowsend, allowsendflg, sendtoactor, indexdupchk, initiator_approval, postactorname, posttoprocessuser, postruledef, senduser_in, senduser_notin, skipleveluser, skiplevelcnd, formula_flds, action_buttons, editablefieldscaption, exp_editor_applicability, mobilenotify, parenttask, prenotify, allowedit, allowedittasks, allowedittasksid, autoapprove, reminderstartfrom, reminderstartwhen, escalationstartfrom, escalationstartwhen, reminderstartcnd, reminderstartfname, escalationstartcnd, escalationstartfname, cmsg_appcheckflg, cmsg_appcheck, cmsg_returnflg, cmsg_return, cmsg_rejectflg, cmsg_reject, taskbuttons, showbuttons, rem_esc_startfrom, tasknotification, approve_forwardto, return_to_priorindex) FROM stdin;
\.


--
-- TOC entry 6519 (class 0 OID 2006099)
-- Dependencies: 489
-- Data for Name: axprocessdefv2_escalation; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axprocessdefv2_escalation (axprocessdefv2_escalationid, axprocessdefv2id, axprocessdefv2_escalationrow, escalateafter, escalateday, escalatehr, escalatemin, esc_startfrom, esc_when, esc_maildays, esc_mailndays, esc_daytypeui, esc_daytype, esc_startfromcnd, esc_startfromfname, esc_frequency, esc_frq_daytype, escalate, escalatetoactor, escalatetemplate, escalateflg, escalate_notifyto, notifytoactor) FROM stdin;
\.


--
-- TOC entry 6520 (class 0 OID 2006104)
-- Dependencies: 490
-- Data for Name: axprocessdefv2_formctls; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axprocessdefv2_formctls (axprocessdefv2_formctlsid, axprocessdefv2id, axprocessdefv2_formctlsrow, cmd, tbldtls, axpscript, pcnd) FROM stdin;
\.


--
-- TOC entry 6521 (class 0 OID 2006109)
-- Dependencies: 491
-- Data for Name: axprocessdefv2_reminder; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axprocessdefv2_reminder (axprocessdefv2_reminderid, axprocessdefv2id, axprocessdefv2_reminderrow, remindafter, remindday, reminderhr, remindmin, rem_startfrom, rem_startafter, rem_when, rem_maildays, rem_mailndays, rem_daytypeui, rem_daytype, rem_startfromcnd, rem_startfromfname, rem_frequency, rem_frq_daytype, remindnotify, rem_stopafter) FROM stdin;
\.


--
-- TOC entry 6522 (class 0 OID 2006114)
-- Dependencies: 492
-- Data for Name: axprocessdefv2_setval; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axprocessdefv2_setval (axprocessdefv2_setvalid, axprocessdefv2id, axprocessdefv2_setvalrow, setval_formcaption, setval_formname, tblsetval) FROM stdin;
\.


--
-- TOC entry 6523 (class 0 OID 2006119)
-- Dependencies: 493
-- Data for Name: axprops; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axprops (name, caption, props, blobno, updatedon, createdon, importedon, createdby, updatedby, importedby, readonly, updusername) FROM stdin;
\.


--
-- TOC entry 6524 (class 0 OID 2006124)
-- Dependencies: 494
-- Data for Name: axpscriptrunner; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpscriptrunner (axpscriptrunnerid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, usr, script_id, script_date, script_type, script_purpose, script_text, status, tab_name, trg_name, rows_affected) FROM stdin;
\.


--
-- TOC entry 6525 (class 0 OID 2006129)
-- Dependencies: 495
-- Data for Name: axpselectionc; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpselectionc (selection) FROM stdin;
\.


--
-- TOC entry 6526 (class 0 OID 2006132)
-- Dependencies: 496
-- Data for Name: axpselectiond; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpselectiond (selection) FROM stdin;
\.


--
-- TOC entry 6527 (class 0 OID 2006135)
-- Dependencies: 497
-- Data for Name: axpselectionn; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpselectionn (selection) FROM stdin;
\.


--
-- TOC entry 6528 (class 0 OID 2006138)
-- Dependencies: 498
-- Data for Name: axpstructconfig; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpstructconfig (axpstructconfigid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, asprops, setype, props, context, propvalue1, uploadfiletype, propvalue2, propsval, alluserroles, structcaption, structname, structelements, sfield, icolumn, sbutton, hlink, stype, userroles, dupchk, purpose, structelements1) FROM stdin;
\.


--
-- TOC entry 6529 (class 0 OID 2006143)
-- Dependencies: 499
-- Data for Name: axpstructconfigprops; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpstructconfigprops (axpstructconfigpropsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, configprops, propcode, description, dupchk, context, ptype, caction, chyperlink, cfields, alltstructs, alliviews, alluserroles) FROM stdin;
\.


--
-- TOC entry 6530 (class 0 OID 2006148)
-- Dependencies: 500
-- Data for Name: axpstructconfigproval; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpstructconfigproval (axpstructconfigprovalid, axpstructconfigpropsid, axpstructconfigprovalrow, configvalues) FROM stdin;
\.


--
-- TOC entry 6531 (class 0 OID 2006151)
-- Dependencies: 501
-- Data for Name: axptree; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axptree (name, caption, props, blobno, updatedon, createdon, importedon, createdby, updatedby, importedby, readonly, updusername) FROM stdin;
\.


--
-- TOC entry 6532 (class 0 OID 2006156)
-- Dependencies: 502
-- Data for Name: axptreeviewdetails; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axptreeviewdetails (viewname, tstruct_node, treename, iviewname, img, type) FROM stdin;
\.


--
-- TOC entry 6533 (class 0 OID 2006159)
-- Dependencies: 503
-- Data for Name: axptreeviews; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axptreeviews (vname, viewname, treename, applyon, img, type) FROM stdin;
\.


--
-- TOC entry 6534 (class 0 OID 2006162)
-- Dependencies: 504
-- Data for Name: axptstructs; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axptstructs (tstruct, caption, savectrlfld, delctrlfld, trackchanges, attach, searchcond, listview, schemaname, workflow, purpose, traceability, allflds, trackflds, allusers, trackusers, updatedon, createdby, createdon, modifiedby, modifiedon) FROM stdin;
\.


--
-- TOC entry 6535 (class 0 OID 2006167)
-- Dependencies: 505
-- Data for Name: axpublishbackup_ax_layoutdesign; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpublishbackup_ax_layoutdesign (design_id, transid, module, content, created_by, updated_by, is_deleted, is_private, created_on, updated_on, is_migrated, publishno) FROM stdin;
\.


--
-- TOC entry 6536 (class 0 OID 2006172)
-- Dependencies: 506
-- Data for Name: axpublishbackup_axpdef_tstruct; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpublishbackup_axpdef_tstruct (axpdef_tstructid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, recid, ntransid, caption, fieldcount, purpose, isacoretrans, menuposition, menulist, pageid, ttrackchanges, trackchanges, trackchangesmadeby, trackchangesfield, selectuserlist, selectfieldlist, tattachment, attachment, tlistview, listview, schema, tworkflow, workflow, cupdatedon, savecontrolfield, deletecontrolfield, cstring, allfillgrids, allgenmaps, allmdmaps, layouttype, structname, pcaptitle, axlibrary, savecontrolfielddl, deletecontrolfielddl, includepage, runtimemod, runtimetstruct, cachedsave, savemode, apiqueuename, savequeuename, notificationsonsave, notificationtemplates, printonsave, printtemplates, printtoqueue, printqueuename, printdirect, printinviewmode, printviewroles, enablelviewdesign, publishno) FROM stdin;
\.


--
-- TOC entry 6537 (class 0 OID 2006177)
-- Dependencies: 507
-- Data for Name: axpublishbackup_axpflds; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpublishbackup_axpflds (tstruct, itype, fname, caption, datatype, datawidth, flddecimal, modeofentry, expression, valexpr, srctf, purpose, fldsql, srcfld, hidden, readonly, savevalue, dcname, ordno, customdatatype, stype, allowempty, allowduplicate, tabstop, setcarry, applycomma, onlypositive, clientvalidate, mask, pattern, hint, pwordchar, srckey, sgwidth, sgheight, cfield, srctrans, scol, autoselect, linkfield, suggestive, ctype, disptype, sep, font, color, refreshonsave, searchsql, dispdet, depflds, parentflds, listvalues, autogendet, tablename, asgrid, frmno, tlhw, lbltlhw, runtimefld, applyrule, displaytotal, createdby, createdon, modifiedby, modifiedon, encrypted, masking, lastcharmask, firstcharmask, maskchar, maskroles, customdecimal, publishno) FROM stdin;
\.


--
-- TOC entry 6538 (class 0 OID 2006182)
-- Dependencies: 508
-- Data for Name: axpublishbackup_axtoolbar; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpublishbackup_axtoolbar (name, stype, title, key, folder, action, task, script, icon, parent, haschildren, ordno, footer, visible, parentdc, "position", api, publishno) FROM stdin;
\.


--
-- TOC entry 6539 (class 0 OID 2006187)
-- Dependencies: 509
-- Data for Name: axpublishbackup_lviews; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpublishbackup_lviews (name, caption, username, props, blobno, updatedon, createdon, importedon, createdby, updatedby, importedby, readonly, transid, updusername, publishno) FROM stdin;
\.


--
-- TOC entry 6540 (class 0 OID 2006192)
-- Dependencies: 510
-- Data for Name: axpublishbackup_tstructs; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpublishbackup_tstructs (name, caption, props, blobno, updatedon, createdon, importedon, createdby, updatedby, importedby, readonly, updusername, workflow, runtimetstruct, runtimemod, publishno) FROM stdin;
\.


--
-- TOC entry 6541 (class 0 OID 2006197)
-- Dependencies: 511
-- Data for Name: axpublishhistory; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpublishhistory (transid, transtype, publishedon, publishedby, publishno, remarks) FROM stdin;
\.


--
-- TOC entry 6542 (class 0 OID 2006202)
-- Dependencies: 512
-- Data for Name: axpublishreport; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpublishreport (transid, publishedon, publishedby, status, remarks, createdon, publishedto, transtype) FROM stdin;
\.


--
-- TOC entry 6543 (class 0 OID 2006208)
-- Dependencies: 513
-- Data for Name: axpweblogs; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpweblogs (username, logtime, type, sessionid, ipaddress, logdetails) FROM stdin;
\.


--
-- TOC entry 6544 (class 0 OID 2006213)
-- Dependencies: 514
-- Data for Name: axpws_config; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axpws_config (transid, iviewname, fldname, printformname, versionno) FROM stdin;
\.


--
-- TOC entry 6545 (class 0 OID 2006216)
-- Dependencies: 515
-- Data for Name: axquicklinks; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axquicklinks (axquicklinksid, name, linkname, linkurl, iconurl, linktype) FROM stdin;
\.


--
-- TOC entry 6546 (class 0 OID 2006221)
-- Dependencies: 516
-- Data for Name: axrelations; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axrelations (mstruct, dstruct, mfield, dfield, rtype) FROM stdin;
\.


--
-- TOC entry 6547 (class 0 OID 2006224)
-- Dependencies: 517
-- Data for Name: axrequest; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axrequest (requestid, requestreceivedtime, sourcefrom, requeststring, headers, params, authz, contenttype, contentlength, host, url, endpoint, requestmethod, apiname, username, additionaldetails, sourcemachineip) FROM stdin;
\.


--
-- TOC entry 6548 (class 0 OID 2006229)
-- Dependencies: 518
-- Data for Name: axresponse; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axresponse (responseid, responsesenttime, statuscode, responsestring, headers, contenttype, contentlength, errordetails, endpoint, requestmethod, username, additionaldetails, requestid, executiontime) FROM stdin;
\.


--
-- TOC entry 6549 (class 0 OID 2006234)
-- Dependencies: 519
-- Data for Name: axrulesdef; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axrulesdef (axrulesdefid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, transid, formcontrol, active, rulegroup, formcaption, uroles, isapplicable, isruntime, onchngfldname, rulename, scriptonload, formcontrolparent, onsubmit, pegrule, levelno) FROM stdin;
\.


--
-- TOC entry 6550 (class 0 OID 2006239)
-- Dependencies: 520
-- Data for Name: axrulesdef_conmsg; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axrulesdef_conmsg (axrulesdef_conmsgid, axrulesdefid, axrulesdef_conmsgrow, btnname, btnapplicable, confirm_msg, btnstransid, btnuroles, fname) FROM stdin;
\.


--
-- TOC entry 6551 (class 0 OID 2006244)
-- Dependencies: 521
-- Data for Name: axrulesdef_expr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axrulesdef_expr (axrulesdef_exprid, axrulesdefid, axrulesdef_exprrow, exp_transid, exp_fname, expr) FROM stdin;
\.


--
-- TOC entry 6552 (class 0 OID 2006249)
-- Dependencies: 522
-- Data for Name: axrulesdef_valexpr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axrulesdef_valexpr (axrulesdef_valexprid, axrulesdefid, axrulesdef_valexprrow, vexp_transid, vexp_fname, valexpr) FROM stdin;
\.


--
-- TOC entry 6553 (class 0 OID 2006254)
-- Dependencies: 523
-- Data for Name: axscheduler; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axscheduler (name, caption, props, blobno, updusername, mwd, dys, schedule, "time", updatedon, readonly, createdon, createdby, importedon, importedby, updatedby) FROM stdin;
\.


--
-- TOC entry 6554 (class 0 OID 2006259)
-- Dependencies: 524
-- Data for Name: axschema; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axschema (transid, tablename, schemaname) FROM stdin;
\.


--
-- TOC entry 6555 (class 0 OID 2006262)
-- Dependencies: 525
-- Data for Name: axscriptdef; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axscriptdef (scriptname, script, breakonerror) FROM stdin;
\.


--
-- TOC entry 6556 (class 0 OID 2006267)
-- Dependencies: 526
-- Data for Name: axscriptjobs; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axscriptjobs (jobid, scriptname, username, starttime, endtime, status, jobdate, paramsnamevalue) FROM stdin;
\.


--
-- TOC entry 6557 (class 0 OID 2006272)
-- Dependencies: 527
-- Data for Name: axsites; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axsites (sitename, siteno) FROM stdin;
\.


--
-- TOC entry 6558 (class 0 OID 2006275)
-- Dependencies: 528
-- Data for Name: axsms; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axsms (recordid, mobileno, msg, status, senton, remarks, createdon) FROM stdin;
\.


--
-- TOC entry 6562 (class 0 OID 2006283)
-- Dependencies: 532
-- Data for Name: axsql_perf; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axsql_perf (sessionid, username, calledon, structname, recordid, timetaken, dbtimetaken, servicename, serviceresult, callfinished, query_details, querytimetaken) FROM stdin;
\.


--
-- TOC entry 6563 (class 0 OID 2006288)
-- Dependencies: 533
-- Data for Name: axsrrattach; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axsrrattach (recordid, filename, template, blobno, recid) FROM stdin;
\.


--
-- TOC entry 6564 (class 0 OID 2006293)
-- Dependencies: 534
-- Data for Name: axstcattach; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axstcattach (recordid, filename, template, blobno, recid) FROM stdin;
\.


--
-- TOC entry 6565 (class 0 OID 2006298)
-- Dependencies: 535
-- Data for Name: axstructprops; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axstructprops (sname, stype, fldname, datawidth, decimals, status, errmsg) FROM stdin;
\.


--
-- TOC entry 6566 (class 0 OID 2006303)
-- Dependencies: 536
-- Data for Name: axtasks; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axtasks (fromwhom, towhom, sname, recordid, status, upddatetime, message, dueby, reportingto, dueact, app_level, notify_status) FROM stdin;
\.


--
-- TOC entry 6567 (class 0 OID 2006309)
-- Dependencies: 537
-- Data for Name: axtempuserfields; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axtempuserfields (fldname, fldtype, fldwidth, fldordno) FROM stdin;
\.


--
-- TOC entry 6568 (class 0 OID 2006312)
-- Dependencies: 538
-- Data for Name: axtoolbar; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axtoolbar (name, stype, title, key, folder, action, task, script, icon, parent, haschildren, ordno, footer, visible, parentdc, "position", api) FROM stdin;
\.


--
-- TOC entry 6569 (class 0 OID 2006317)
-- Dependencies: 539
-- Data for Name: axtranscontrol; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axtranscontrol (username, transid, sessionid, recordid, loadedon) FROM stdin;
\.


--
-- TOC entry 6570 (class 0 OID 2006320)
-- Dependencies: 540
-- Data for Name: axtstructhint; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axtstructhint (axtstructhintid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, caption_tstruct, tid, fldname, rtf_hint) FROM stdin;
\.


--
-- TOC entry 6571 (class 0 OID 2006325)
-- Dependencies: 541
-- Data for Name: axtsuserconfig; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axtsuserconfig (rolename, username, userlevel, formname, fieldname, opname, propvalue, propname) FROM stdin;
\.


--
-- TOC entry 6390 (class 0 OID 2005486)
-- Dependencies: 358
-- Data for Name: axuseraccess; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axuseraccess (rname, sname, stype, props, blobno, updatedon, actflag) FROM stdin;
\.


--
-- TOC entry 6572 (class 0 OID 2006330)
-- Dependencies: 542
-- Data for Name: axuseractivations; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axuseractivations (axuseractivationsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, pusername, usertype, isactive, authkey, utypechng, authkeyflg, userkey) FROM stdin;
\.


--
-- TOC entry 6573 (class 0 OID 2006335)
-- Dependencies: 543
-- Data for Name: axusercharts; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axusercharts (axuserchartsid, axusersid, axuserchartsrow, charts, graphtype) FROM stdin;
\.


--
-- TOC entry 6574 (class 0 OID 2006338)
-- Dependencies: 544
-- Data for Name: axusergrouping; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axusergrouping (axusergroupingid, axusersid, axug_qa) FROM stdin;
\.


--
-- TOC entry 6391 (class 0 OID 2005491)
-- Dependencies: 359
-- Data for Name: axusergroups; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axusergroups (groupno, groupname, userroles, actflag, roletype, active, dhomepage, axusergroupsid, cancel, sourceid, cancelremarks, homepage, modifiedon, wkid, app_level, app_desc, selfregistration, approvedby, apprequired) FROM stdin;
\.


--
-- TOC entry 6575 (class 0 OID 2006343)
-- Dependencies: 545
-- Data for Name: axusergroupsdetail; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axusergroupsdetail (axusergroupsdetailid, axusergroupsid, axusergroupsdetailrow, roles_id) FROM stdin;
\.


--
-- TOC entry 6392 (class 0 OID 2005497)
-- Dependencies: 360
-- Data for Name: axuserlevelgroups; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axuserlevelgroups (username, usergroup, startdate, enddate, axuserlevelgroupsrow, axusername, axusergroup, axusersid, axuserlevelgroupsid) FROM stdin;
\.


--
-- TOC entry 6576 (class 0 OID 2006346)
-- Dependencies: 546
-- Data for Name: axuserpermissions; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axuserpermissions (axuserpermissionsid, axusersid, axuserpermissionsrow, axuserrole, cnd, axup_qa) FROM stdin;
\.


--
-- TOC entry 6577 (class 0 OID 2006351)
-- Dependencies: 547
-- Data for Name: axuserprofile; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axuserprofile (username, userprofile, blobno) FROM stdin;
\.


--
-- TOC entry 6578 (class 0 OID 2006356)
-- Dependencies: 548
-- Data for Name: axuserprofileimage; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axuserprofileimage (username, userimage, blobno) FROM stdin;
\.


--
-- TOC entry 6579 (class 0 OID 2006361)
-- Dependencies: 549
-- Data for Name: axusers; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axusers (username, password, usergroup, groupno, build, manage, tools, email, pageaccess, active, reportingto, isfirsttime, workflow, webskin, send, actflag, logintry, pwdexpdays, importstruct, language_access, language, exportstruct, axpertmanager, pwd, accesscode, appparams, appmanager, debug, carddetails, import_data, pusername, export_data, branchlocationname, nickname, ppassword, consolidated_usergroups, usertype, user_groups, actors, mobile, access_alldata, access_teamsdata, access_subordinatesdata, consolidated_accessusergroups, access_officelocation, team_leader, pwdauth, otpauth, allusergroup, dhomepage, global_displaytext, poweruser, isuniquehybrid, axlang, cancelremarks, axusersid, cancel, sourceid, homepage, singleloginkey, emailpassword, appmgraccess, usergroups, adminaccess, portaluser, authkey, oldportaluser, userkey) FROM stdin;
\.


--
-- TOC entry 6580 (class 0 OID 2006367)
-- Dependencies: 550
-- Data for Name: axuserspwdpolicy; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axuserspwdpolicy (username, pwdchangedate, pwdchange, prevpwds) FROM stdin;
\.


--
-- TOC entry 6581 (class 0 OID 2006372)
-- Dependencies: 551
-- Data for Name: axusrhistory; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axusrhistory (recordid, modifieddate, username, fieldname, oldvalue, newvalue, rowno, delflag, modno, frameno, parentrow, tablerecid, idvalue, oldidvalue, transdeleted, newtrans, canceltrans, cancelremarks) FROM stdin;
\.


--
-- TOC entry 6582 (class 0 OID 2006377)
-- Dependencies: 552
-- Data for Name: axusrprofilepic; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axusrprofilepic (recordid, img, blobno, ftype) FROM stdin;
\.


--
-- TOC entry 6583 (class 0 OID 2006382)
-- Dependencies: 553
-- Data for Name: axvarcore; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axvarcore (axvarcoreid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, vpname, isparam, vscript, pcaption, pdatatype, modeofentry, masterdlui, masterdl, source, sql_editor_psql, vpvalue, display, readonly, customdatatype, datawidth, isappparam, constant_name, constant_value, isconstant, var_name, exp_editor_varscript, isvariable, db_funtion, db_funtion_params, isdbobj, event_onlogin, event_onformload, forms, event_onreportload, reports, remarks, stransid, axvarname, dbvarname, dbvartype, dbvarval, dbvarsourceid, forms_transid, reports_transid) FROM stdin;
\.


--
-- TOC entry 6584 (class 0 OID 2006387)
-- Dependencies: 554
-- Data for Name: axworkflow; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axworkflow (name, caption, rname, props, blobno, updatedon, createdon, importedon, createdby, updatedby, importedby, readonly, updusername, wno, appemail, mailcontent, chkms, url, attach, auth) FROM stdin;
\.


--
-- TOC entry 6585 (class 0 OID 2006392)
-- Dependencies: 555
-- Data for Name: axworkflowmail; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axworkflowmail (sname, recordid, updusername, app_datetime, app_level, status, errmsg) FROM stdin;
\.


--
-- TOC entry 6586 (class 0 OID 2006397)
-- Dependencies: 556
-- Data for Name: axxuc1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axxuc1 (axxuc1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, document_date, axp_dcstate, present_isactive, isactive, changed_by, user_name, effective_date, change_parameter, pconsolidated_userroles, consolidated_userroles) FROM stdin;
\.


--
-- TOC entry 6587 (class 0 OID 2006402)
-- Dependencies: 557
-- Data for Name: axxuc2; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axxuc2 (axxuc2id, axxuc1id, axxuc2row, user_roles_name, effective_from, effective_to, user_name_onroles, users_logindetailsid, axusersid) FROM stdin;
\.


--
-- TOC entry 6588 (class 0 OID 2006405)
-- Dependencies: 558
-- Data for Name: axxuc3; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axxuc3 (axxuc3id, axxuc1id, present_branchlocation, team_leader, users_branchlocationname, present_reportingmanager, primary_reporting_manager, present_teamleader) FROM stdin;
\.


--
-- TOC entry 6589 (class 0 OID 2006410)
-- Dependencies: 559
-- Data for Name: axxuc4; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axxuc4 (axxuc4id, axxuc1id, present_accesstoalldata, access_alldata, present_accessteamsdata, access_teamsdata, present_accesstosubordinates, access_subordinatesdata, present_accessofficelocation, access_officelocation) FROM stdin;
\.


--
-- TOC entry 6590 (class 0 OID 2006413)
-- Dependencies: 560
-- Data for Name: axxuc5; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axxuc5 (axxuc5id, axxuc1id, new_password, ppassword) FROM stdin;
\.


--
-- TOC entry 6591 (class 0 OID 2006416)
-- Dependencies: 561
-- Data for Name: axxuc6; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axxuc6 (axxuc6id, axxuc1id, pconsolidated_adminaccess, consolidated_adminaccess) FROM stdin;
\.


--
-- TOC entry 6592 (class 0 OID 2006421)
-- Dependencies: 562
-- Data for Name: axxuc7; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axxuc7 (axxuc7id, axxuc1id, pconsolidated_usergroups, consolidated_usergroups) FROM stdin;
\.


--
-- TOC entry 6593 (class 0 OID 2006426)
-- Dependencies: 563
-- Data for Name: axxuc8; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axxuc8 (axxuc8id, axxuc1id, pconsolidated_actors, consolidated_actors) FROM stdin;
\.


--
-- TOC entry 6594 (class 0 OID 2006431)
-- Dependencies: 564
-- Data for Name: axxuc9; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.axxuc9 (axxuc9id, axxuc1id, testdata) FROM stdin;
\.


--
-- TOC entry 6595 (class 0 OID 2006434)
-- Dependencies: 565
-- Data for Name: backupdate; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.backupdate (taskid, sts, createdby, actedon, reason) FROM stdin;
\.


--
-- TOC entry 6596 (class 0 OID 2006439)
-- Dependencies: 566
-- Data for Name: bk19924_ax_layoutdesign; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.bk19924_ax_layoutdesign (design_id, transid, module, content, created_by, updated_by, is_deleted, is_private, created_on, updated_on, is_migrated) FROM stdin;
\.


--
-- TOC entry 6597 (class 0 OID 2006444)
-- Dependencies: 567
-- Data for Name: bk19924_ax_layoutdesign_saved; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.bk19924_ax_layoutdesign_saved (design_id, transid, module, content, created_by, updated_by, is_deleted, created_on, updated_on, is_migrated, is_publish, is_private, parent_design_id, responsibility, order_by) FROM stdin;
\.


--
-- TOC entry 6598 (class 0 OID 2006449)
-- Dependencies: 568
-- Data for Name: bk_taskf_hdr_170725; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.bk_taskf_hdr_170725 (taskf_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, uname, sequencename, taskgroup, tasksubgroup, assigneddate, expectedcompletiondate, taskdescription, axpfile_attach, axpfilepath_attach, assignby, assignto, dtraineetype, duedate, viewby, reassignedto, reassigneby, status, axmember, enablec, control, rescheduledby, rescheduleddate, forwardedto, forwardedby, reassignedtime, forwardedtime, taskid, ctrreadonly, completiondate, priority, astatus, fstatus, subtype, moreinfo, dynamicjson, assignnto, acceptedby, startedby, putonholdby, completedby, closedby, droppedby, taskname, taskcategory, fromdate, todate, city, modeoftravel, accomodation, reimbursementamount, datee, instance, schema, project, partner, customer, nooftrainees, startdate, "position", count, skill, demoto, demodate, demotime, reasonforapply, ctrsubmit, slrestriction, axg_qa, returnto, returnby, lastaction, lastactionby, lastactiondate, lastactionreason, axpfilepath_lastaction, taskcatdmy, rmchk, axpfile_lastaction, lastactionremarks) FROM stdin;
\.


--
-- TOC entry 6599 (class 0 OID 2006454)
-- Dependencies: 569
-- Data for Name: bugtr1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.bugtr1 (bugtr1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskid, tasknme, priority, assignto, currencydata, getddat, table1, table2, pparams, tablee) FROM stdin;
\.


--
-- TOC entry 6600 (class 0 OID 2006459)
-- Dependencies: 570
-- Data for Name: city; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.city (cityid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, city_sname, city_name, country, state, active) FROM stdin;
\.


--
-- TOC entry 6601 (class 0 OID 2006464)
-- Dependencies: 571
-- Data for Name: clien1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.clien1 (clien1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, clientid, name) FROM stdin;
\.


--
-- TOC entry 6602 (class 0 OID 2006469)
-- Dependencies: 572
-- Data for Name: close1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.close1 (close1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskid, taskname, taskclosedate, status, closedby, taskid_r, assignedby, assignto, duedate, expectedcompletiondate, assigneddate, taskdescription, closetime, requeststatus, rejectreason, category, axpfile_attach, axpfilepath_attach, remarks, reasonforapply, tagpeople, emailto) FROM stdin;
\.


--
-- TOC entry 6603 (class 0 OID 2006474)
-- Dependencies: 573
-- Data for Name: company_details; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.company_details (company_detailsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, company_name, business_vertical, company_country, company_state, company_address, company_regno, company_displaytitle) FROM stdin;
\.


--
-- TOC entry 6604 (class 0 OID 2006479)
-- Dependencies: 574
-- Data for Name: complete_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.complete_hdr (complete_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskname, taskid, assignby, assignedto, assigneddate, status, ecd, duedate, cdate, ctime, description, comments, completedby, ctrsubmit, axpfile_attach, axpfilepath_attach, resolutiontype, tagpeople, emailto) FROM stdin;
\.


--
-- TOC entry 6605 (class 0 OID 2006484)
-- Dependencies: 575
-- Data for Name: connectinfo; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.connectinfo (connectno, lastupdated, lastnumber, active) FROM stdin;
\.


--
-- TOC entry 6606 (class 0 OID 2006487)
-- Dependencies: 576
-- Data for Name: connections; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.connections (sessionid, logintime, username, usergroup, groupno, project, pageaccess, appvars, userroles, ip, transidlist) FROM stdin;
\.


--
-- TOC entry 6608 (class 0 OID 2006493)
-- Dependencies: 578
-- Data for Name: coretstructdtls; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.coretstructdtls (coretstructdtlsid, coretstructhdrid, coretstructdtlsrow, listofvalues, getallvalue) FROM stdin;
\.


--
-- TOC entry 6609 (class 0 OID 2006498)
-- Dependencies: 579
-- Data for Name: coretstructdtlsauto; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.coretstructdtlsauto (coretstructdtlsautoid, coretstructhdrid, coretstructdtlsautorow, prefix, prefixfield, description, startingno, active, noofdigits, dupck) FROM stdin;
\.


--
-- TOC entry 6610 (class 0 OID 2006501)
-- Dependencies: 580
-- Data for Name: coretstructhdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.coretstructhdr (coretstructhdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, recid, stransid, dcname, asgrid, assgrid, ctdc, numone, dcid, field_maxnum, ctfield, name, caption, customdatatype, datatype, datawidth, fdecimal, modeofentry, axp_web_sqlexp_val_def_restrad, sql_editor_detail, suggestive, refreshonsave, autoselect, selectform_, savenormalized, sql_editor_test, sql_editor_sqltext, sqlexta, ptableid, firstcolvalue, tablename, windowwidth, windowheight, datasource, sourcefield, sourcetable, refreshonsav, autoselect_sql, combobox_sql, dynamicfiltercnt, selectform, fromtransid, selectfield, tname, sql_editor_sqltextform, windowwidth_form, windowheight_form, datasource_form, savenormalized_form, refreshonsave_form, autoselect_form, combobox_form, master, v_sql, splitcolumns, source, suggestive_fill, customtype, exp_editor_expression, exp_editor_validateexpression, purpose, hidden, allowempty, readonly, allowduplicate, savevale, dupchk, fdetails, frules, createafter, ordno, sorderno, fldordno, type, setcarry, onlypositive, applycomma, clienvalidation, tabstop, mask, pattern, pwdchar, hint, searchsql, displaydetails, componenttype, separator) FROM stdin;
\.


--
-- TOC entry 6611 (class 0 OID 2006506)
-- Dependencies: 581
-- Data for Name: cusdt1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.cusdt1 (cusdt1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, customerid, customername, partnername, contactperson, mobileno, mailid, website, address, city, state, country, pincode, industry, startdate) FROM stdin;
\.


--
-- TOC entry 6612 (class 0 OID 2006511)
-- Dependencies: 582
-- Data for Name: customtypes; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.customtypes (customtypesid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, typename, datatype, width, deci, namecheck, replacechar, fcharcheck, validchk, modeofentry, cvalues, defaultvalue, sql_editor_details, exp_editor_expression, exp_editor_validateexpression, readonly, chide, cpattern, cmask, cregularexpress) FROM stdin;
\.


--
-- TOC entry 6613 (class 0 OID 2006516)
-- Dependencies: 583
-- Data for Name: demo; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.demo (demoid, name, demo001, shilpa) FROM stdin;
\.


--
-- TOC entry 6614 (class 0 OID 2006519)
-- Dependencies: 584
-- Data for Name: drop1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.drop1 (drop1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskid, assignedate, assignor, dropdate, reason, status, taskname, droptask, pusername, taskid_r, droptime, expectedcompletiondate, duedate, assignto, taskdescription, estatus, droppedby, axpfile_attach, axpfilepath_attach, tagpeople, emailto) FROM stdin;
\.


--
-- TOC entry 6615 (class 0 OID 2006524)
-- Dependencies: 585
-- Data for Name: dsignconfig; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.dsignconfig (dsignconfigid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, transname, stransid, tunique, docname, doctype, duplicatecheck) FROM stdin;
\.


--
-- TOC entry 6616 (class 0 OID 2006529)
-- Dependencies: 586
-- Data for Name: dsignconfigdtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.dsignconfigdtl (dsignconfigdtlid, dsignconfigid, dsignconfigdtlrow, prolename, pusername, ordno, semail, ssms, axpmailid) FROM stdin;
\.


--
-- TOC entry 6617 (class 0 OID 2006532)
-- Dependencies: 587
-- Data for Name: dual; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.dual (lval) FROM stdin;
\.


--
-- TOC entry 6618 (class 0 OID 2006535)
-- Dependencies: 588
-- Data for Name: dwb_iviews; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.dwb_iviews (dwb_iviewsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, recid, name, replacechar, fcharcheck, validchk, caption, stype, type, task, cat, sname, sql_editor_iviewsql, ddldatatype, paramscal, paramscount, def_table_params, iviewparams, iviewparamscal, pagecreate, isacoretrans, menuposition, menulist, captitle, imodifiedon, imodifiedby, xmlgeneratedon) FROM stdin;
\.


--
-- TOC entry 6619 (class 0 OID 2006540)
-- Dependencies: 589
-- Data for Name: dwb_publishprops; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.dwb_publishprops (dwb_publishpropsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, servertype, servername, serverpath, app_connection, fs_username, fs_password, inactive, uploadtype, ftp_url, ftp_dir, ftp_username, ftp_pwd, ftp_port, db_type, db_version, db_host, db_username, db_pwd, publishtodev) FROM stdin;
\.


--
-- TOC entry 6620 (class 0 OID 2006545)
-- Dependencies: 590
-- Data for Name: emaildef; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.emaildef (emaildefid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, emaildefname, emailwhat, stype, emailform, emailtransid, emailfilterstring, emailprintformnames, emailiview, emailiviewname, emailparams, sql_editor_emailsqltext, emailto, emailcc, emailbcc, emailsubject, emailattachment, emailattachrenamelist, emailbodytext, emailmsoutlook, axp_emailsource, axp_emailtransid, axp_emailiview, axp_emailto, axp_emailcc, axp_emailbcc, axp_emailsubject, axp_emailattachment, axp_emailattachrenamelist, axp_emailbody) FROM stdin;
\.


--
-- TOC entry 6621 (class 0 OID 2006550)
-- Dependencies: 591
-- Data for Name: emaildetails; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.emaildetails (id, sessionid, username, calledon, context, structtype, structname, recordid, act_script_name, params, emaildefname, totallines, succlines, status) FROM stdin;
\.


--
-- TOC entry 6622 (class 0 OID 2006555)
-- Dependencies: 592
-- Data for Name: emailexceptiondetails; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.emailexceptiondetails (id, transid, recordid, iviewname, emaildet, lineno, errormsg) FROM stdin;
\.


--
-- TOC entry 6623 (class 0 OID 2006560)
-- Dependencies: 593
-- Data for Name: empattendance; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.empattendance (empattendanceid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, punchdate, docid, empname, pempname, intime, outtime, dupcheck, nowtime, dbinouttime, dbintime, dbouttime, sqpo, sqlpunchout, valpunchin, punchin, punchout) FROM stdin;
\.


--
-- TOC entry 6624 (class 0 OID 2006565)
-- Dependencies: 594
-- Data for Name: empde1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.empde1 (empde1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, empid, salutation, fname, mname, lname, empname, dob, gender, maritalstatus, residstatus, offmail, active) FROM stdin;
\.


--
-- TOC entry 6625 (class 0 OID 2006570)
-- Dependencies: 595
-- Data for Name: empde2; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.empde2 (empde2id, empde1id, doj, typeofemp, workloc, dep, design, grade, paycat) FROM stdin;
\.


--
-- TOC entry 6626 (class 0 OID 2006573)
-- Dependencies: 596
-- Data for Name: empde3; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.empde3 (empde3id, empde1id, address, country, state, city, mobno) FROM stdin;
\.


--
-- TOC entry 6627 (class 0 OID 2006576)
-- Dependencies: 597
-- Data for Name: empde4; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.empde4 (empde4id, empde1id, mop, salarybank, salaccno) FROM stdin;
\.


--
-- TOC entry 6628 (class 0 OID 2006579)
-- Dependencies: 598
-- Data for Name: empdeprofile; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.empdeprofile (recordid, img, blobno, ftype) FROM stdin;
\.


--
-- TOC entry 6629 (class 0 OID 2006584)
-- Dependencies: 599
-- Data for Name: employee; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.employee (employeeid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, employeename, shortname, email, gender, mobileno, dateofbirth, dateofjoin, aadharno, panno, bloodgroup, emergencycontact, designation, businessrole, grade, reportingto, projectmanager, active, address, role, empid, companyname, client, worktype, location) FROM stdin;
\.


--
-- TOC entry 6630 (class 0 OID 2006589)
-- Dependencies: 600
-- Data for Name: employeeattendance; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.employeeattendance (employeeattendanceid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, viewfilter, docid, punchdate, employeename, pempname, nowtime, dbinouttime, dbintime, dbouttime, sqpo, punchin, punchout, intime, outtime) FROM stdin;
\.


--
-- TOC entry 6631 (class 0 OID 2006594)
-- Dependencies: 601
-- Data for Name: executeapidef; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.executeapidef (executeapidefid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, execapidefname, execapiurl, execapiparameterstring, execapiheaderstring, execapirequeststring, execapimethod, execapibasedon, stype, execapiform, execapitransid, execapifilterstring, execapilprintformnames, execapiformattachments, execapiiview, execapiiviewname, execapiiparams, sql_editor_execapisqltext, apicategory, apiresponsetype, apiresponseformat, execapibodyparamstring, execapiauthstring) FROM stdin;
\.


--
-- TOC entry 6632 (class 0 OID 2006599)
-- Dependencies: 602
-- Data for Name: exportdatadetails; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.exportdatadetails (sessionid, username, calledon, structname, recordid, recordcount, paramdetails, filename, mapfields, withheader) FROM stdin;
\.


--
-- TOC entry 6633 (class 0 OID 2006604)
-- Dependencies: 603
-- Data for Name: fast_print_paper_size; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.fast_print_paper_size (psize, pheight, pwidth) FROM stdin;
\.


--
-- TOC entry 6634 (class 0 OID 2006607)
-- Dependencies: 604
-- Data for Name: fillgriddef; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.fillgriddef (transid, fg_name, formsize, colsize) FROM stdin;
\.


--
-- TOC entry 6635 (class 0 OID 2006610)
-- Dependencies: 605
-- Data for Name: financialyear; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.financialyear (financialyearid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, ttype, finyr, finyridentifier, startdate, enddate, currentfinyr, active, closed) FROM stdin;
\.


--
-- TOC entry 6636 (class 0 OID 2006615)
-- Dependencies: 606
-- Data for Name: financialyeardtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.financialyeardtl (financialyeardtlid, financialyearid, financialyeardtlrow, dfinyr, periodcode, perioddesc, quarter, pstartdate, penddate, days) FROM stdin;
\.


--
-- TOC entry 6637 (class 0 OID 2006618)
-- Dependencies: 607
-- Data for Name: formsize; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.formsize (username, formname, tlhw) FROM stdin;
\.


--
-- TOC entry 6638 (class 0 OID 2006621)
-- Dependencies: 608
-- Data for Name: groupbtns; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.groupbtns (groupbtnsid, tconfigurationid, groupbtnsrow, groupbtnname, groupbuttons, tmpgroup, bcondition) FROM stdin;
\.


--
-- TOC entry 6639 (class 0 OID 2006624)
-- Dependencies: 609
-- Data for Name: htmlprint; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.htmlprint (htmlprintid, tconfigurationid, htmlprintrow, html_buttonname, html_filename, html_fields, t_fields, t_file, ccondition) FROM stdin;
\.


--
-- TOC entry 6640 (class 0 OID 2006627)
-- Dependencies: 610
-- Data for Name: htmlsections; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.htmlsections (htmlsectionsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, pageno, caption, axpfile_hpimages, axpfilepath_hpimages, addtomenu, isacoretrans, menuposition, menulist, params, template) FROM stdin;
\.


--
-- TOC entry 6641 (class 0 OID 2006632)
-- Dependencies: 611
-- Data for Name: iconfiguration; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.iconfiguration (iconfigurationid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, structname, structtransid, configname2, cntval, cv_groupbuttons) FROM stdin;
\.


--
-- TOC entry 6642 (class 0 OID 2006637)
-- Dependencies: 612
-- Data for Name: iconfigurationdtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.iconfigurationdtl (iconfigurationdtlid, iconfigurationid, iconfigurationdtlrow, groupbtnname, groupbuttons, tmpgroup, bcondition) FROM stdin;
\.


--
-- TOC entry 6643 (class 0 OID 2006642)
-- Dependencies: 613
-- Data for Name: images; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.images (name, img, blobno, updatedon, imgcount) FROM stdin;
\.


--
-- TOC entry 6644 (class 0 OID 2006647)
-- Dependencies: 614
-- Data for Name: importdatacompletion; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.importdatacompletion (id, rapidimpid, sessionid, username, calledon, structname, filename, recordcount, success, resultmsg, errlist, blobno) FROM stdin;
\.


--
-- TOC entry 6645 (class 0 OID 2006652)
-- Dependencies: 615
-- Data for Name: importdatadetails; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.importdatadetails (sessionid, username, calledon, structname, recordid, recordcount, paramdetails, filename, success, id, mapfields, infile, rapidimpid) FROM stdin;
\.


--
-- TOC entry 6646 (class 0 OID 2006657)
-- Dependencies: 616
-- Data for Name: importdataexceptions; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.importdataexceptions (sessionid, username, calledon, recordno, errormsg, id, rapidimpid) FROM stdin;
\.


--
-- TOC entry 6266 (class 0 OID 2004873)
-- Dependencies: 230
-- Data for Name: inbound; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.inbound (inboundid, filename, recdon, transid, instatus) FROM stdin;
\.


--
-- TOC entry 6649 (class 0 OID 2006662)
-- Dependencies: 619
-- Data for Name: iviewbuttons; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.iviewbuttons (iname, button_name, caption, hint, type, img, "position", flat, sname, bcontainer, action, btask, bdef, cat, bparent, tlhw, font, down, ptype, bcolor, bfile, balign, ordno) FROM stdin;
\.


--
-- TOC entry 6650 (class 0 OID 2006667)
-- Dependencies: 620
-- Data for Name: iviewcols; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.iviewcols (iname, icaption, f_name, f_caption, query_name, decimals, datatype, hidden, expression, running_total, display_total, no_repeat, apply_comma, set_factor, alignment, col_seperator, zero_off, color, font, dos_graphicmode, linespace, before_fill, click, dblclick, table_name, search_name, group_no, group_heading, column_width, disp_expr, compute_post, set_cellfont, colcat, ordno) FROM stdin;
\.


--
-- TOC entry 6651 (class 0 OID 2006672)
-- Dependencies: 621
-- Data for Name: iviewcomps; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.iviewcomps (iname, localnum, abtn, vupd, pnl_height) FROM stdin;
\.


--
-- TOC entry 6652 (class 0 OID 2006675)
-- Dependencies: 622
-- Data for Name: iviewhyplink; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.iviewhyplink (iname, hypname, sname, hypsource, popup, hyprefresh, loadname, ordno) FROM stdin;
\.


--
-- TOC entry 6653 (class 0 OID 2006678)
-- Dependencies: 623
-- Data for Name: iviewhypparval; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.iviewhypparval (iname, hypname, field, parvalue) FROM stdin;
\.


--
-- TOC entry 6654 (class 0 OID 2006681)
-- Dependencies: 624
-- Data for Name: iviewmain; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.iviewmain (iname, caption, header1, header2, header3, grand_total, display_params, load_tstruct, footer1, footer2, trailing_page, printpage_total, expression_set, group_field, lines_per_page, font, row_seperator, caption_column, folder, printer_settings, option_type, total_seperator, dos_graphic_mode, line_space, condensed, page_footer1, page_footer2, page_footer3, report_footer3, recordid_column, filter_expression, factor, print_logo, heading_line_space, details_in_footer, next_queryname, transid, printer_name, report_style, print_indexpage, hidden, absolute_check, heading_color, heading1_font, heading2_font, heading3_font, odd_color, even_color, row_height, fixed_rows, paper_size, source_key, orientation, no_of_copies, open_form, extract_data, before_fill, click, dblclick, hide_firstcol, hide_column_lines, head_rowcolor, head_rowfont, sh_graph, fittopage, viewtype, header_align, footer_align, parrange, caching_type, page_size, ptable) FROM stdin;
\.


--
-- TOC entry 6655 (class 0 OID 2006686)
-- Dependencies: 625
-- Data for Name: iviewparams; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.iviewparams (iname, pname, pcaption, query_name, dtype, suggestive, exp, val_exp, hidden, decimals, value, moe, scripttext, blobno, multiselect, dynamic_param, save_value, deps, pord, param_width, clrcache, picklist_cols, ordno) FROM stdin;
\.


--
-- TOC entry 6389 (class 0 OID 2005476)
-- Dependencies: 356
-- Data for Name: iviews; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.iviews (name, caption, props, blobno, updatedon, createdon, importedon, createdby, updatedby, importedby, readonly, updusername) FROM stdin;
\.


--
-- TOC entry 6656 (class 0 OID 2006691)
-- Dependencies: 626
-- Data for Name: iviewscripts; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.iviewscripts (username, createdon, createdby, modifiedon, modifiedby, iname, event, type, name, caption, script) FROM stdin;
\.


--
-- TOC entry 6657 (class 0 OID 2006697)
-- Dependencies: 627
-- Data for Name: iviewsql; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.iviewsql (iname, scripttext, type, task, blobno, relation_field, cat, sname, ordno) FROM stdin;
\.


--
-- TOC entry 6658 (class 0 OID 2006702)
-- Dependencies: 628
-- Data for Name: iviewsubtotals; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.iviewsubtotals (iname, key_column, header, footer, caption, subtotal_order, line_space, pageskip, total_ontop, header_color, footer_color, ordno) FROM stdin;
\.


--
-- TOC entry 6659 (class 0 OID 2006707)
-- Dependencies: 629
-- Data for Name: leavereq; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.leavereq (leavereqid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, issubmit, docid, docdate, currentyear, leaveperiod, axp_wk7forceusersappr, recid, uname, usernam, userprojman, empid, eid, employeeid, empname, compid, compcode, empemail, reportto, reporttobk, rptmail, gender, mstatus, ltype, ltypedummy, ltypedummy2, empservice, service, deductleave, projectmanager, reportingmanager, fromdt, todt, ohdtchk, weekoffworking, holidaycnt, halfday, hfdaydt, hfdayval, hfdaydtpost, lyear, ldesc, dummy, ldate, lday, holiday, eligible, leave, leavecount, lactive, nndays, pmdays, fdummy, dupchk, projectmanmail, reportingto, status, empstatus, statusman, sqltext) FROM stdin;
\.


--
-- TOC entry 6660 (class 0 OID 2006712)
-- Dependencies: 630
-- Data for Name: leaverequest_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.leaverequest_hdr (leaverequest_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, viewfilter, issubmit, usergrp, docid, uname, year, recid, usernam, employeename, requestedto, dateofapply, reasonforapply, typeofleave, fromdate, todate, axpfile_upload, axpfilepath_upload, balanceleaves, slbalance, allocatedleaves, dupcheck) FROM stdin;
\.


--
-- TOC entry 6661 (class 0 OID 2006717)
-- Dependencies: 631
-- Data for Name: listh1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.listh1 (listh1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, docid, edate, hname) FROM stdin;
\.


--
-- TOC entry 6662 (class 0 OID 2006722)
-- Dependencies: 632
-- Data for Name: lov1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.lov1 (lov1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, lovalue, sname, tnme, taskname) FROM stdin;
\.


--
-- TOC entry 6663 (class 0 OID 2006727)
-- Dependencies: 633
-- Data for Name: lviews; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.lviews (name, caption, username, props, blobno, updatedon, createdon, importedon, createdby, updatedby, importedby, readonly, transid, updusername) FROM stdin;
\.


--
-- TOC entry 6664 (class 0 OID 2006732)
-- Dependencies: 634
-- Data for Name: materialrequest_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.materialrequest_hdr (materialrequest_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, docid, employee, dateofapply, requestto, required, details, axpfile_upload, axpfilepath_upload) FROM stdin;
\.


--
-- TOC entry 6665 (class 0 OID 2006737)
-- Dependencies: 635
-- Data for Name: meete1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.meete1 (meete1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, meetingid, employeename, tdate, status) FROM stdin;
\.


--
-- TOC entry 6666 (class 0 OID 2006742)
-- Dependencies: 636
-- Data for Name: meetingbreak_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.meetingbreak_hdr (meetingbreak_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, employeename, datee, startbreak, purpose, convenor, intime, outtime, meetingid, dupcheck, status, pusername, duplicatemeet, endstatus, viewby) FROM stdin;
\.


--
-- TOC entry 6667 (class 0 OID 2006747)
-- Dependencies: 637
-- Data for Name: mg_accountcomp; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.mg_accountcomp (mg_accountcompid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, mg_accountcomprow, company, mg_accountid, branch) FROM stdin;
\.


--
-- TOC entry 6668 (class 0 OID 2006752)
-- Dependencies: 638
-- Data for Name: monthdtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.monthdtl (monthdtlid, monthhdrid, monthdtlrow, dmonth, mdate, mday, status) FROM stdin;
\.


--
-- TOC entry 6669 (class 0 OID 2006755)
-- Dependencies: 639
-- Data for Name: monthhdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.monthhdr (monthhdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, month, fdate, ldate, tdate) FROM stdin;
\.


--
-- TOC entry 6670 (class 0 OID 2006760)
-- Dependencies: 640
-- Data for Name: msgs1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.msgs1 (msgtime, msg, msgfrom, msgto, sname, readflag, recordid, msgno) FROM stdin;
\.


--
-- TOC entry 6671 (class 0 OID 2006765)
-- Dependencies: 641
-- Data for Name: msgs2; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.msgs2 (msgtime, msg, msgfrom, msgto, sname, readflag, recordid, msgno) FROM stdin;
\.


--
-- TOC entry 6672 (class 0 OID 2006770)
-- Dependencies: 642
-- Data for Name: mshaosema4; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.mshaosema4 (selection) FROM stdin;
\.


--
-- TOC entry 6673 (class 0 OID 2006775)
-- Dependencies: 643
-- Data for Name: ongoingtasks; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ongoingtasks (taskid, username, startdate, starttime, enddate, endtime) FROM stdin;
\.


--
-- TOC entry 6279 (class 0 OID 2004944)
-- Dependencies: 244
-- Data for Name: outbound; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.outbound (outboundid, transid, recordid, oaction, username, modifiedon, senton, sap_integration_status) FROM stdin;
\.


--
-- TOC entry 6676 (class 0 OID 2006780)
-- Dependencies: 646
-- Data for Name: partnerdetails; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.partnerdetails (partnerdetailsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, partnerid, companyname, contactperson, mobileno, mailid, website, address, city, state, country, pincode, startdate, industry) FROM stdin;
\.


--
-- TOC entry 6677 (class 0 OID 2006785)
-- Dependencies: 647
-- Data for Name: payin1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.payin1 (payin1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, empid, empname, doj, effectdate, payfreq) FROM stdin;
\.


--
-- TOC entry 6678 (class 0 OID 2006790)
-- Dependencies: 648
-- Data for Name: pdfimage; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.pdfimage (name, pdfname, img, blobno) FROM stdin;
\.


--
-- TOC entry 6679 (class 0 OID 2006795)
-- Dependencies: 649
-- Data for Name: pdfprops; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.pdfprops (name, caption, blobno, props, updatedon, createdon, importedon, createdby, updatedby, importedby, readonly, updusername, transid) FROM stdin;
\.


--
-- TOC entry 6680 (class 0 OID 2006800)
-- Dependencies: 650
-- Data for Name: period; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.period (periodvalues) FROM stdin;
\.


--
-- TOC entry 6681 (class 0 OID 2006803)
-- Dependencies: 651
-- Data for Name: pnchhistory; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.pnchhistory (recordid, modifieddate, username, fieldname, oldvalue, newvalue, rowno, delflag, modno, frameno, parentrow, tablerecid, idvalue, oldidvalue, transdeleted, newtrans, canceltrans, cancelremarks) FROM stdin;
\.


--
-- TOC entry 6682 (class 0 OID 2006808)
-- Dependencies: 652
-- Data for Name: pnchtrace; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.pnchtrace (transid, "time", username, xml, blobno, sessionid) FROM stdin;
\.


--
-- TOC entry 6683 (class 0 OID 2006813)
-- Dependencies: 653
-- Data for Name: popupsizes; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.popupsizes (name, tlhw) FROM stdin;
\.


--
-- TOC entry 6684 (class 0 OID 2006816)
-- Dependencies: 654
-- Data for Name: printprms; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.printprms (iview, prms) FROM stdin;
\.


--
-- TOC entry 6685 (class 0 OID 2006819)
-- Dependencies: 655
-- Data for Name: printprops; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.printprops (name, caption, blobno, props, updatedon, createdon, importedon, createdby, updatedby, importedby, readonly, updusername) FROM stdin;
\.


--
-- TOC entry 6686 (class 0 OID 2006824)
-- Dependencies: 656
-- Data for Name: prints; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.prints (name, sname, template, printdoctype, caption, blobno) FROM stdin;
\.


--
-- TOC entry 6687 (class 0 OID 2006829)
-- Dependencies: 657
-- Data for Name: proje1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.proje1 (proje1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, projectid, projectname, relatedto, partnercustomer, projectmanager, active, status) FROM stdin;
\.


--
-- TOC entry 6688 (class 0 OID 2006834)
-- Dependencies: 658
-- Data for Name: publishprops; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.publishprops (servername, serverpath, ftp_path, ftp_port, ftp_username, ftp_pwd, db_type, db_host, db_username, db_pwd, ftp_dir, db_version, uploadtype, cloudflag, title, descr, dtldescr, userid, appid, masterdataapiurl, publishappapiurl) FROM stdin;
\.


--
-- TOC entry 6689 (class 0 OID 2006841)
-- Dependencies: 659
-- Data for Name: recvpkts; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.recvpkts (pktdate, fromsite, recdon, transid, pktid, recordid, mstatus, status, smode) FROM stdin;
\.


--
-- TOC entry 6690 (class 0 OID 2006846)
-- Dependencies: 660
-- Data for Name: reference; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.reference (referenceid, tconfigurationid, referencerow, ref_struct, ref_transid, master_field, source_field, ref_idcol, dcondition) FROM stdin;
\.


--
-- TOC entry 6691 (class 0 OID 2006849)
-- Dependencies: 661
-- Data for Name: result; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.result ("?column?") FROM stdin;
\.


--
-- TOC entry 6692 (class 0 OID 2006854)
-- Dependencies: 662
-- Data for Name: retun1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.retun1 (retun1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskname, assigneddate, taskid, ecd, duedate, taskdescription, status, axpfile_attach, axpfilepath_attach, remarks, assignby, returnto, assignto, returnby, ctrnotification, returnedon, returntime) FROM stdin;
\.


--
-- TOC entry 6693 (class 0 OID 2006859)
-- Dependencies: 663
-- Data for Name: searchcols; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.searchcols (searchcolsid, tconfigurationid, searchcolsrow, searchflds, acondition) FROM stdin;
\.


--
-- TOC entry 6694 (class 0 OID 2006862)
-- Dependencies: 664
-- Data for Name: searchdef; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.searchdef (transid, username, props, rolename, userlevel, smode) FROM stdin;
\.


--
-- TOC entry 6695 (class 0 OID 2006867)
-- Dependencies: 665
-- Data for Name: sect2; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.sect2 (sect2id, htmlsectionsid) FROM stdin;
\.


--
-- TOC entry 6696 (class 0 OID 2006870)
-- Dependencies: 666
-- Data for Name: sect4; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.sect4 (sect4id, htmlsectionsid, sect4row, filename, filetype) FROM stdin;
\.


--
-- TOC entry 6697 (class 0 OID 2006873)
-- Dependencies: 667
-- Data for Name: sendmsg; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.sendmsg (sendmsgid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, issubmit, mtype, docid, currdate, template, keytemplate, msgsubject, msgcontent, smsmsg) FROM stdin;
\.


--
-- TOC entry 6698 (class 0 OID 2006878)
-- Dependencies: 668
-- Data for Name: sendpkts; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.sendpkts (pktdate, tosite, transid, username, action, totransid, pktid, recordid, senton, smode, msenton, mstatus, status, pktpriority) FROM stdin;
\.


--
-- TOC entry 6699 (class 0 OID 2006882)
-- Dependencies: 669
-- Data for Name: sequence; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.sequence (sequenceid, prefix, transtype, fieldname, activesequence, description, lastno, corderby, optionname, prefixfield, noofdigits) FROM stdin;
\.


--
-- TOC entry 6700 (class 0 OID 2006887)
-- Dependencies: 670
-- Data for Name: status; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.status (statusvalue) FROM stdin;
\.


--
-- TOC entry 6701 (class 0 OID 2006890)
-- Dependencies: 671
-- Data for Name: structchanges; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.structchanges (transid, username, changedon, sqltext) FROM stdin;
\.


--
-- TOC entry 6702 (class 0 OID 2006895)
-- Dependencies: 672
-- Data for Name: structlock; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.structlock (sname, cno, lockedon) FROM stdin;
\.


--
-- TOC entry 6703 (class 0 OID 2006898)
-- Dependencies: 673
-- Data for Name: task2; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.task2 (task2id, task1id, task2row, traineename, traineetype, email) FROM stdin;
\.


--
-- TOC entry 6704 (class 0 OID 2006903)
-- Dependencies: 674
-- Data for Name: task_moreinfo; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.task_moreinfo (task_moreinfoid, taskf_hdrid, relatedto, schemaname, instancename, versionno, patchno, workstop, iscritical, servicename) FROM stdin;
\.


--
-- TOC entry 6705 (class 0 OID 2006906)
-- Dependencies: 675
-- Data for Name: task_nw; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.task_nw (task_nwid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, task_id, taskdate, taskgrp, taskname, relatedto, versionno, patchno, instancename, schemaname, workissue, iscritical, serviceneed, assignto, expectedcompletiondate, description, axpfile_attach, axpfilepath_attach, workassigned, dtraineetype, assignedby, tasktype, tasksubgroup) FROM stdin;
\.


--
-- TOC entry 6706 (class 0 OID 2006911)
-- Dependencies: 676
-- Data for Name: taskaccept_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskaccept_hdr (taskaccept_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskname, taskdate, expectedcompetiondate, assignby, duedate, assignto, acceptedon, pusername, axmember, ctr, assignedto, action, status, ongoingtask, description, note, ctraccept, ctracceptstart, acceptstarttime, ctrhold, assigningreason, reassignedtime) FROM stdin;
\.


--
-- TOC entry 6707 (class 0 OID 2006916)
-- Dependencies: 677
-- Data for Name: taskaccepthdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskaccepthdr (taskaccepthdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskname, assigneddate, expectedcompletiondate, assignby, assignto, action, duedate, assignedto, acceptedon, acceptedby, axmember, ctr, status, dupcheck, description, note, ctraccept, ctracceptstart, reassigningreason, reassignedtime, starttime, ongoingtask, ctrnotification, taskid, ctrhold, edate, axpfile_attach, axpfilepath_attach, acceptstart, acccepttime, tagpeople, emailto) FROM stdin;
\.


--
-- TOC entry 6708 (class 0 OID 2006921)
-- Dependencies: 678
-- Data for Name: taskamendhistory; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskamendhistory (taskamendhistoryid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskid, amendfield, taskname, taskdescription, ecd, axpfile_upload, axpfile_attach, axpfilepath_attach, taskn, taskd, expectedcompletion, duedate, status, axpfilepath_upload, amendfieldcnd, updatetaskname, updatetaskd, updateduedate) FROM stdin;
\.


--
-- TOC entry 6709 (class 0 OID 2006926)
-- Dependencies: 679
-- Data for Name: taskassign_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskassign_hdr (taskassign_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskid, taskname, taskdate, expectedcompetiondate, assignby, description, duedate, acceptedon, assignto, status, axmember, reassignedby, reasonforassigning, assignedtime, reassigneddate, ctr, assignedto, ctrnotification, category, note, requeststatus, rejectreason, closecontrol, closedate, closetime, closedby, axpfile_attach, axpfilepath_attach) FROM stdin;
\.


--
-- TOC entry 6710 (class 0 OID 2006931)
-- Dependencies: 680
-- Data for Name: taskbreak_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskbreak_hdr (taskbreak_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskid, taskname, breaktime, status, breakstartdate, pusername, assignto, assignedby, taskdescription, taskassigneddate, expectedcompletiondate, duedate) FROM stdin;
\.


--
-- TOC entry 6711 (class 0 OID 2006936)
-- Dependencies: 681
-- Data for Name: taskddc1_image; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskddc1_image (recordid, img, blobno, filename) FROM stdin;
\.


--
-- TOC entry 6712 (class 0 OID 2006941)
-- Dependencies: 682
-- Data for Name: taskdetails; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskdetails (taskdetailsid, usern, taskid, taskdate, taskname, rtf_imputbox, partner, customer, project, assignto, assignedby, status, priority, taskuser, latestcomments, hoursworked) FROM stdin;
\.


--
-- TOC entry 6713 (class 0 OID 2006946)
-- Dependencies: 683
-- Data for Name: taskf_dtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskf_dtl (taskf_dtlid, taskf_hdrid, taskf_dtlrow, employeename, emailid, traineetype) FROM stdin;
\.


--
-- TOC entry 6714 (class 0 OID 2006949)
-- Dependencies: 684
-- Data for Name: taskf_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskf_hdr (taskf_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, uname, sequencename, taskgroup, tasksubgroup, assigneddate, expectedcompletiondate, taskdescription, axpfile_attach, axpfilepath_attach, assignby, assignto, dtraineetype, duedate, viewby, reassignedto, reassigneby, status, axmember, enablec, control, rescheduledby, rescheduleddate, forwardedto, forwardedby, reassignedtime, forwardedtime, taskid, ctrreadonly, completiondate, priority, astatus, fstatus, subtype, moreinfo, dynamicjson, assignnto, acceptedby, startedby, putonholdby, completedby, closedby, droppedby, taskname, taskcategory, fromdate, todate, city, modeoftravel, accomodation, reimbursementamount, datee, instance, schema, project, partner, customer, nooftrainees, startdate, "position", count, skill, demoto, demodate, demotime, reasonforapply, ctrsubmit, slrestriction, axg_qa, returnto, returnby, lastaction, lastactionby, lastactiondate, lastactionreason, axpfilepath_lastaction, taskcatdmy, rmchk, axpfile_lastaction, lastactionremarks, lastactionto, lastactionstatus, lastactiontime, component, checkpartner, checkp, instanced, sttausupdateremarks, showstopper, tagpeople, emailto, usern, pwd) FROM stdin;
\.


--
-- TOC entry 6715 (class 0 OID 2006954)
-- Dependencies: 685
-- Data for Name: taskf_moreinfo; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskf_moreinfo (taskf_moreinfoid, taskf_hdrid, relatedto, schemaname, instancename, versionno, patchno, workstop, iscritical, servicename, projectname, partnername, customername, others, moreinfo) FROM stdin;
\.


--
-- TOC entry 6716 (class 0 OID 2006959)
-- Dependencies: 686
-- Data for Name: taskgrp_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskgrp_hdr (taskgrp_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, groupname, uname, type, applicableto, applicabletocnd, usergroups, usernames, assignto, assigntocnd, enable, ausergroups, ausername) FROM stdin;
\.


--
-- TOC entry 6717 (class 0 OID 2006964)
-- Dependencies: 687
-- Data for Name: taskinformdelay_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskinformdelay_hdr (taskinformdelay_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, assigneddate, reason, ecd, duedate, status, taskname, rescheduledate, assignto, assignby, description, rescheduledtime, ctrnotification, taskid, rescheduledby, axpfile_attach, axpfilepath_attach, pusername, rescheduledon, tagpeople, reportingmanager, emailto) FROM stdin;
\.


--
-- TOC entry 6719 (class 0 OID 2006970)
-- Dependencies: 689
-- Data for Name: taskputonhold_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskputonhold_hdr (taskputonhold_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskid, taskname, onholdstart, onholdstarttime, onholdend, onholdendtime, reason, status, taskid_r, pusername, taskdescription, expectedcompletiondate, duedate, assignedby, assignto, taskdate, ctrnotification, axpfile_attach, axpfilepath_attach) FROM stdin;
\.


--
-- TOC entry 6720 (class 0 OID 2006975)
-- Dependencies: 690
-- Data for Name: taskr1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskr1 (taskr1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, tasktype, subtype, assignto, assignby, moreinfo) FROM stdin;
\.


--
-- TOC entry 6721 (class 0 OID 2006980)
-- Dependencies: 691
-- Data for Name: taskresume_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskresume_hdr (taskresume_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskid, taskname, breaktime, breakendtime, breakhours, usernam, breakendate, status, assignedby, assignto, taskdescription, assigneddate, duedate, expectedcompletiondate) FROM stdin;
\.


--
-- TOC entry 6722 (class 0 OID 2006985)
-- Dependencies: 692
-- Data for Name: tasksend_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.tasksend_hdr (tasksend_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskid, taskname, taskdate, comments, sendto, axmember, status, assignedby, pusername, forwardedby, taskdescription, expectedcompletiondate, duedate, ctrnotification, assignto, axpfile_attach, axpfilepath_attach, category, senton, senttime, showstopper, priority, taskcategory, tagpeople, emailto) FROM stdin;
\.


--
-- TOC entry 6723 (class 0 OID 2006990)
-- Dependencies: 693
-- Data for Name: taskstart_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskstart_hdr (taskstart_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskid, taskname, assigneddate, expectedcompletiodate, pusername, duedate, starttime, taskdescription, assignto, assignedby, startdate, ongoingtask, note, ctr, status, ctrhold, ctrnotification, estatus, currenttask, ctrsubmit, axpfile_attach, axpfilepath_attach) FROM stdin;
\.


--
-- TOC entry 6724 (class 0 OID 2006995)
-- Dependencies: 694
-- Data for Name: taskstatus; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskstatus (taskstatusid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskname, status, assignby, assignto, assigndate, duedate, expectedcompletiondate, taskdescription, startdate, starttime, completiondate, completiontime, onholdstartdate, onholdstarttime, onholdenddate, onholdendtime, onholdreason, rescheduledreason, rescheduleddate, forwardedreason, assignedreason, reassigneddate, reassignedtime, dropdate, droppedby, dropreason, startedby, completedby, putonholdby, rescheduledby, forwardedby, reassignedby, rescheduledtime, droptime, taskid, comments, forwardedto, acceptedby, closedate, closetime, closedby, fromdate, todate, city, modeoftravel, accomodation, reimbursementamount, datee, instance, project, partner, customer, nooftrainees, sdate, "position", countt, skills, demoto, demodate, demotime, reasonforapply, returnby, returnto, reassignedto, fromuser, touser, actedon, reason, remarks, axpfile_lastaction, axpfilepath_lastaction, statremarks, updateddate, updatetime, updatedby) FROM stdin;
\.


--
-- TOC entry 6725 (class 0 OID 2007000)
-- Dependencies: 695
-- Data for Name: taskstatusupdate_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskstatusupdate_hdr (taskstatusupdate_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskid, taskname, assigneddate, expectedcompletiondate, assignby, assignto, duedate, taskdescription, axpfile_upload, axpfilepath_upload, remarks, status, pusername, updatedon, updatetime, lastactionby, lastactionto, checkp, checkt, tagpeople, emailto) FROM stdin;
\.


--
-- TOC entry 6726 (class 0 OID 2007005)
-- Dependencies: 696
-- Data for Name: tasksubgrp_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.tasksubgrp_hdr (tasksubgrp_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskgrp, tasksubgroup, taskgroup, uname, type, applicableto, applicabletocnd, assignto, assigntocnd, enable, usergroups, usernames, ausergroups, ausername) FROM stdin;
\.


--
-- TOC entry 6727 (class 0 OID 2007010)
-- Dependencies: 697
-- Data for Name: tasktype; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.tasktype (tasktypeid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, type, owner, applicableto, assignto, enable, usergroups, applicabletocnd, assigntocnd, ausergroups, ausername, usernames, uname, subtype, userroles, selectiongroup, result, ctr) FROM stdin;
\.


--
-- TOC entry 6728 (class 0 OID 2007015)
-- Dependencies: 698
-- Data for Name: tasktype_more; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.tasktype_more (tasktype_moreid, tasktypeid, tasktype_morerow, name, datatype, fieldtype, mandatory, drodownval) FROM stdin;
\.


--
-- TOC entry 6729 (class 0 OID 2007018)
-- Dependencies: 699
-- Data for Name: tasktype_mst; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.tasktype_mst (tasktype_mstid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, tasktype) FROM stdin;
\.


--
-- TOC entry 6730 (class 0 OID 2007023)
-- Dependencies: 700
-- Data for Name: taskusers; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.taskusers (taskid, usern) FROM stdin;
\.


--
-- TOC entry 6731 (class 0 OID 2007026)
-- Dependencies: 701
-- Data for Name: tblofflntableconfigmst; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.tblofflntableconfigmst (tblofflntableconfigmstid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, tstructid, tablenme, fillsql, istactive) FROM stdin;
\.


--
-- TOC entry 6732 (class 0 OID 2007031)
-- Dependencies: 702
-- Data for Name: tconfiguration; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.tconfiguration (tconfigurationid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, structname, structtransid, configname1, configname2, configname3, configname4, cntval, cv_searchflds, cv_groupbuttons, getallhtml, cv_htmlprints, getallref, getallreff, cv_masterflds) FROM stdin;
\.


--
-- TOC entry 6733 (class 0 OID 2007036)
-- Dependencies: 703
-- Data for Name: templates; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.templates (templatesid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, type, names, iviewid, elements, cvalue, dupchk) FROM stdin;
\.


--
-- TOC entry 6735 (class 0 OID 2007042)
-- Dependencies: 705
-- Data for Name: test11; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.test11 (test11id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, tid, name, status, viewby, seqname, checkk, getvaluee) FROM stdin;
\.


--
-- TOC entry 6736 (class 0 OID 2007047)
-- Dependencies: 706
-- Data for Name: timesheet_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.timesheet_hdr (timesheet_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, tdate, period, fromdt, todate, totalhours, entrydate, dupcheck, entrtmadeon, totalhr, uname, ctr, edate, thrs, tmins, lastworkingday, lwd) FROM stdin;
\.


--
-- TOC entry 6737 (class 0 OID 2007057)
-- Dependencies: 708
-- Data for Name: timeshett_dtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.timeshett_dtl (timeshett_dtlid, timesheet_hdrid, timeshett_dtlrow, taskname, taskdescription, timetaken, totalhours, timet, timetake, taskcategory, tasktype, taskid, isvalidtask, hrs, mins, taskidc, subtype) FROM stdin;
\.


--
-- TOC entry 6738 (class 0 OID 2007062)
-- Dependencies: 709
-- Data for Name: trare1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.trare1 (trare1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, docid, employeename, dateofapply, requestto, details, fromdate, todate, modeoftravel, city, amountt, accomodationrequired, axpfile_upload, axpfilepath_upload, request) FROM stdin;
\.


--
-- TOC entry 6739 (class 0 OID 2007067)
-- Dependencies: 710
-- Data for Name: tstruct_mst_details; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.tstruct_mst_details (tstruct_mst_detailsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, mastertransid, sourcetransid, sourcename, soucecaption, sourcetype, sourcedetails, sourcerules, sleveno, sordno, dcid, fsordno, moe, dcname, fnum, fldordno, trackchanges, trackchangesmadeby, selectedusers, selectedfields) FROM stdin;
\.


--
-- TOC entry 6267 (class 0 OID 2004876)
-- Dependencies: 231
-- Data for Name: tstructs; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.tstructs (name, caption, props, blobno, updatedon, createdon, importedon, createdby, updatedby, importedby, readonly, updusername, workflow, runtimetstruct, runtimemod) FROM stdin;
\.


--
-- TOC entry 6740 (class 0 OID 2007072)
-- Dependencies: 711
-- Data for Name: tstructscripts; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.tstructscripts (username, createdon, createdby, modifiedon, modifiedby, stransid, control_type, event, type, name, caption, script) FROM stdin;
\.


--
-- TOC entry 6741 (class 0 OID 2007078)
-- Dependencies: 712
-- Data for Name: tthy1; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.tthy1 (tthy1id, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, taskid, fld1, users) FROM stdin;
\.


--
-- TOC entry 6742 (class 0 OID 2007083)
-- Dependencies: 713
-- Data for Name: usagedtl; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.usagedtl (executeddate, code, title, cnt) FROM stdin;
\.


--
-- TOC entry 6743 (class 0 OID 2007086)
-- Dependencies: 714
-- Data for Name: user_status; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.user_status (username, status_date, timesheet_missing) FROM stdin;
\.


--
-- TOC entry 6744 (class 0 OID 2007092)
-- Dependencies: 715
-- Data for Name: usergroupings; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.usergroupings (username, groupname, groupvalue) FROM stdin;
\.


--
-- TOC entry 6745 (class 0 OID 2007095)
-- Dependencies: 716
-- Data for Name: usergroupmaster; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.usergroupmaster (groupname) FROM stdin;
\.


--
-- TOC entry 6746 (class 0 OID 2007098)
-- Dependencies: 717
-- Data for Name: users_branchlocations; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.users_branchlocations (users_branchlocationsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, users_branchlocationname, isactive) FROM stdin;
\.


--
-- TOC entry 6747 (class 0 OID 2007103)
-- Dependencies: 718
-- Data for Name: users_group_master; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.users_group_master (users_group_masterid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, users_group_name, users_group_description, isactive) FROM stdin;
\.


--
-- TOC entry 6748 (class 0 OID 2007108)
-- Dependencies: 719
-- Data for Name: users_logincontrols; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.users_logincontrols (users_logincontrolsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, document_date, changed_by, user_name, axp_dcstate, present_isactive, isactive, effective_date, change_parameter, pconsolidated_userroles, consolidated_userroles, plogin_name, login_name, pmobile_number, user_mobilenumber, puser_email, user_email, present_branchlocation, team_leader, users_branchlocationname, present_reportingmanager, primary_reporting_manager, present_teamleader, present_accesstoalldata, access_alldata, present_accessteamsdata, access_teamsdata, present_accesstosubordinates, access_subordinatesdata, present_accessofficelocation, access_officelocation, new_password, ppassword, pconsolidated_adminaccess, consolidated_adminaccess, pconsolidated_usergroups, consolidated_usergroups, pconsolidated_actors, consolidated_actors) FROM stdin;
\.


--
-- TOC entry 6749 (class 0 OID 2007113)
-- Dependencies: 720
-- Data for Name: users_logincontrolsroles; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.users_logincontrolsroles (users_logincontrolsrolesid, users_logincontrolsid, users_logincontrolsrolesrow, users_rolesid, add_remove_roles, user_roles_name, effective_from, effective_to, user_name_onroles, users_logindetailsid, axusersid) FROM stdin;
\.


--
-- TOC entry 6750 (class 0 OID 2007116)
-- Dependencies: 721
-- Data for Name: users_logindetails; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.users_logindetails (users_logindetailsid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, user_name, login_name, user_email, user_mobilenumber, consolidated_adminaccess, consolidated_usergroups, access_configstudio, access_developerstudio, access_exportdata, access_importdata, primary_reporting_manager, users_branchlocationname, team_leader, isactive, skip_level_manager, access_alldata, access_teamsdata, access_subordinatesdata, consolidated_accessusergroups, consolidated_user_roles, access_officelocation, consolidated_actors) FROM stdin;
\.


--
-- TOC entry 6751 (class 0 OID 2007121)
-- Dependencies: 722
-- Data for Name: users_roles; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.users_roles (users_rolesid, users_logindetailsid, users_rolesrow, users_role_name, effective_from, effective_to, user_name_onroles) FROM stdin;
\.


--
-- TOC entry 6752 (class 0 OID 2007124)
-- Dependencies: 723
-- Data for Name: users_roles_master; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.users_roles_master (users_roles_masterid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, users_role_name, users_responsibilities, isactive) FROM stdin;
\.


--
-- TOC entry 6753 (class 0 OID 2007129)
-- Dependencies: 724
-- Data for Name: usersequence; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.usersequence (transtype, fieldname, uname, prefix) FROM stdin;
\.


--
-- TOC entry 6754 (class 0 OID 2007132)
-- Dependencies: 725
-- Data for Name: ut_timetaken; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.ut_timetaken (executed_date, object_type, service_name, object_name, tot_count, count_8s, count_30s, count_90s, min_time, max_time, avg_time) FROM stdin;
\.


--
-- TOC entry 6755 (class 0 OID 2007229)
-- Dependencies: 745
-- Data for Name: workrequest_hdr; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.workrequest_hdr (workrequest_hdrid, cancel, sourceid, mapname, username, modifiedon, createdby, createdon, wkid, app_level, app_desc, app_slevel, cancelremarks, wfroles, docid, employeename, requestedto, dateofapply, reasonforapply, type, fromdate, todate, axpfile_upload, axpfilepath_upload) FROM stdin;
\.


--
-- TOC entry 6756 (class 0 OID 2007234)
-- Dependencies: 746
-- Data for Name: your_table_name; Type: TABLE DATA; Schema: agilespacefresh; Owner: agilespace
--

COPY agilespacefresh.your_table_name (id, taskname, type) FROM stdin;
\.


--
-- TOC entry 6770 (class 0 OID 0)
-- Dependencies: 219
-- Name: ax_entity_relseq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.ax_entity_relseq', 23281, true);


--
-- TOC entry 6771 (class 0 OID 0)
-- Dependencies: 221
-- Name: ax_homebuild_master_homebuild_id_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.ax_homebuild_master_homebuild_id_seq', 1, false);


--
-- TOC entry 6772 (class 0 OID 0)
-- Dependencies: 222
-- Name: ax_homebuild_master_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.ax_homebuild_master_seq', 1, false);


--
-- TOC entry 6773 (class 0 OID 0)
-- Dependencies: 225
-- Name: ax_homebuild_saved_homebuild_id_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.ax_homebuild_saved_homebuild_id_seq', 1, false);


--
-- TOC entry 6774 (class 0 OID 0)
-- Dependencies: 226
-- Name: ax_homebuild_saved_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.ax_homebuild_saved_seq', 1, false);


--
-- TOC entry 6775 (class 0 OID 0)
-- Dependencies: 235
-- Name: ax_layoutdesign_saved_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.ax_layoutdesign_saved_seq', 146, true);


--
-- TOC entry 6776 (class 0 OID 0)
-- Dependencies: 236
-- Name: ax_layoutdesign_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.ax_layoutdesign_seq', 147, true);


--
-- TOC entry 6777 (class 0 OID 0)
-- Dependencies: 241
-- Name: ax_notify_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.ax_notify_seq', 1, false);


--
-- TOC entry 6778 (class 0 OID 0)
-- Dependencies: 248
-- Name: ax_page_saved_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.ax_page_saved_seq', 1, true);


--
-- TOC entry 6779 (class 0 OID 0)
-- Dependencies: 250
-- Name: ax_page_template_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.ax_page_template_seq', 9, true);


--
-- TOC entry 6780 (class 0 OID 0)
-- Dependencies: 253
-- Name: ax_pages_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.ax_pages_seq', 10, false);


--
-- TOC entry 6781 (class 0 OID 0)
-- Dependencies: 258
-- Name: ax_widg_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.ax_widg_seq', 1, false);


--
-- TOC entry 6782 (class 0 OID 0)
-- Dependencies: 260
-- Name: ax_widget_publish_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.ax_widget_publish_seq', 1, false);


--
-- TOC entry 6783 (class 0 OID 0)
-- Dependencies: 264
-- Name: ax_widget_saved_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.ax_widget_saved_seq', 1, false);


--
-- TOC entry 6784 (class 0 OID 0)
-- Dependencies: 265
-- Name: ax_widget_widget_id_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.ax_widget_widget_id_seq', 1, false);


--
-- TOC entry 6785 (class 0 OID 0)
-- Dependencies: 289
-- Name: axdsignmail_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.axdsignmail_seq', 1, false);


--
-- TOC entry 6786 (class 0 OID 0)
-- Dependencies: 373
-- Name: axp_mailjobsid; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.axp_mailjobsid', 1, false);


--
-- TOC entry 6787 (class 0 OID 0)
-- Dependencies: 529
-- Name: axsms_recordid_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.axsms_recordid_seq', 1, false);


--
-- TOC entry 6788 (class 0 OID 0)
-- Dependencies: 530
-- Name: axsms_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.axsms_seq', 1, false);


--
-- TOC entry 6789 (class 0 OID 0)
-- Dependencies: 531
-- Name: axsmsid; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.axsmsid', 1, false);


--
-- TOC entry 6790 (class 0 OID 0)
-- Dependencies: 577
-- Name: connectnoseq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.connectnoseq', 2625, true);


--
-- TOC entry 6791 (class 0 OID 0)
-- Dependencies: 617
-- Name: inbound_inboundid_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.inbound_inboundid_seq', 1, false);


--
-- TOC entry 6792 (class 0 OID 0)
-- Dependencies: 618
-- Name: inbound_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.inbound_seq', 1, false);


--
-- TOC entry 6793 (class 0 OID 0)
-- Dependencies: 644
-- Name: outbound_outboundid_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.outbound_outboundid_seq', 1, false);


--
-- TOC entry 6794 (class 0 OID 0)
-- Dependencies: 645
-- Name: outbound_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.outbound_seq', 1, false);


--
-- TOC entry 6795 (class 0 OID 0)
-- Dependencies: 688
-- Name: taskname_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.taskname_seq', 16, true);


--
-- TOC entry 6796 (class 0 OID 0)
-- Dependencies: 704
-- Name: tempt1_tempt1id_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.tempt1_tempt1id_seq', 9, true);


--
-- TOC entry 6797 (class 0 OID 0)
-- Dependencies: 747
-- Name: your_table_name_id_seq; Type: SEQUENCE SET; Schema: agilespacefresh; Owner: agilespace
--

SELECT pg_catalog.setval('agilespacefresh.your_table_name_id_seq', 1, false);


--
-- TOC entry 5474 (class 2606 OID 2009056)
-- Name: attendance aglattendanceid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.attendance
    ADD CONSTRAINT aglattendanceid PRIMARY KEY (attendanceid);


--
-- TOC entry 5476 (class 2606 OID 2009058)
-- Name: ax_configure_fast_prints aglax_configure_fast_printsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_configure_fast_prints
    ADD CONSTRAINT aglax_configure_fast_printsid PRIMARY KEY (ax_configure_fast_printsid);


--
-- TOC entry 5498 (class 2606 OID 2009060)
-- Name: ax_template_fast_prints aglax_template_fast_printsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_template_fast_prints
    ADD CONSTRAINT aglax_template_fast_printsid PRIMARY KEY (ax_template_fast_printsid);


--
-- TOC entry 5500 (class 2606 OID 2009062)
-- Name: ax_wfcomments aglax_wfcommentsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_wfcomments
    ADD CONSTRAINT aglax_wfcommentsid PRIMARY KEY (ax_wfcommentsid);


--
-- TOC entry 5515 (class 2606 OID 2009064)
-- Name: axautoprints aglaxautoprintsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axautoprints
    ADD CONSTRAINT aglaxautoprintsid PRIMARY KEY (axautoprintsid);


--
-- TOC entry 5517 (class 2606 OID 2009066)
-- Name: axcalendar aglaxcalendarid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axcalendar
    ADD CONSTRAINT aglaxcalendarid PRIMARY KEY (axcalendarid);


--
-- TOC entry 5519 (class 2606 OID 2009068)
-- Name: axcardtypemaster aglaxcardtypemasterid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axcardtypemaster
    ADD CONSTRAINT aglaxcardtypemasterid PRIMARY KEY (axcardtypemasterid);


--
-- TOC entry 5524 (class 2606 OID 2009070)
-- Name: axdef_newfield aglaxdef_newfieldid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axdef_newfield
    ADD CONSTRAINT aglaxdef_newfieldid PRIMARY KEY (axdef_newfieldid);


--
-- TOC entry 5526 (class 2606 OID 2009072)
-- Name: axdirectsql aglaxdirectsqlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axdirectsql
    ADD CONSTRAINT aglaxdirectsqlid PRIMARY KEY (axdirectsqlid);


--
-- TOC entry 5528 (class 2606 OID 2009074)
-- Name: axdsignconfig aglaxdsignconfigid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axdsignconfig
    ADD CONSTRAINT aglaxdsignconfigid PRIMARY KEY (axdsignconfigid);


--
-- TOC entry 5530 (class 2606 OID 2009076)
-- Name: axdsignmail aglaxdsignmailid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axdsignmail
    ADD CONSTRAINT aglaxdsignmailid PRIMARY KEY (axdsignmailid);


--
-- TOC entry 5532 (class 2606 OID 2009078)
-- Name: axentityrelations aglaxentityrelationsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axentityrelations
    ADD CONSTRAINT aglaxentityrelationsid PRIMARY KEY (axentityrelationsid);


--
-- TOC entry 5536 (class 2606 OID 2009080)
-- Name: axformnotify aglaxformnotifyid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axformnotify
    ADD CONSTRAINT aglaxformnotifyid PRIMARY KEY (axformnotifyid);


--
-- TOC entry 5538 (class 2606 OID 2009082)
-- Name: axglovar aglaxglovarid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axglovar
    ADD CONSTRAINT aglaxglovarid PRIMARY KEY (axglovarid);


--
-- TOC entry 5540 (class 2606 OID 2009084)
-- Name: axgrouping aglaxgroupingid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axgrouping
    ADD CONSTRAINT aglaxgroupingid PRIMARY KEY (axgroupingid);


--
-- TOC entry 5542 (class 2606 OID 2009086)
-- Name: axgroupingmst aglaxgroupingmstid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axgroupingmst
    ADD CONSTRAINT aglaxgroupingmstid PRIMARY KEY (axgroupingmstid);


--
-- TOC entry 5544 (class 2606 OID 2009088)
-- Name: axgrouptstructs aglaxgrouptstructsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axgrouptstructs
    ADD CONSTRAINT aglaxgrouptstructsid PRIMARY KEY (axgrouptstructsid);


--
-- TOC entry 5548 (class 2606 OID 2009090)
-- Name: axhomeconfigdtl aglaxhomeconfigdtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axhomeconfigdtl
    ADD CONSTRAINT aglaxhomeconfigdtlid PRIMARY KEY (axhomeconfigdtlid);


--
-- TOC entry 5546 (class 2606 OID 2009092)
-- Name: axhomeconfig aglaxhomeconfigid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axhomeconfig
    ADD CONSTRAINT aglaxhomeconfigid PRIMARY KEY (axhomeconfigid);


--
-- TOC entry 5552 (class 2606 OID 2009094)
-- Name: aximpdef aglaximpdefid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.aximpdef
    ADD CONSTRAINT aglaximpdefid PRIMARY KEY (aximpdefid);


--
-- TOC entry 5554 (class 2606 OID 2009096)
-- Name: axinqueues aglaxinqueuesid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axinqueues
    ADD CONSTRAINT aglaxinqueuesid PRIMARY KEY (axinqueuesid);


--
-- TOC entry 5556 (class 2606 OID 2009098)
-- Name: axintelliviewdet aglaxintelliviewdetid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axintelliviewdet
    ADD CONSTRAINT aglaxintelliviewdetid PRIMARY KEY (axintelliviewdetid);


--
-- TOC entry 5561 (class 2606 OID 2009100)
-- Name: axlanguage11x aglaxlanguage11xid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axlanguage11x
    ADD CONSTRAINT aglaxlanguage11xid PRIMARY KEY (axlanguage11xid);


--
-- TOC entry 5565 (class 2606 OID 2009102)
-- Name: axlov aglaxlovid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axlov
    ADD CONSTRAINT aglaxlovid PRIMARY KEY (axlovid);


--
-- TOC entry 5567 (class 2606 OID 2009104)
-- Name: axmeetingstatus aglaxmeetingstatusid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axmeetingstatus
    ADD CONSTRAINT aglaxmeetingstatusid PRIMARY KEY (axmeetingstatusid);


--
-- TOC entry 5571 (class 2606 OID 2009106)
-- Name: axmpagedtl aglaxmpagedtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axmpagedtl
    ADD CONSTRAINT aglaxmpagedtlid PRIMARY KEY (axmpagedtlid);


--
-- TOC entry 5573 (class 2606 OID 2009108)
-- Name: axmpagehdr aglaxmpagehdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axmpagehdr
    ADD CONSTRAINT aglaxmpagehdrid PRIMARY KEY (axmpagehdrid);


--
-- TOC entry 5575 (class 2606 OID 2009110)
-- Name: axnotificationdef aglaxnotificationdefid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axnotificationdef
    ADD CONSTRAINT aglaxnotificationdefid PRIMARY KEY (axnotificationdefid);


--
-- TOC entry 5577 (class 2606 OID 2009112)
-- Name: axoutqueues aglaxoutqueuesid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axoutqueues
    ADD CONSTRAINT aglaxoutqueuesid PRIMARY KEY (axoutqueuesid);


--
-- TOC entry 5579 (class 2606 OID 2009114)
-- Name: axoutqueuesmst aglaxoutqueuesmstid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axoutqueuesmst
    ADD CONSTRAINT aglaxoutqueuesmstid PRIMARY KEY (axoutqueuesmstid);


--
-- TOC entry 5589 (class 2606 OID 2009116)
-- Name: axp_appsearch_data_period aglaxp_appsearch_data_periodid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axp_appsearch_data_period
    ADD CONSTRAINT aglaxp_appsearch_data_periodid PRIMARY KEY (axp_appsearch_data_periodid);


--
-- TOC entry 5591 (class 2606 OID 2009118)
-- Name: axp_appsearchdtl aglaxp_appsearchdtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axp_appsearchdtl
    ADD CONSTRAINT aglaxp_appsearchdtlid PRIMARY KEY (axp_appsearchdtlid);


--
-- TOC entry 5593 (class 2606 OID 2009120)
-- Name: axp_cards aglaxp_cardsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axp_cards
    ADD CONSTRAINT aglaxp_cardsid PRIMARY KEY (axp_cardsid);


--
-- TOC entry 5595 (class 2606 OID 2009122)
-- Name: axp_chartconfig aglaxp_chartconfigid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axp_chartconfig
    ADD CONSTRAINT aglaxp_chartconfigid PRIMARY KEY (axp_chartconfigid);


--
-- TOC entry 5597 (class 2606 OID 2009124)
-- Name: axp_customdatatype aglaxp_customdatatypeid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axp_customdatatype
    ADD CONSTRAINT aglaxp_customdatatypeid PRIMARY KEY (axp_customdatatypeid);


--
-- TOC entry 5599 (class 2606 OID 2009126)
-- Name: axp_dbwdetails aglaxp_dbwdetailsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axp_dbwdetails
    ADD CONSTRAINT aglaxp_dbwdetailsid PRIMARY KEY (axp_dbwdetailsid);


--
-- TOC entry 5603 (class 2606 OID 2009128)
-- Name: axp_tabledescriptor aglaxp_tabledescriptorid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axp_tabledescriptor
    ADD CONSTRAINT aglaxp_tabledescriptorid PRIMARY KEY (axp_tabledescriptorid);


--
-- TOC entry 5605 (class 2606 OID 2009130)
-- Name: axp_vp aglaxp_vpid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axp_vp
    ADD CONSTRAINT aglaxp_vpid PRIMARY KEY (axp_vpid);


--
-- TOC entry 5611 (class 2606 OID 2009132)
-- Name: axpdef_axcalendar_event aglaxpdef_axcalendar_eventid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_axcalendar_event
    ADD CONSTRAINT aglaxpdef_axcalendar_eventid PRIMARY KEY (axpdef_axcalendar_eventid);


--
-- TOC entry 5613 (class 2606 OID 2009134)
-- Name: axpdef_axcalendar_eventstatus aglaxpdef_axcalendar_eventstatusid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_axcalendar_eventstatus
    ADD CONSTRAINT aglaxpdef_axcalendar_eventstatusid PRIMARY KEY (axpdef_axcalendar_eventstatusid);


--
-- TOC entry 5615 (class 2606 OID 2009136)
-- Name: axpdef_axpertapi aglaxpdef_axpertapiid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_axpertapi
    ADD CONSTRAINT aglaxpdef_axpertapiid PRIMARY KEY (axpdef_axpertapiid);


--
-- TOC entry 5617 (class 2606 OID 2009138)
-- Name: axpdef_axpertprops aglaxpdef_axpertpropsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_axpertprops
    ADD CONSTRAINT aglaxpdef_axpertpropsid PRIMARY KEY (axpdef_axpertpropsid);


--
-- TOC entry 5621 (class 2606 OID 2009140)
-- Name: axpdef_axvars_dbvar aglaxpdef_axvars_dbvarid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_axvars_dbvar
    ADD CONSTRAINT aglaxpdef_axvars_dbvarid PRIMARY KEY (axpdef_axvars_dbvarid);


--
-- TOC entry 5619 (class 2606 OID 2009142)
-- Name: axpdef_axvars aglaxpdef_axvarsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_axvars
    ADD CONSTRAINT aglaxpdef_axvarsid PRIMARY KEY (axpdef_axvarsid);


--
-- TOC entry 5623 (class 2606 OID 2009144)
-- Name: axpdef_branch aglaxpdef_branchid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_branch
    ADD CONSTRAINT aglaxpdef_branchid PRIMARY KEY (axpdef_branchid);


--
-- TOC entry 5625 (class 2606 OID 2009146)
-- Name: axpdef_company aglaxpdef_companyid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_company
    ADD CONSTRAINT aglaxpdef_companyid PRIMARY KEY (axpdef_companyid);


--
-- TOC entry 5629 (class 2606 OID 2009148)
-- Name: axpdef_dac_configdtl aglaxpdef_dac_configdtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_dac_configdtl
    ADD CONSTRAINT aglaxpdef_dac_configdtlid PRIMARY KEY (axpdef_dac_configdtlid);


--
-- TOC entry 5627 (class 2606 OID 2009150)
-- Name: axpdef_dac_config aglaxpdef_dac_configid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_dac_config
    ADD CONSTRAINT aglaxpdef_dac_configid PRIMARY KEY (axpdef_dac_configid);


--
-- TOC entry 5631 (class 2606 OID 2009152)
-- Name: axpdef_dac_masterconfig aglaxpdef_dac_masterconfigid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_dac_masterconfig
    ADD CONSTRAINT aglaxpdef_dac_masterconfigid PRIMARY KEY (axpdef_dac_masterconfigid);


--
-- TOC entry 5633 (class 2606 OID 2009154)
-- Name: axpdef_dc aglaxpdef_dcid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_dc
    ADD CONSTRAINT aglaxpdef_dcid PRIMARY KEY (axpdef_dcid);


--
-- TOC entry 5635 (class 2606 OID 2009156)
-- Name: axpdef_errcodes aglaxpdef_errcodesid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_errcodes
    ADD CONSTRAINT aglaxpdef_errcodesid PRIMARY KEY (axpdef_errcodesid);


--
-- TOC entry 5639 (class 2606 OID 2009158)
-- Name: axpdef_fillgriddtl aglaxpdef_fillgriddtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_fillgriddtl
    ADD CONSTRAINT aglaxpdef_fillgriddtlid PRIMARY KEY (axpdef_fillgriddtlid);


--
-- TOC entry 5637 (class 2606 OID 2009160)
-- Name: axpdef_fillgrid aglaxpdef_fillgridid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_fillgrid
    ADD CONSTRAINT aglaxpdef_fillgridid PRIMARY KEY (axpdef_fillgridid);


--
-- TOC entry 5643 (class 2606 OID 2009162)
-- Name: axpdef_genmapdtl aglaxpdef_genmapdtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_genmapdtl
    ADD CONSTRAINT aglaxpdef_genmapdtlid PRIMARY KEY (axpdef_genmapdtlid);


--
-- TOC entry 5641 (class 2606 OID 2009164)
-- Name: axpdef_genmap aglaxpdef_genmapid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_genmap
    ADD CONSTRAINT aglaxpdef_genmapid PRIMARY KEY (axpdef_genmapid);


--
-- TOC entry 5645 (class 2606 OID 2009166)
-- Name: axpdef_genmaprowctrl aglaxpdef_genmaprowctrlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_genmaprowctrl
    ADD CONSTRAINT aglaxpdef_genmaprowctrlid PRIMARY KEY (axpdef_genmaprowctrlid);


--
-- TOC entry 5647 (class 2606 OID 2009168)
-- Name: axpdef_impdata_templates aglaxpdef_impdata_templatesid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_impdata_templates
    ADD CONSTRAINT aglaxpdef_impdata_templatesid PRIMARY KEY (axpdef_impdata_templatesid);


--
-- TOC entry 5649 (class 2606 OID 2009170)
-- Name: axpdef_jobs aglaxpdef_jobsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_jobs
    ADD CONSTRAINT aglaxpdef_jobsid PRIMARY KEY (axpdef_jobsid);


--
-- TOC entry 5651 (class 2606 OID 2009172)
-- Name: axpdef_language aglaxpdef_languageid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_language
    ADD CONSTRAINT aglaxpdef_languageid PRIMARY KEY (axpdef_languageid);


--
-- TOC entry 5653 (class 2606 OID 2009174)
-- Name: axpdef_mdmap aglaxpdef_mdmapid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_mdmap
    ADD CONSTRAINT aglaxpdef_mdmapid PRIMARY KEY (axpdef_mdmapid);


--
-- TOC entry 5655 (class 2606 OID 2009176)
-- Name: axpdef_news_events aglaxpdef_news_eventsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_news_events
    ADD CONSTRAINT aglaxpdef_news_eventsid PRIMARY KEY (axpdef_news_eventsid);


--
-- TOC entry 5657 (class 2606 OID 2009178)
-- Name: axpdef_peg_actor aglaxpdef_peg_actorid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_peg_actor
    ADD CONSTRAINT aglaxpdef_peg_actorid PRIMARY KEY (axpdef_peg_actorid);


--
-- TOC entry 5659 (class 2606 OID 2009180)
-- Name: axpdef_peg_actorusergrp aglaxpdef_peg_actorusergrpid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_peg_actorusergrp
    ADD CONSTRAINT aglaxpdef_peg_actorusergrpid PRIMARY KEY (axpdef_peg_actorusergrpid);


--
-- TOC entry 5661 (class 2606 OID 2009182)
-- Name: axpdef_peg_group aglaxpdef_peg_groupid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_peg_group
    ADD CONSTRAINT aglaxpdef_peg_groupid PRIMARY KEY (axpdef_peg_groupid);


--
-- TOC entry 5663 (class 2606 OID 2009184)
-- Name: axpdef_peg_grpfilter aglaxpdef_peg_grpfilterid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_peg_grpfilter
    ADD CONSTRAINT aglaxpdef_peg_grpfilterid PRIMARY KEY (axpdef_peg_grpfilterid);


--
-- TOC entry 5665 (class 2606 OID 2009186)
-- Name: axpdef_peg_processmaster aglaxpdef_peg_processmasterid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_peg_processmaster
    ADD CONSTRAINT aglaxpdef_peg_processmasterid PRIMARY KEY (axpdef_peg_processmasterid);


--
-- TOC entry 5668 (class 2606 OID 2009188)
-- Name: axpdef_prcards aglaxpdef_prcardsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_prcards
    ADD CONSTRAINT aglaxpdef_prcardsid PRIMARY KEY (axpdef_prcardsid);


--
-- TOC entry 5670 (class 2606 OID 2009190)
-- Name: axpdef_publishapi aglaxpdef_publishapiid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_publishapi
    ADD CONSTRAINT aglaxpdef_publishapiid PRIMARY KEY (axpdef_publishapiid);


--
-- TOC entry 5674 (class 2606 OID 2009192)
-- Name: axpdef_ruleeng_expr aglaxpdef_ruleeng_exprid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_ruleeng_expr
    ADD CONSTRAINT aglaxpdef_ruleeng_exprid PRIMARY KEY (axpdef_ruleeng_exprid);


--
-- TOC entry 5676 (class 2606 OID 2009194)
-- Name: axpdef_ruleeng_fctl aglaxpdef_ruleeng_fctlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_ruleeng_fctl
    ADD CONSTRAINT aglaxpdef_ruleeng_fctlid PRIMARY KEY (axpdef_ruleeng_fctlid);


--
-- TOC entry 5678 (class 2606 OID 2009196)
-- Name: axpdef_ruleeng_masks aglaxpdef_ruleeng_masksid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_ruleeng_masks
    ADD CONSTRAINT aglaxpdef_ruleeng_masksid PRIMARY KEY (axpdef_ruleeng_masksid);


--
-- TOC entry 5680 (class 2606 OID 2009198)
-- Name: axpdef_ruleeng_msg aglaxpdef_ruleeng_msgid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_ruleeng_msg
    ADD CONSTRAINT aglaxpdef_ruleeng_msgid PRIMARY KEY (axpdef_ruleeng_msgid);


--
-- TOC entry 5682 (class 2606 OID 2009200)
-- Name: axpdef_ruleeng_valexpr aglaxpdef_ruleeng_valexprid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_ruleeng_valexpr
    ADD CONSTRAINT aglaxpdef_ruleeng_valexprid PRIMARY KEY (axpdef_ruleeng_valexprid);


--
-- TOC entry 5672 (class 2606 OID 2009202)
-- Name: axpdef_ruleeng aglaxpdef_ruleengid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_ruleeng
    ADD CONSTRAINT aglaxpdef_ruleengid PRIMARY KEY (axpdef_ruleengid);


--
-- TOC entry 5684 (class 2606 OID 2009204)
-- Name: axpdef_rulegroup aglaxpdef_rulegroupid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_rulegroup
    ADD CONSTRAINT aglaxpdef_rulegroupid PRIMARY KEY (axpdef_rulegroupid);


--
-- TOC entry 5688 (class 2606 OID 2009206)
-- Name: axpdef_rulesdef_basic aglaxpdef_rulesdef_basicid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_rulesdef_basic
    ADD CONSTRAINT aglaxpdef_rulesdef_basicid PRIMARY KEY (axpdef_rulesdef_basicid);


--
-- TOC entry 5690 (class 2606 OID 2009208)
-- Name: axpdef_rulesdef_conmsg aglaxpdef_rulesdef_conmsgid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_rulesdef_conmsg
    ADD CONSTRAINT aglaxpdef_rulesdef_conmsgid PRIMARY KEY (axpdef_rulesdef_conmsgid);


--
-- TOC entry 5686 (class 2606 OID 2009210)
-- Name: axpdef_rulesdef aglaxpdef_rulesdefid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_rulesdef
    ADD CONSTRAINT aglaxpdef_rulesdefid PRIMARY KEY (axpdef_rulesdefid);


--
-- TOC entry 5692 (class 2606 OID 2009212)
-- Name: axpdef_stdpages aglaxpdef_stdpagesid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_stdpages
    ADD CONSTRAINT aglaxpdef_stdpagesid PRIMARY KEY (axpdef_stdpagesid);


--
-- TOC entry 5696 (class 2606 OID 2009214)
-- Name: axpdef_tstructfdtl aglaxpdef_tstructfdtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_tstructfdtl
    ADD CONSTRAINT aglaxpdef_tstructfdtlid PRIMARY KEY (axpdef_tstructfdtlid);


--
-- TOC entry 5694 (class 2606 OID 2009216)
-- Name: axpdef_tstruct aglaxpdef_tstructid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_tstruct
    ADD CONSTRAINT aglaxpdef_tstructid PRIMARY KEY (axpdef_tstructid);


--
-- TOC entry 5698 (class 2606 OID 2009218)
-- Name: axpdef_tstructudtl aglaxpdef_tstructudtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_tstructudtl
    ADD CONSTRAINT aglaxpdef_tstructudtlid PRIMARY KEY (axpdef_tstructudtlid);


--
-- TOC entry 5700 (class 2606 OID 2009220)
-- Name: axpdef_user_logins aglaxpdef_user_loginsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: postgres
--

ALTER TABLE ONLY agilespacefresh.axpdef_user_logins
    ADD CONSTRAINT aglaxpdef_user_loginsid PRIMARY KEY (axpdef_user_loginsid);


--
-- TOC entry 5702 (class 2606 OID 2009225)
-- Name: axpdef_usergroups aglaxpdef_usergroupsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_usergroups
    ADD CONSTRAINT aglaxpdef_usergroupsid PRIMARY KEY (axpdef_usergroupsid);


--
-- TOC entry 5704 (class 2606 OID 2009227)
-- Name: axpdef_userroles aglaxpdef_userrolesid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_userroles
    ADD CONSTRAINT aglaxpdef_userrolesid PRIMARY KEY (axpdef_userrolesid);


--
-- TOC entry 5706 (class 2606 OID 2009229)
-- Name: axpdef_workflowdtl aglaxpdef_workflowdtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_workflowdtl
    ADD CONSTRAINT aglaxpdef_workflowdtlid PRIMARY KEY (axpdef_workflowdtlid);


--
-- TOC entry 5708 (class 2606 OID 2009231)
-- Name: axpdef_workflowhdr aglaxpdef_workflowhdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdef_workflowhdr
    ADD CONSTRAINT aglaxpdef_workflowhdrid PRIMARY KEY (axpdef_workflowhdrid);


--
-- TOC entry 5712 (class 2606 OID 2009233)
-- Name: axpeg_sendmsg aglaxpeg_sendmsgid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpeg_sendmsg
    ADD CONSTRAINT aglaxpeg_sendmsgid PRIMARY KEY (axpeg_sendmsgid);


--
-- TOC entry 5714 (class 2606 OID 2009235)
-- Name: axperiodnotify aglaxperiodnotifyid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axperiodnotify
    ADD CONSTRAINT aglaxperiodnotifyid PRIMARY KEY (axperiodnotifyid);


--
-- TOC entry 5716 (class 2606 OID 2009237)
-- Name: axpermissions aglaxpermissionsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpermissions
    ADD CONSTRAINT aglaxpermissionsid PRIMARY KEY (axpermissionsid);


--
-- TOC entry 5718 (class 2606 OID 2009239)
-- Name: axpexchange aglaxpexchangeid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpexchange
    ADD CONSTRAINT aglaxpexchangeid PRIMARY KEY (axpexchangeid);


--
-- TOC entry 5720 (class 2606 OID 2009241)
-- Name: axphelpdocs aglaxphelpdocsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axphelpdocs
    ADD CONSTRAINT aglaxphelpdocsid PRIMARY KEY (axphelpdocsid);


--
-- TOC entry 5724 (class 2606 OID 2009243)
-- Name: axpmsgkeywordsdtl aglaxpmsgkeywordsdtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpmsgkeywordsdtl
    ADD CONSTRAINT aglaxpmsgkeywordsdtlid PRIMARY KEY (axpmsgkeywordsdtlid);


--
-- TOC entry 5722 (class 2606 OID 2009245)
-- Name: axpmsgkeywords aglaxpmsgkeywordsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpmsgkeywords
    ADD CONSTRAINT aglaxpmsgkeywordsid PRIMARY KEY (axpmsgkeywordsid);


--
-- TOC entry 5726 (class 2606 OID 2009247)
-- Name: axprintdef aglaxprintdefid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axprintdef
    ADD CONSTRAINT aglaxprintdefid PRIMARY KEY (axprintdefid);


--
-- TOC entry 5730 (class 2606 OID 2009249)
-- Name: axprocessdef_delegation aglaxprocessdef_delegationid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axprocessdef_delegation
    ADD CONSTRAINT aglaxprocessdef_delegationid PRIMARY KEY (axprocessdef_delegationid);


--
-- TOC entry 5728 (class 2606 OID 2009251)
-- Name: axprocessdef aglaxprocessdefid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axprocessdef
    ADD CONSTRAINT aglaxprocessdefid PRIMARY KEY (axprocessdefid);


--
-- TOC entry 5732 (class 2606 OID 2009253)
-- Name: axprocessdefv2_escalation aglaxprocessdefv2_escalationid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axprocessdefv2_escalation
    ADD CONSTRAINT aglaxprocessdefv2_escalationid PRIMARY KEY (axprocessdefv2_escalationid);


--
-- TOC entry 5734 (class 2606 OID 2009255)
-- Name: axprocessdefv2_formctls aglaxprocessdefv2_formctlsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axprocessdefv2_formctls
    ADD CONSTRAINT aglaxprocessdefv2_formctlsid PRIMARY KEY (axprocessdefv2_formctlsid);


--
-- TOC entry 5736 (class 2606 OID 2009257)
-- Name: axprocessdefv2_reminder aglaxprocessdefv2_reminderid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axprocessdefv2_reminder
    ADD CONSTRAINT aglaxprocessdefv2_reminderid PRIMARY KEY (axprocessdefv2_reminderid);


--
-- TOC entry 5738 (class 2606 OID 2009259)
-- Name: axprocessdefv2_setval aglaxprocessdefv2_setvalid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axprocessdefv2_setval
    ADD CONSTRAINT aglaxprocessdefv2_setvalid PRIMARY KEY (axprocessdefv2_setvalid);


--
-- TOC entry 5742 (class 2606 OID 2009261)
-- Name: axpscriptrunner aglaxpscriptrunnerid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpscriptrunner
    ADD CONSTRAINT aglaxpscriptrunnerid PRIMARY KEY (axpscriptrunnerid);


--
-- TOC entry 5744 (class 2606 OID 2009263)
-- Name: axpstructconfig aglaxpstructconfigid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpstructconfig
    ADD CONSTRAINT aglaxpstructconfigid PRIMARY KEY (axpstructconfigid);


--
-- TOC entry 5746 (class 2606 OID 2009265)
-- Name: axpstructconfigprops aglaxpstructconfigpropsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpstructconfigprops
    ADD CONSTRAINT aglaxpstructconfigpropsid PRIMARY KEY (axpstructconfigpropsid);


--
-- TOC entry 5748 (class 2606 OID 2009267)
-- Name: axpstructconfigproval aglaxpstructconfigprovalid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpstructconfigproval
    ADD CONSTRAINT aglaxpstructconfigprovalid PRIMARY KEY (axpstructconfigprovalid);


--
-- TOC entry 5760 (class 2606 OID 2009269)
-- Name: axrulesdef_conmsg aglaxrulesdef_conmsgid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axrulesdef_conmsg
    ADD CONSTRAINT aglaxrulesdef_conmsgid PRIMARY KEY (axrulesdef_conmsgid);


--
-- TOC entry 5762 (class 2606 OID 2009271)
-- Name: axrulesdef_expr aglaxrulesdef_exprid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axrulesdef_expr
    ADD CONSTRAINT aglaxrulesdef_exprid PRIMARY KEY (axrulesdef_exprid);


--
-- TOC entry 5764 (class 2606 OID 2009273)
-- Name: axrulesdef_valexpr aglaxrulesdef_valexprid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axrulesdef_valexpr
    ADD CONSTRAINT aglaxrulesdef_valexprid PRIMARY KEY (axrulesdef_valexprid);


--
-- TOC entry 5758 (class 2606 OID 2009275)
-- Name: axrulesdef aglaxrulesdefid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axrulesdef
    ADD CONSTRAINT aglaxrulesdefid PRIMARY KEY (axrulesdefid);


--
-- TOC entry 5768 (class 2606 OID 2009277)
-- Name: axtstructhint aglaxtstructhintid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axtstructhint
    ADD CONSTRAINT aglaxtstructhintid PRIMARY KEY (axtstructhintid);


--
-- TOC entry 5771 (class 2606 OID 2009279)
-- Name: axuseractivations aglaxuseractivationsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axuseractivations
    ADD CONSTRAINT aglaxuseractivationsid PRIMARY KEY (axuseractivationsid);


--
-- TOC entry 5773 (class 2606 OID 2009292)
-- Name: axusercharts aglaxuserchartsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axusercharts
    ADD CONSTRAINT aglaxuserchartsid PRIMARY KEY (axuserchartsid);


--
-- TOC entry 5775 (class 2606 OID 2009294)
-- Name: axusergrouping aglaxusergroupingid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axusergrouping
    ADD CONSTRAINT aglaxusergroupingid PRIMARY KEY (axusergroupingid);


--
-- TOC entry 5777 (class 2606 OID 2009296)
-- Name: axusergroupsdetail aglaxusergroupsdetailid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axusergroupsdetail
    ADD CONSTRAINT aglaxusergroupsdetailid PRIMARY KEY (axusergroupsdetailid);


--
-- TOC entry 5779 (class 2606 OID 2009298)
-- Name: axuserpermissions aglaxuserpermissionsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axuserpermissions
    ADD CONSTRAINT aglaxuserpermissionsid PRIMARY KEY (axuserpermissionsid);


--
-- TOC entry 5785 (class 2606 OID 2009300)
-- Name: axvarcore aglaxvarcoreid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axvarcore
    ADD CONSTRAINT aglaxvarcoreid PRIMARY KEY (axvarcoreid);


--
-- TOC entry 5789 (class 2606 OID 2009302)
-- Name: axxuc1 aglaxxuc1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axxuc1
    ADD CONSTRAINT aglaxxuc1id PRIMARY KEY (axxuc1id);


--
-- TOC entry 5791 (class 2606 OID 2009304)
-- Name: axxuc2 aglaxxuc2id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axxuc2
    ADD CONSTRAINT aglaxxuc2id PRIMARY KEY (axxuc2id);


--
-- TOC entry 5793 (class 2606 OID 2009306)
-- Name: axxuc3 aglaxxuc3id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axxuc3
    ADD CONSTRAINT aglaxxuc3id PRIMARY KEY (axxuc3id);


--
-- TOC entry 5795 (class 2606 OID 2009308)
-- Name: axxuc4 aglaxxuc4id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axxuc4
    ADD CONSTRAINT aglaxxuc4id PRIMARY KEY (axxuc4id);


--
-- TOC entry 5797 (class 2606 OID 2009310)
-- Name: axxuc5 aglaxxuc5id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axxuc5
    ADD CONSTRAINT aglaxxuc5id PRIMARY KEY (axxuc5id);


--
-- TOC entry 5799 (class 2606 OID 2009312)
-- Name: axxuc6 aglaxxuc6id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axxuc6
    ADD CONSTRAINT aglaxxuc6id PRIMARY KEY (axxuc6id);


--
-- TOC entry 5801 (class 2606 OID 2009314)
-- Name: axxuc7 aglaxxuc7id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axxuc7
    ADD CONSTRAINT aglaxxuc7id PRIMARY KEY (axxuc7id);


--
-- TOC entry 5803 (class 2606 OID 2009316)
-- Name: axxuc8 aglaxxuc8id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axxuc8
    ADD CONSTRAINT aglaxxuc8id PRIMARY KEY (axxuc8id);


--
-- TOC entry 5805 (class 2606 OID 2009318)
-- Name: axxuc9 aglaxxuc9id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axxuc9
    ADD CONSTRAINT aglaxxuc9id PRIMARY KEY (axxuc9id);


--
-- TOC entry 5807 (class 2606 OID 2009320)
-- Name: bugtr1 aglbugtr1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.bugtr1
    ADD CONSTRAINT aglbugtr1id PRIMARY KEY (bugtr1id);


--
-- TOC entry 5809 (class 2606 OID 2009323)
-- Name: city aglcityid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.city
    ADD CONSTRAINT aglcityid PRIMARY KEY (cityid);


--
-- TOC entry 5811 (class 2606 OID 2009325)
-- Name: clien1 aglclien1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.clien1
    ADD CONSTRAINT aglclien1id PRIMARY KEY (clien1id);


--
-- TOC entry 5813 (class 2606 OID 2009327)
-- Name: close1 aglclose1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.close1
    ADD CONSTRAINT aglclose1id PRIMARY KEY (close1id);


--
-- TOC entry 5815 (class 2606 OID 2009329)
-- Name: company_details aglcompany_detailsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.company_details
    ADD CONSTRAINT aglcompany_detailsid PRIMARY KEY (company_detailsid);


--
-- TOC entry 5817 (class 2606 OID 2009331)
-- Name: complete_hdr aglcomplete_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.complete_hdr
    ADD CONSTRAINT aglcomplete_hdrid PRIMARY KEY (complete_hdrid);


--
-- TOC entry 5821 (class 2606 OID 2009333)
-- Name: coretstructdtlsauto aglcoretstructdtlsautoid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.coretstructdtlsauto
    ADD CONSTRAINT aglcoretstructdtlsautoid PRIMARY KEY (coretstructdtlsautoid);


--
-- TOC entry 5819 (class 2606 OID 2009335)
-- Name: coretstructdtls aglcoretstructdtlsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.coretstructdtls
    ADD CONSTRAINT aglcoretstructdtlsid PRIMARY KEY (coretstructdtlsid);


--
-- TOC entry 5823 (class 2606 OID 2009337)
-- Name: coretstructhdr aglcoretstructhdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.coretstructhdr
    ADD CONSTRAINT aglcoretstructhdrid PRIMARY KEY (coretstructhdrid);


--
-- TOC entry 5825 (class 2606 OID 2009339)
-- Name: cusdt1 aglcusdt1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.cusdt1
    ADD CONSTRAINT aglcusdt1id PRIMARY KEY (cusdt1id);


--
-- TOC entry 5827 (class 2606 OID 2009341)
-- Name: customtypes aglcustomtypesid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.customtypes
    ADD CONSTRAINT aglcustomtypesid PRIMARY KEY (customtypesid);


--
-- TOC entry 5829 (class 2606 OID 2009343)
-- Name: drop1 agldrop1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.drop1
    ADD CONSTRAINT agldrop1id PRIMARY KEY (drop1id);


--
-- TOC entry 5833 (class 2606 OID 2009345)
-- Name: dsignconfigdtl agldsignconfigdtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.dsignconfigdtl
    ADD CONSTRAINT agldsignconfigdtlid PRIMARY KEY (dsignconfigdtlid);


--
-- TOC entry 5831 (class 2606 OID 2009347)
-- Name: dsignconfig agldsignconfigid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.dsignconfig
    ADD CONSTRAINT agldsignconfigid PRIMARY KEY (dsignconfigid);


--
-- TOC entry 5835 (class 2606 OID 2009349)
-- Name: dwb_iviews agldwb_iviewsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.dwb_iviews
    ADD CONSTRAINT agldwb_iviewsid PRIMARY KEY (dwb_iviewsid);


--
-- TOC entry 5837 (class 2606 OID 2009351)
-- Name: dwb_publishprops agldwb_publishpropsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.dwb_publishprops
    ADD CONSTRAINT agldwb_publishpropsid PRIMARY KEY (dwb_publishpropsid);


--
-- TOC entry 5839 (class 2606 OID 2009353)
-- Name: emaildef aglemaildefid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.emaildef
    ADD CONSTRAINT aglemaildefid PRIMARY KEY (emaildefid);


--
-- TOC entry 5841 (class 2606 OID 2009355)
-- Name: empattendance aglempattendanceid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.empattendance
    ADD CONSTRAINT aglempattendanceid PRIMARY KEY (empattendanceid);


--
-- TOC entry 5843 (class 2606 OID 2009357)
-- Name: empde1 aglempde1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.empde1
    ADD CONSTRAINT aglempde1id PRIMARY KEY (empde1id);


--
-- TOC entry 5845 (class 2606 OID 2009359)
-- Name: empde2 aglempde2id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.empde2
    ADD CONSTRAINT aglempde2id PRIMARY KEY (empde2id);


--
-- TOC entry 5847 (class 2606 OID 2009361)
-- Name: empde3 aglempde3id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.empde3
    ADD CONSTRAINT aglempde3id PRIMARY KEY (empde3id);


--
-- TOC entry 5849 (class 2606 OID 2009363)
-- Name: empde4 aglempde4id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.empde4
    ADD CONSTRAINT aglempde4id PRIMARY KEY (empde4id);


--
-- TOC entry 5853 (class 2606 OID 2009365)
-- Name: employeeattendance aglemployeeattendanceid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.employeeattendance
    ADD CONSTRAINT aglemployeeattendanceid PRIMARY KEY (employeeattendanceid);


--
-- TOC entry 5851 (class 2606 OID 2009367)
-- Name: employee aglemployeeid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.employee
    ADD CONSTRAINT aglemployeeid PRIMARY KEY (employeeid);


--
-- TOC entry 5855 (class 2606 OID 2009371)
-- Name: executeapidef aglexecuteapidefid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.executeapidef
    ADD CONSTRAINT aglexecuteapidefid PRIMARY KEY (executeapidefid);


--
-- TOC entry 5859 (class 2606 OID 2009373)
-- Name: financialyeardtl aglfinancialyeardtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.financialyeardtl
    ADD CONSTRAINT aglfinancialyeardtlid PRIMARY KEY (financialyeardtlid);


--
-- TOC entry 5857 (class 2606 OID 2009375)
-- Name: financialyear aglfinancialyearid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.financialyear
    ADD CONSTRAINT aglfinancialyearid PRIMARY KEY (financialyearid);


--
-- TOC entry 5863 (class 2606 OID 2009377)
-- Name: groupbtns aglgroupbtnsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.groupbtns
    ADD CONSTRAINT aglgroupbtnsid PRIMARY KEY (groupbtnsid);


--
-- TOC entry 5865 (class 2606 OID 2009379)
-- Name: htmlprint aglhtmlprintid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.htmlprint
    ADD CONSTRAINT aglhtmlprintid PRIMARY KEY (htmlprintid);


--
-- TOC entry 5867 (class 2606 OID 2009381)
-- Name: htmlsections aglhtmlsectionsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.htmlsections
    ADD CONSTRAINT aglhtmlsectionsid PRIMARY KEY (htmlsectionsid);


--
-- TOC entry 5871 (class 2606 OID 2009383)
-- Name: iconfigurationdtl agliconfigurationdtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.iconfigurationdtl
    ADD CONSTRAINT agliconfigurationdtlid PRIMARY KEY (iconfigurationdtlid);


--
-- TOC entry 5869 (class 2606 OID 2009385)
-- Name: iconfiguration agliconfigurationid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.iconfiguration
    ADD CONSTRAINT agliconfigurationid PRIMARY KEY (iconfigurationid);


--
-- TOC entry 5875 (class 2606 OID 2009387)
-- Name: leavereq aglleavereqid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.leavereq
    ADD CONSTRAINT aglleavereqid PRIMARY KEY (leavereqid);


--
-- TOC entry 5877 (class 2606 OID 2009389)
-- Name: leaverequest_hdr aglleaverequest_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.leaverequest_hdr
    ADD CONSTRAINT aglleaverequest_hdrid PRIMARY KEY (leaverequest_hdrid);


--
-- TOC entry 5879 (class 2606 OID 2009391)
-- Name: listh1 agllisth1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.listh1
    ADD CONSTRAINT agllisth1id PRIMARY KEY (listh1id);


--
-- TOC entry 5881 (class 2606 OID 2009393)
-- Name: lov1 agllov1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.lov1
    ADD CONSTRAINT agllov1id PRIMARY KEY (lov1id);


--
-- TOC entry 5885 (class 2606 OID 2009395)
-- Name: materialrequest_hdr aglmaterialrequest_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.materialrequest_hdr
    ADD CONSTRAINT aglmaterialrequest_hdrid PRIMARY KEY (materialrequest_hdrid);


--
-- TOC entry 5887 (class 2606 OID 2009397)
-- Name: meete1 aglmeete1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.meete1
    ADD CONSTRAINT aglmeete1id PRIMARY KEY (meete1id);


--
-- TOC entry 5889 (class 2606 OID 2009399)
-- Name: meetingbreak_hdr aglmeetingbreak_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.meetingbreak_hdr
    ADD CONSTRAINT aglmeetingbreak_hdrid PRIMARY KEY (meetingbreak_hdrid);


--
-- TOC entry 5891 (class 2606 OID 2009401)
-- Name: mg_accountcomp aglmg_accountcompid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.mg_accountcomp
    ADD CONSTRAINT aglmg_accountcompid PRIMARY KEY (mg_accountcompid);


--
-- TOC entry 5893 (class 2606 OID 2009403)
-- Name: monthdtl aglmonthdtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.monthdtl
    ADD CONSTRAINT aglmonthdtlid PRIMARY KEY (monthdtlid);


--
-- TOC entry 5895 (class 2606 OID 2009405)
-- Name: monthhdr aglmonthhdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.monthhdr
    ADD CONSTRAINT aglmonthhdrid PRIMARY KEY (monthhdrid);


--
-- TOC entry 5899 (class 2606 OID 2009407)
-- Name: partnerdetails aglpartnerdetailsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.partnerdetails
    ADD CONSTRAINT aglpartnerdetailsid PRIMARY KEY (partnerdetailsid);


--
-- TOC entry 5901 (class 2606 OID 2009409)
-- Name: payin1 aglpayin1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.payin1
    ADD CONSTRAINT aglpayin1id PRIMARY KEY (payin1id);


--
-- TOC entry 5911 (class 2606 OID 2009411)
-- Name: proje1 aglproje1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.proje1
    ADD CONSTRAINT aglproje1id PRIMARY KEY (proje1id);


--
-- TOC entry 5913 (class 2606 OID 2009413)
-- Name: reference aglreferenceid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.reference
    ADD CONSTRAINT aglreferenceid PRIMARY KEY (referenceid);


--
-- TOC entry 5915 (class 2606 OID 2009415)
-- Name: retun1 aglretun1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.retun1
    ADD CONSTRAINT aglretun1id PRIMARY KEY (retun1id);


--
-- TOC entry 5917 (class 2606 OID 2009417)
-- Name: searchcols aglsearchcolsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.searchcols
    ADD CONSTRAINT aglsearchcolsid PRIMARY KEY (searchcolsid);


--
-- TOC entry 5922 (class 2606 OID 2009419)
-- Name: sect2 aglsect2id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.sect2
    ADD CONSTRAINT aglsect2id PRIMARY KEY (sect2id);


--
-- TOC entry 5924 (class 2606 OID 2009421)
-- Name: sect4 aglsect4id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.sect4
    ADD CONSTRAINT aglsect4id PRIMARY KEY (sect4id);


--
-- TOC entry 5926 (class 2606 OID 2009423)
-- Name: sendmsg aglsendmsgid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.sendmsg
    ADD CONSTRAINT aglsendmsgid PRIMARY KEY (sendmsgid);


--
-- TOC entry 5934 (class 2606 OID 2009425)
-- Name: task2 agltask2id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.task2
    ADD CONSTRAINT agltask2id PRIMARY KEY (task2id);


--
-- TOC entry 5936 (class 2606 OID 2009427)
-- Name: task_moreinfo agltask_moreinfoid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.task_moreinfo
    ADD CONSTRAINT agltask_moreinfoid PRIMARY KEY (task_moreinfoid);


--
-- TOC entry 5938 (class 2606 OID 2009429)
-- Name: task_nw agltask_nwid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.task_nw
    ADD CONSTRAINT agltask_nwid PRIMARY KEY (task_nwid);


--
-- TOC entry 5940 (class 2606 OID 2009431)
-- Name: taskaccept_hdr agltaskaccept_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskaccept_hdr
    ADD CONSTRAINT agltaskaccept_hdrid PRIMARY KEY (taskaccept_hdrid);


--
-- TOC entry 5942 (class 2606 OID 2009433)
-- Name: taskaccepthdr agltaskaccepthdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskaccepthdr
    ADD CONSTRAINT agltaskaccepthdrid PRIMARY KEY (taskaccepthdrid);


--
-- TOC entry 5944 (class 2606 OID 2009435)
-- Name: taskamendhistory agltaskamendhistoryid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskamendhistory
    ADD CONSTRAINT agltaskamendhistoryid PRIMARY KEY (taskamendhistoryid);


--
-- TOC entry 5946 (class 2606 OID 2009437)
-- Name: taskassign_hdr agltaskassign_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskassign_hdr
    ADD CONSTRAINT agltaskassign_hdrid PRIMARY KEY (taskassign_hdrid);


--
-- TOC entry 5948 (class 2606 OID 2009439)
-- Name: taskbreak_hdr agltaskbreak_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskbreak_hdr
    ADD CONSTRAINT agltaskbreak_hdrid PRIMARY KEY (taskbreak_hdrid);


--
-- TOC entry 5950 (class 2606 OID 2009441)
-- Name: taskf_dtl agltaskf_dtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskf_dtl
    ADD CONSTRAINT agltaskf_dtlid PRIMARY KEY (taskf_dtlid);


--
-- TOC entry 5952 (class 2606 OID 2009443)
-- Name: taskf_hdr agltaskf_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskf_hdr
    ADD CONSTRAINT agltaskf_hdrid PRIMARY KEY (taskf_hdrid);


--
-- TOC entry 5954 (class 2606 OID 2009445)
-- Name: taskf_moreinfo agltaskf_moreinfoid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskf_moreinfo
    ADD CONSTRAINT agltaskf_moreinfoid PRIMARY KEY (taskf_moreinfoid);


--
-- TOC entry 5956 (class 2606 OID 2009447)
-- Name: taskgrp_hdr agltaskgrp_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskgrp_hdr
    ADD CONSTRAINT agltaskgrp_hdrid PRIMARY KEY (taskgrp_hdrid);


--
-- TOC entry 5958 (class 2606 OID 2009449)
-- Name: taskinformdelay_hdr agltaskinformdelay_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskinformdelay_hdr
    ADD CONSTRAINT agltaskinformdelay_hdrid PRIMARY KEY (taskinformdelay_hdrid);


--
-- TOC entry 5960 (class 2606 OID 2009451)
-- Name: taskputonhold_hdr agltaskputonhold_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskputonhold_hdr
    ADD CONSTRAINT agltaskputonhold_hdrid PRIMARY KEY (taskputonhold_hdrid);


--
-- TOC entry 5962 (class 2606 OID 2009453)
-- Name: taskr1 agltaskr1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskr1
    ADD CONSTRAINT agltaskr1id PRIMARY KEY (taskr1id);


--
-- TOC entry 5964 (class 2606 OID 2009455)
-- Name: taskresume_hdr agltaskresume_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskresume_hdr
    ADD CONSTRAINT agltaskresume_hdrid PRIMARY KEY (taskresume_hdrid);


--
-- TOC entry 5966 (class 2606 OID 2009457)
-- Name: tasksend_hdr agltasksend_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.tasksend_hdr
    ADD CONSTRAINT agltasksend_hdrid PRIMARY KEY (tasksend_hdrid);


--
-- TOC entry 5968 (class 2606 OID 2009459)
-- Name: taskstart_hdr agltaskstart_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskstart_hdr
    ADD CONSTRAINT agltaskstart_hdrid PRIMARY KEY (taskstart_hdrid);


--
-- TOC entry 5970 (class 2606 OID 2009461)
-- Name: taskstatus agltaskstatusid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskstatus
    ADD CONSTRAINT agltaskstatusid PRIMARY KEY (taskstatusid);


--
-- TOC entry 5972 (class 2606 OID 2009463)
-- Name: taskstatusupdate_hdr agltaskstatusupdate_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.taskstatusupdate_hdr
    ADD CONSTRAINT agltaskstatusupdate_hdrid PRIMARY KEY (taskstatusupdate_hdrid);


--
-- TOC entry 5974 (class 2606 OID 2009465)
-- Name: tasksubgrp_hdr agltasksubgrp_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.tasksubgrp_hdr
    ADD CONSTRAINT agltasksubgrp_hdrid PRIMARY KEY (tasksubgrp_hdrid);


--
-- TOC entry 5978 (class 2606 OID 2009467)
-- Name: tasktype_more agltasktype_moreid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.tasktype_more
    ADD CONSTRAINT agltasktype_moreid PRIMARY KEY (tasktype_moreid);


--
-- TOC entry 5980 (class 2606 OID 2009469)
-- Name: tasktype_mst agltasktype_mstid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.tasktype_mst
    ADD CONSTRAINT agltasktype_mstid PRIMARY KEY (tasktype_mstid);


--
-- TOC entry 5976 (class 2606 OID 2009471)
-- Name: tasktype agltasktypeid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.tasktype
    ADD CONSTRAINT agltasktypeid PRIMARY KEY (tasktypeid);


--
-- TOC entry 5982 (class 2606 OID 2009473)
-- Name: tblofflntableconfigmst agltblofflntableconfigmstid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.tblofflntableconfigmst
    ADD CONSTRAINT agltblofflntableconfigmstid PRIMARY KEY (tblofflntableconfigmstid);


--
-- TOC entry 5984 (class 2606 OID 2009475)
-- Name: tconfiguration agltconfigurationid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.tconfiguration
    ADD CONSTRAINT agltconfigurationid PRIMARY KEY (tconfigurationid);


--
-- TOC entry 5986 (class 2606 OID 2009477)
-- Name: templates agltemplatesid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.templates
    ADD CONSTRAINT agltemplatesid PRIMARY KEY (templatesid);


--
-- TOC entry 5988 (class 2606 OID 2009479)
-- Name: test11 agltest11id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.test11
    ADD CONSTRAINT agltest11id PRIMARY KEY (test11id);


--
-- TOC entry 5990 (class 2606 OID 2009481)
-- Name: timesheet_hdr agltimesheet_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.timesheet_hdr
    ADD CONSTRAINT agltimesheet_hdrid PRIMARY KEY (timesheet_hdrid);


--
-- TOC entry 5992 (class 2606 OID 2009483)
-- Name: timeshett_dtl agltimeshett_dtlid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.timeshett_dtl
    ADD CONSTRAINT agltimeshett_dtlid PRIMARY KEY (timeshett_dtlid);


--
-- TOC entry 5994 (class 2606 OID 2009485)
-- Name: trare1 agltrare1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.trare1
    ADD CONSTRAINT agltrare1id PRIMARY KEY (trare1id);


--
-- TOC entry 5996 (class 2606 OID 2009487)
-- Name: tstruct_mst_details agltstruct_mst_detailsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.tstruct_mst_details
    ADD CONSTRAINT agltstruct_mst_detailsid PRIMARY KEY (tstruct_mst_detailsid);


--
-- TOC entry 5998 (class 2606 OID 2009489)
-- Name: tthy1 agltthy1id; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.tthy1
    ADD CONSTRAINT agltthy1id PRIMARY KEY (tthy1id);


--
-- TOC entry 6002 (class 2606 OID 2009491)
-- Name: users_branchlocations aglusers_branchlocationsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.users_branchlocations
    ADD CONSTRAINT aglusers_branchlocationsid PRIMARY KEY (users_branchlocationsid);


--
-- TOC entry 6004 (class 2606 OID 2009493)
-- Name: users_group_master aglusers_group_masterid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.users_group_master
    ADD CONSTRAINT aglusers_group_masterid PRIMARY KEY (users_group_masterid);


--
-- TOC entry 6006 (class 2606 OID 2009495)
-- Name: users_logincontrols aglusers_logincontrolsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.users_logincontrols
    ADD CONSTRAINT aglusers_logincontrolsid PRIMARY KEY (users_logincontrolsid);


--
-- TOC entry 6008 (class 2606 OID 2009497)
-- Name: users_logincontrolsroles aglusers_logincontrolsrolesid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.users_logincontrolsroles
    ADD CONSTRAINT aglusers_logincontrolsrolesid PRIMARY KEY (users_logincontrolsrolesid);


--
-- TOC entry 6010 (class 2606 OID 2009499)
-- Name: users_logindetails aglusers_logindetailsid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.users_logindetails
    ADD CONSTRAINT aglusers_logindetailsid PRIMARY KEY (users_logindetailsid);


--
-- TOC entry 6014 (class 2606 OID 2009501)
-- Name: users_roles_master aglusers_roles_masterid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.users_roles_master
    ADD CONSTRAINT aglusers_roles_masterid PRIMARY KEY (users_roles_masterid);


--
-- TOC entry 6012 (class 2606 OID 2009503)
-- Name: users_roles aglusers_rolesid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.users_roles
    ADD CONSTRAINT aglusers_rolesid PRIMARY KEY (users_rolesid);


--
-- TOC entry 6016 (class 2606 OID 2009505)
-- Name: workrequest_hdr aglworkrequest_hdrid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.workrequest_hdr
    ADD CONSTRAINT aglworkrequest_hdrid PRIMARY KEY (workrequest_hdrid);


--
-- TOC entry 5478 (class 2606 OID 2009507)
-- Name: ax_homebuild_master ax_homebuild_master_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_homebuild_master
    ADD CONSTRAINT ax_homebuild_master_pkey PRIMARY KEY (homebuild_id);


--
-- TOC entry 5480 (class 2606 OID 2009509)
-- Name: ax_homebuild_saved ax_homebuild_saved_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_homebuild_saved
    ADD CONSTRAINT ax_homebuild_saved_pkey PRIMARY KEY (homebuild_id);


--
-- TOC entry 5482 (class 2606 OID 2009511)
-- Name: ax_htmlplugins ax_htmlplugins_pk; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_htmlplugins
    ADD CONSTRAINT ax_htmlplugins_pk PRIMARY KEY (name);


--
-- TOC entry 5486 (class 2606 OID 2009513)
-- Name: ax_layoutdesign ax_layoutdesign_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_layoutdesign
    ADD CONSTRAINT ax_layoutdesign_pkey PRIMARY KEY (design_id);


--
-- TOC entry 5488 (class 2606 OID 2009515)
-- Name: ax_layoutdesign_saved ax_layoutdesign_saved_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_layoutdesign_saved
    ADD CONSTRAINT ax_layoutdesign_saved_pkey PRIMARY KEY (design_id);


--
-- TOC entry 5490 (class 2606 OID 2009517)
-- Name: ax_notify ax_notify_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_notify
    ADD CONSTRAINT ax_notify_pkey PRIMARY KEY (notification_id);


--
-- TOC entry 5492 (class 2606 OID 2009519)
-- Name: ax_page_saved ax_page_saved_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_page_saved
    ADD CONSTRAINT ax_page_saved_pkey PRIMARY KEY (page_id);


--
-- TOC entry 5494 (class 2606 OID 2009521)
-- Name: ax_page_templates ax_page_templates_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_page_templates
    ADD CONSTRAINT ax_page_templates_pkey PRIMARY KEY (template_id);


--
-- TOC entry 5496 (class 2606 OID 2009523)
-- Name: ax_pages ax_pages_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_pages
    ADD CONSTRAINT ax_pages_pkey PRIMARY KEY (page_id);


--
-- TOC entry 5502 (class 2606 OID 2009525)
-- Name: ax_widget ax_widget_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_widget
    ADD CONSTRAINT ax_widget_pkey PRIMARY KEY (widget_id);


--
-- TOC entry 5504 (class 2606 OID 2009527)
-- Name: ax_widget_published ax_widget_published_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_widget_published
    ADD CONSTRAINT ax_widget_published_pkey PRIMARY KEY (widget_id);


--
-- TOC entry 5506 (class 2606 OID 2009529)
-- Name: ax_widget_saved ax_widget_saved_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_widget_saved
    ADD CONSTRAINT ax_widget_saved_pkey PRIMARY KEY (widget_id);


--
-- TOC entry 5513 (class 2606 OID 2009531)
-- Name: axaudit axaudit_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axaudit
    ADD CONSTRAINT axaudit_pkey PRIMARY KEY (sessionid);


--
-- TOC entry 5522 (class 2606 OID 2009533)
-- Name: axcustomviews axcustomviews_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axcustomviews
    ADD CONSTRAINT axcustomviews_pkey PRIMARY KEY (name, username, transid, blobno);


--
-- TOC entry 5534 (class 2606 OID 2009535)
-- Name: axerrorlog axerrorlog_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axerrorlog
    ADD CONSTRAINT axerrorlog_pkey PRIMARY KEY (username, eventdate);


--
-- TOC entry 5550 (class 2606 OID 2009537)
-- Name: axiconmenu axiconmenu_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axiconmenu
    ADD CONSTRAINT axiconmenu_pkey PRIMARY KEY (parentpagename);


--
-- TOC entry 5559 (class 2606 OID 2009539)
-- Name: axlanguage axlanguage_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axlanguage
    ADD CONSTRAINT axlanguage_pkey PRIMARY KEY (sname, lngname, compname);


--
-- TOC entry 5563 (class 2606 OID 2009541)
-- Name: axlictrans axlictrans_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axlictrans
    ADD CONSTRAINT axlictrans_pkey PRIMARY KEY (licid);


--
-- TOC entry 5601 (class 2606 OID 2009543)
-- Name: axp_smartviews_config axp_smartviews_config_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axp_smartviews_config
    ADD CONSTRAINT axp_smartviews_config_pkey PRIMARY KEY (username, ivname);


--
-- TOC entry 5581 (class 2606 OID 2009545)
-- Name: axpages axpages_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpages
    ADD CONSTRAINT axpages_pkey PRIMARY KEY (name, blobno);


--
-- TOC entry 5607 (class 2606 OID 2009547)
-- Name: axpcal axpcal_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpcal
    ADD CONSTRAINT axpcal_pkey PRIMARY KEY (axpcalid);


--
-- TOC entry 5609 (class 2606 OID 2009549)
-- Name: axpclouddevsettings axpclouddevsettings_tranid_type_key; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpclouddevsettings
    ADD CONSTRAINT axpclouddevsettings_tranid_type_key UNIQUE (tranid, type);


--
-- TOC entry 5710 (class 2606 OID 2009551)
-- Name: axpdflanguage axpdflanguage_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpdflanguage
    ADD CONSTRAINT axpdflanguage_pkey PRIMARY KEY (sname, lngname, compname);


--
-- TOC entry 5740 (class 2606 OID 2009553)
-- Name: axprops axprops_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axprops
    ADD CONSTRAINT axprops_pkey PRIMARY KEY (name, blobno);


--
-- TOC entry 5750 (class 2606 OID 2009555)
-- Name: axptree axptree_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axptree
    ADD CONSTRAINT axptree_pkey PRIMARY KEY (name, blobno);


--
-- TOC entry 5752 (class 2606 OID 2009557)
-- Name: axpws_config axpws_config_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axpws_config
    ADD CONSTRAINT axpws_config_pkey PRIMARY KEY (transid, iviewname);


--
-- TOC entry 5754 (class 2606 OID 2009565)
-- Name: axrequest axrequest_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axrequest
    ADD CONSTRAINT axrequest_pkey PRIMARY KEY (requestid);


--
-- TOC entry 5756 (class 2606 OID 2009567)
-- Name: axresponse axresponse_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axresponse
    ADD CONSTRAINT axresponse_pkey PRIMARY KEY (responseid);


--
-- TOC entry 5766 (class 2606 OID 2009581)
-- Name: axscheduler axscheduler_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axscheduler
    ADD CONSTRAINT axscheduler_pkey PRIMARY KEY (name, blobno);


--
-- TOC entry 5585 (class 2606 OID 2009583)
-- Name: axuseraccess axuseraccess_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axuseraccess
    ADD CONSTRAINT axuseraccess_pkey PRIMARY KEY (rname, sname, stype);


--
-- TOC entry 5587 (class 2606 OID 2009585)
-- Name: axusergroups axusergroups_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axusergroups
    ADD CONSTRAINT axusergroups_pkey PRIMARY KEY (groupname);


--
-- TOC entry 5781 (class 2606 OID 2009587)
-- Name: axusers axusers_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axusers
    ADD CONSTRAINT axusers_pkey PRIMARY KEY (username);


--
-- TOC entry 5783 (class 2606 OID 2009589)
-- Name: axuserspwdpolicy axuserspwdpolicy_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axuserspwdpolicy
    ADD CONSTRAINT axuserspwdpolicy_pkey PRIMARY KEY (username);


--
-- TOC entry 5787 (class 2606 OID 2009591)
-- Name: axworkflow axworkflow_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axworkflow
    ADD CONSTRAINT axworkflow_pkey PRIMARY KEY (name);


--
-- TOC entry 5861 (class 2606 OID 2009594)
-- Name: formsize formsize_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.formsize
    ADD CONSTRAINT formsize_pkey PRIMARY KEY (username, formname);


--
-- TOC entry 5873 (class 2606 OID 2009599)
-- Name: images images_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.images
    ADD CONSTRAINT images_pkey PRIMARY KEY (name, blobno);


--
-- TOC entry 5583 (class 2606 OID 2009601)
-- Name: iviews iviews_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.iviews
    ADD CONSTRAINT iviews_pkey PRIMARY KEY (name, blobno);


--
-- TOC entry 5883 (class 2606 OID 2009603)
-- Name: lviews lviews_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.lviews
    ADD CONSTRAINT lviews_pkey PRIMARY KEY (name, username, transid, blobno);


--
-- TOC entry 5897 (class 2606 OID 2009605)
-- Name: mshaosema4 mshaosema4_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.mshaosema4
    ADD CONSTRAINT mshaosema4_pkey PRIMARY KEY (selection);


--
-- TOC entry 5511 (class 2606 OID 2009607)
-- Name: axattachworkflow pk__axattach_wkidtransid; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axattachworkflow
    ADD CONSTRAINT pk__axattach_wkidtransid PRIMARY KEY (wkid, transid);


--
-- TOC entry 5903 (class 2606 OID 2009609)
-- Name: pnchtrace pnchtrace_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.pnchtrace
    ADD CONSTRAINT pnchtrace_pkey PRIMARY KEY (sessionid);


--
-- TOC entry 5905 (class 2606 OID 2009611)
-- Name: printprms printprms_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.printprms
    ADD CONSTRAINT printprms_pkey PRIMARY KEY (iview);


--
-- TOC entry 5907 (class 2606 OID 2009613)
-- Name: printprops printprops_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.printprops
    ADD CONSTRAINT printprops_pkey PRIMARY KEY (name, blobno);


--
-- TOC entry 5909 (class 2606 OID 2009615)
-- Name: prints prints_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.prints
    ADD CONSTRAINT prints_pkey PRIMARY KEY (name, blobno);


--
-- TOC entry 5920 (class 2606 OID 2009620)
-- Name: searchdef searchdef_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.searchdef
    ADD CONSTRAINT searchdef_pkey PRIMARY KEY (transid, username);


--
-- TOC entry 5928 (class 2606 OID 2009622)
-- Name: sequence seq_unique; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.sequence
    ADD CONSTRAINT seq_unique UNIQUE (transtype, fieldname, prefix, prefixfield);


--
-- TOC entry 5930 (class 2606 OID 2009624)
-- Name: sequence sequence_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.sequence
    ADD CONSTRAINT sequence_pkey PRIMARY KEY (sequenceid);


--
-- TOC entry 5932 (class 2606 OID 2009626)
-- Name: structlock structlock_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.structlock
    ADD CONSTRAINT structlock_pkey PRIMARY KEY (sname);


--
-- TOC entry 5484 (class 2606 OID 2009628)
-- Name: tstructs tstructs_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.tstructs
    ADD CONSTRAINT tstructs_pkey PRIMARY KEY (name, blobno);


--
-- TOC entry 5569 (class 2606 OID 2009631)
-- Name: axmmetadatamaster unique_structtype_structname; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axmmetadatamaster
    ADD CONSTRAINT unique_structtype_structname UNIQUE (structtype, structname);


--
-- TOC entry 6000 (class 2606 OID 2009633)
-- Name: user_status user_status_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.user_status
    ADD CONSTRAINT user_status_pkey PRIMARY KEY (username, status_date);


--
-- TOC entry 6018 (class 2606 OID 2009635)
-- Name: your_table_name your_table_name_pkey; Type: CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.your_table_name
    ADD CONSTRAINT your_table_name_pkey PRIMARY KEY (id);


--
-- TOC entry 5769 (class 1259 OID 2009636)
-- Name: ord_formname_ix_axtsuserconfig; Type: INDEX; Schema: agilespacefresh; Owner: agilespace
--

CREATE INDEX ord_formname_ix_axtsuserconfig ON agilespacefresh.axtsuserconfig USING btree (username, formname);


--
-- TOC entry 5557 (class 1259 OID 2009637)
-- Name: ord_reptname_ix_axivuserconfig; Type: INDEX; Schema: agilespacefresh; Owner: agilespace
--

CREATE INDEX ord_reptname_ix_axivuserconfig ON agilespacefresh.axivuserconfig USING btree (username, reportname);


--
-- TOC entry 5918 (class 1259 OID 2009638)
-- Name: ord_transid_ix_searchdef; Type: INDEX; Schema: agilespacefresh; Owner: agilespace
--

CREATE INDEX ord_transid_ix_searchdef ON agilespacefresh.searchdef USING btree (username, transid);


--
-- TOC entry 5509 (class 1259 OID 2009639)
-- Name: ord_username_ix_axappconfig; Type: INDEX; Schema: agilespacefresh; Owner: agilespace
--

CREATE INDEX ord_username_ix_axappconfig ON agilespacefresh.axappconfig USING btree (username);


--
-- TOC entry 5507 (class 1259 OID 2009640)
-- Name: ui_axactivetasks_keyvalue; Type: INDEX; Schema: agilespacefresh; Owner: agilespace
--

CREATE INDEX ui_axactivetasks_keyvalue ON agilespacefresh.axactivetasks USING btree (keyvalue);


--
-- TOC entry 5508 (class 1259 OID 2009641)
-- Name: ui_axactivetasks_transid; Type: INDEX; Schema: agilespacefresh; Owner: agilespace
--

CREATE INDEX ui_axactivetasks_transid ON agilespacefresh.axactivetasks USING btree (transid);


--
-- TOC entry 5520 (class 1259 OID 2009642)
-- Name: ui_axctx1; Type: INDEX; Schema: agilespacefresh; Owner: agilespace
--

CREATE UNIQUE INDEX ui_axctx1 ON agilespacefresh.axctx1 USING btree (axcontext, atype);


--
-- TOC entry 5666 (class 1259 OID 2009643)
-- Name: username_idx; Type: INDEX; Schema: agilespacefresh; Owner: agilespace
--

CREATE INDEX username_idx ON agilespacefresh.axpdef_peg_usergroups USING btree (username);


--
-- TOC entry 6030 (class 2620 OID 2009644)
-- Name: ax_homebuild_master ax_homebuild_master_bir; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER ax_homebuild_master_bir BEFORE INSERT ON agilespacefresh.ax_homebuild_master FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_ax_homebuild_master();


--
-- TOC entry 6031 (class 2620 OID 2009645)
-- Name: ax_homebuild_saved ax_homebuild_saved_bir; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER ax_homebuild_saved_bir BEFORE INSERT ON agilespacefresh.ax_homebuild_saved FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_homebuild_saved_bir();


--
-- TOC entry 6032 (class 2620 OID 2009646)
-- Name: ax_layoutdesign ax_layoutdesign_bir; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER ax_layoutdesign_bir BEFORE INSERT ON agilespacefresh.ax_layoutdesign FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_ax_layoutdesign();


--
-- TOC entry 6033 (class 2620 OID 2009647)
-- Name: ax_layoutdesign_saved ax_layoutdesign_saved_bir; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER ax_layoutdesign_saved_bir BEFORE INSERT ON agilespacefresh.ax_layoutdesign_saved FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_ax_layoutdesign_saved();


--
-- TOC entry 6034 (class 2620 OID 2009648)
-- Name: ax_notify ax_notify_bir; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER ax_notify_bir BEFORE INSERT ON agilespacefresh.ax_notify FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_ax_notify();


--
-- TOC entry 6035 (class 2620 OID 2009649)
-- Name: ax_page_saved ax_page_saved_bir; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER ax_page_saved_bir BEFORE INSERT ON agilespacefresh.ax_page_saved FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_ax_page_saved();


--
-- TOC entry 6036 (class 2620 OID 2009653)
-- Name: ax_page_templates ax_page_template_bir; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER ax_page_template_bir BEFORE INSERT ON agilespacefresh.ax_page_templates FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_ax_page_templates();


--
-- TOC entry 6037 (class 2620 OID 2009654)
-- Name: ax_pages ax_pages_bir; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER ax_pages_bir BEFORE INSERT ON agilespacefresh.ax_pages FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_ax_pages();


--
-- TOC entry 6038 (class 2620 OID 2009655)
-- Name: ax_widget ax_widget_bir; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER ax_widget_bir BEFORE INSERT ON agilespacefresh.ax_widget FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_ax_widget();


--
-- TOC entry 6039 (class 2620 OID 2009656)
-- Name: ax_widget_published ax_widget_publish_bir; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER ax_widget_publish_bir BEFORE INSERT ON agilespacefresh.ax_widget_published FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_ax_widget_published();


--
-- TOC entry 6040 (class 2620 OID 2009657)
-- Name: ax_widget_saved ax_widget_saved_bir; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER ax_widget_saved_bir BEFORE INSERT ON agilespacefresh.ax_widget_saved FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_ax_widget_saved();


--
-- TOC entry 6068 (class 2620 OID 2009658)
-- Name: taskf_hdr axp_sch_axgs000001; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER axp_sch_axgs000001 AFTER INSERT OR UPDATE ON agilespacefresh.taskf_hdr FOR EACH ROW EXECUTE FUNCTION agilespacefresh.axp_sch_axgs000001();


--
-- TOC entry 6046 (class 2620 OID 2009659)
-- Name: axp_appsearch_data_period axp_tr_search_appsearch; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER axp_tr_search_appsearch AFTER INSERT OR DELETE OR UPDATE ON agilespacefresh.axp_appsearch_data_period FOR EACH ROW EXECUTE FUNCTION agilespacefresh.axp_tr_search_appsearch();


--
-- TOC entry 6045 (class 2620 OID 2009660)
-- Name: axp_appsearch_data_period axp_tr_search_appsearch1; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER axp_tr_search_appsearch1 BEFORE INSERT OR DELETE OR UPDATE ON agilespacefresh.axp_appsearch_data_period FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_axp_appsearch_data_period();

ALTER TABLE agilespacefresh.axp_appsearch_data_period DISABLE TRIGGER axp_tr_search_appsearch1;


--
-- TOC entry 6067 (class 2620 OID 2009661)
-- Name: taskf_hdr set_onhold_endtime; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER set_onhold_endtime AFTER UPDATE OF status ON agilespacefresh.taskf_hdr FOR EACH ROW EXECUTE FUNCTION agilespacefresh.update_onhold_endtime();


--
-- TOC entry 6070 (class 2620 OID 2009662)
-- Name: taskputonhold_hdr set_onhold_endtime; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER set_onhold_endtime AFTER UPDATE OF status ON agilespacefresh.taskputonhold_hdr FOR EACH ROW EXECUTE FUNCTION agilespacefresh.update_onhold_endtime();


--
-- TOC entry 6072 (class 2620 OID 2009663)
-- Name: taskstatus status_onhold_endtime; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER status_onhold_endtime AFTER UPDATE OF status ON agilespacefresh.taskstatus FOR EACH ROW EXECUTE FUNCTION agilespacefresh.taskstatus_onhold_endtime();


--
-- TOC entry 6043 (class 2620 OID 2009664)
-- Name: axlanguage11x t1_axlanguage11x; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER t1_axlanguage11x AFTER INSERT ON agilespacefresh.axlanguage11x FOR EACH ROW EXECUTE FUNCTION agilespacefresh.t1_axlanguage11x();


--
-- TOC entry 6066 (class 2620 OID 2009665)
-- Name: taskf_hdr tr_auto_close_tasks; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER tr_auto_close_tasks AFTER INSERT OR UPDATE ON agilespacefresh.taskf_hdr FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_auto_close_tasks();


--
-- TOC entry 6061 (class 2620 OID 2009666)
-- Name: iconfiguration tr_axpconfigs_iviews; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER tr_axpconfigs_iviews BEFORE INSERT OR DELETE OR UPDATE ON agilespacefresh.iconfiguration FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_iconfiguration();


--
-- TOC entry 6060 (class 2620 OID 2009667)
-- Name: iconfiguration tr_axpconfigs_iviews1; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER tr_axpconfigs_iviews1 AFTER INSERT OR DELETE OR UPDATE ON agilespacefresh.iconfiguration FOR EACH ROW EXECUTE FUNCTION agilespacefresh.tr_axpconfigs_iviews();


--
-- TOC entry 6075 (class 2620 OID 2009668)
-- Name: tconfiguration tr_axpconfigs_tstructs; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER tr_axpconfigs_tstructs BEFORE INSERT OR DELETE OR UPDATE ON agilespacefresh.tconfiguration FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_tconfiguration();


--
-- TOC entry 6074 (class 2620 OID 2009669)
-- Name: tconfiguration tr_axpconfigs_tstructs1; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER tr_axpconfigs_tstructs1 AFTER INSERT OR DELETE OR UPDATE ON agilespacefresh.tconfiguration FOR EACH ROW EXECUTE FUNCTION agilespacefresh.tr_axpconfigs_tstructs();


--
-- TOC entry 6057 (class 2620 OID 2009670)
-- Name: close1 trg_after_insert_update_close; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_after_insert_update_close AFTER INSERT OR UPDATE ON agilespacefresh.close1 FOR EACH ROW EXECUTE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_close();


--
-- TOC entry 6069 (class 2620 OID 2009671)
-- Name: taskinformdelay_hdr trg_after_insert_update_delay; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_after_insert_update_delay AFTER INSERT OR UPDATE ON agilespacefresh.taskinformdelay_hdr FOR EACH ROW EXECUTE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_delay();


--
-- TOC entry 6059 (class 2620 OID 2009672)
-- Name: drop1 trg_after_insert_update_drop; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_after_insert_update_drop AFTER INSERT OR UPDATE ON agilespacefresh.drop1 FOR EACH ROW EXECUTE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_drop();


--
-- TOC entry 6064 (class 2620 OID 2009673)
-- Name: taskassign_hdr trg_after_insert_update_reassign; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_after_insert_update_reassign AFTER INSERT OR UPDATE ON agilespacefresh.taskassign_hdr FOR EACH ROW EXECUTE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_reassign();


--
-- TOC entry 6062 (class 2620 OID 2009674)
-- Name: retun1 trg_after_insert_update_return; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_after_insert_update_return AFTER INSERT OR UPDATE ON agilespacefresh.retun1 FOR EACH ROW EXECUTE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_return();


--
-- TOC entry 6071 (class 2620 OID 2009675)
-- Name: tasksend_hdr trg_after_insert_update_send; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_after_insert_update_send AFTER INSERT OR UPDATE ON agilespacefresh.tasksend_hdr FOR EACH ROW EXECUTE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_send();


--
-- TOC entry 6073 (class 2620 OID 2009676)
-- Name: taskstatusupdate_hdr trg_after_insert_update_status; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_after_insert_update_status AFTER INSERT OR UPDATE ON agilespacefresh.taskstatusupdate_hdr FOR EACH ROW EXECUTE FUNCTION agilespacefresh.trg_update_taskf_hdr_status_update();


--
-- TOC entry 6063 (class 2620 OID 2009678)
-- Name: taskaccepthdr trg_after_insert_update_taskaccepthdr; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_after_insert_update_taskaccepthdr AFTER INSERT OR UPDATE ON agilespacefresh.taskaccepthdr FOR EACH ROW EXECUTE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_accept();


--
-- TOC entry 6058 (class 2620 OID 2009679)
-- Name: complete_hdr trg_after_insert_update_taskcompletehdr; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_after_insert_update_taskcompletehdr AFTER INSERT OR UPDATE ON agilespacefresh.complete_hdr FOR EACH ROW EXECUTE FUNCTION agilespacefresh.trg_update_taskf_hdr_from_complete();


--
-- TOC entry 6041 (class 2620 OID 2009680)
-- Name: axactivetasks trg_axactivetasks; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_axactivetasks AFTER INSERT ON agilespacefresh.axactivetasks FOR EACH ROW WHEN ((((new.grouped IS NULL) AND ((new.assigntoflg)::text = ANY (ARRAY[('2'::character varying)::text, ('3'::character varying)::text]))) OR ((new.assigntoflg)::text = ANY (ARRAY[('1'::character varying)::text, ('4'::character varying)::text])))) EXECUTE FUNCTION agilespacefresh.fn_axactivetasks();


--
-- TOC entry 6048 (class 2620 OID 2009681)
-- Name: axpdef_peg_actor trg_axpdef_peg_actor; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_axpdef_peg_actor AFTER UPDATE ON agilespacefresh.axpdef_peg_actor FOR EACH ROW WHEN (((new.olddefusername)::text <> (new.defusername)::text)) EXECUTE FUNCTION agilespacefresh.fn_pegv2_updapp_default();


--
-- TOC entry 6049 (class 2620 OID 2009682)
-- Name: axpdef_peg_actorusergrp trg_axpdef_peg_actorusergrp; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_axpdef_peg_actorusergrp AFTER UPDATE ON agilespacefresh.axpdef_peg_actorusergrp FOR EACH ROW WHEN (((new.oldugrpusername)::text <> (new.ugrpusername)::text)) EXECUTE FUNCTION agilespacefresh.fn_pegv2_updapp_usegroups();


--
-- TOC entry 6050 (class 2620 OID 2009683)
-- Name: axpdef_peg_grpfilter trg_axpdef_peg_grpfilter; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_axpdef_peg_grpfilter AFTER UPDATE ON agilespacefresh.axpdef_peg_grpfilter FOR EACH ROW WHEN (((new.olddatagrpusers)::text <> (new.datagrpusers)::text)) EXECUTE FUNCTION agilespacefresh.fn_pegv2_updapp_datagroups();


--
-- TOC entry 6051 (class 2620 OID 2009685)
-- Name: axpeg_sendmsg trg_axpeg_sendmsg; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_axpeg_sendmsg AFTER INSERT ON agilespacefresh.axpeg_sendmsg FOR EACH ROW EXECUTE FUNCTION agilespacefresh.trg_axpeg_sendmsg();


--
-- TOC entry 6047 (class 2620 OID 2009686)
-- Name: axp_mailjobs trg_axpmailjobs; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_axpmailjobs BEFORE INSERT ON agilespacefresh.axp_mailjobs FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_axpmailjobs();


--
-- TOC entry 6052 (class 2620 OID 2009687)
-- Name: axprocessdefv2 trg_axprocessdefv2; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_axprocessdefv2 BEFORE INSERT OR UPDATE ON agilespacefresh.axprocessdefv2 FOR EACH ROW EXECUTE FUNCTION agilespacefresh.trg_axprocessdefv2();


--
-- TOC entry 6053 (class 2620 OID 2009688)
-- Name: axpscriptrunner trg_axpscriptrunner; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_axpscriptrunner AFTER INSERT ON agilespacefresh.axpscriptrunner FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_axpscriptrunner();


--
-- TOC entry 6054 (class 2620 OID 2009689)
-- Name: axrelations trg_axrelations; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_axrelations BEFORE INSERT ON agilespacefresh.axrelations FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_axrelations();


--
-- TOC entry 6055 (class 2620 OID 2009690)
-- Name: axsms trg_axsms; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_axsms BEFORE INSERT ON agilespacefresh.axsms FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_axsms();


--
-- TOC entry 6044 (class 2620 OID 2009691)
-- Name: axuserlevelgroups trg_axuserlevelgroups; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_axuserlevelgroups BEFORE INSERT OR UPDATE ON agilespacefresh.axuserlevelgroups FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_axuserlevelgroups();


--
-- TOC entry 6056 (class 2620 OID 2009692)
-- Name: axusers trg_axusers; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_axusers BEFORE INSERT OR UPDATE ON agilespacefresh.axusers FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_axusers();


--
-- TOC entry 6065 (class 2620 OID 2009693)
-- Name: taskf_hdr trg_manage_taskusers; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_manage_taskusers AFTER INSERT OR DELETE ON agilespacefresh.taskf_hdr FOR EACH ROW EXECUTE FUNCTION agilespacefresh.trg_manage_taskusers();


--
-- TOC entry 6042 (class 2620 OID 2009694)
-- Name: axdsignconfig trg_updatdsign; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trg_updatdsign BEFORE INSERT OR UPDATE ON agilespacefresh.axdsignconfig FOR EACH ROW EXECUTE FUNCTION agilespacefresh.fn_updatdsign();


--
-- TOC entry 6080 (class 2620 OID 2009695)
-- Name: users_logincontrolsroles trigger_users_logincontrolsroles; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trigger_users_logincontrolsroles AFTER INSERT ON agilespacefresh.users_logincontrolsroles FOR EACH ROW EXECUTE FUNCTION agilespacefresh.trigger_fn_updateaxuser();


--
-- TOC entry 6079 (class 2620 OID 2009700)
-- Name: users_logincontrols trigger_users_updateaxuserheader; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER trigger_users_updateaxuserheader AFTER INSERT ON agilespacefresh.users_logincontrols FOR EACH ROW EXECUTE FUNCTION agilespacefresh.trigger_fn_updateaxuserbasic();


--
-- TOC entry 6078 (class 2620 OID 2009702)
-- Name: tthy1 update_comma_separated_column_trigger; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER update_comma_separated_column_trigger BEFORE INSERT OR UPDATE ON agilespacefresh.tthy1 FOR EACH ROW EXECUTE FUNCTION agilespacefresh.update_comma_separated_column();


--
-- TOC entry 6077 (class 2620 OID 2009703)
-- Name: tthy1 update_users_list_trigger; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER update_users_list_trigger BEFORE INSERT OR UPDATE ON agilespacefresh.tthy1 FOR EACH ROW EXECUTE FUNCTION agilespacefresh.append_username_to_users();


--
-- TOC entry 6076 (class 2620 OID 2009704)
-- Name: tthy1 update_userstrigger; Type: TRIGGER; Schema: agilespacefresh; Owner: agilespace
--

CREATE TRIGGER update_userstrigger BEFORE INSERT OR UPDATE ON agilespacefresh.tthy1 FOR EACH ROW EXECUTE FUNCTION agilespacefresh.append_users();


--
-- TOC entry 6019 (class 2606 OID 2009705)
-- Name: ax_homebuild_responsibility ax_homebuild_responsibility_homebuild_id_fkey; Type: FK CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_homebuild_responsibility
    ADD CONSTRAINT ax_homebuild_responsibility_homebuild_id_fkey FOREIGN KEY (homebuild_id) REFERENCES agilespacefresh.ax_homebuild_master(homebuild_id) ON DELETE CASCADE;


--
-- TOC entry 6020 (class 2606 OID 2009710)
-- Name: ax_homebuild_sd_responsibility ax_homebuild_sd_responsibility_homebuild_id_fkey; Type: FK CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_homebuild_sd_responsibility
    ADD CONSTRAINT ax_homebuild_sd_responsibility_homebuild_id_fkey FOREIGN KEY (homebuild_id) REFERENCES agilespacefresh.ax_homebuild_saved(homebuild_id) ON DELETE CASCADE;


--
-- TOC entry 6021 (class 2606 OID 2009715)
-- Name: ax_hp_user_level_widget ax_hp_user_level_widget_page_id_fkey; Type: FK CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_hp_user_level_widget
    ADD CONSTRAINT ax_hp_user_level_widget_page_id_fkey FOREIGN KEY (page_id) REFERENCES agilespacefresh.ax_pages(page_id) ON DELETE CASCADE;


--
-- TOC entry 6022 (class 2606 OID 2009721)
-- Name: ax_page_responsibility ax_page_responsibility_page_id_fkey; Type: FK CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_page_responsibility
    ADD CONSTRAINT ax_page_responsibility_page_id_fkey FOREIGN KEY (page_id) REFERENCES agilespacefresh.ax_pages(page_id) ON DELETE CASCADE;


--
-- TOC entry 6023 (class 2606 OID 2009726)
-- Name: ax_page_sd_responsibility ax_page_sd_responsibility_page_id_fkey; Type: FK CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_page_sd_responsibility
    ADD CONSTRAINT ax_page_sd_responsibility_page_id_fkey FOREIGN KEY (page_id) REFERENCES agilespacefresh.ax_page_saved(page_id) ON DELETE CASCADE;


--
-- TOC entry 6024 (class 2606 OID 2009731)
-- Name: ax_widget_published ax_widget_published_page_id_fkey; Type: FK CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_widget_published
    ADD CONSTRAINT ax_widget_published_page_id_fkey FOREIGN KEY (page_id) REFERENCES agilespacefresh.ax_pages(page_id) ON DELETE CASCADE;


--
-- TOC entry 6025 (class 2606 OID 2009736)
-- Name: ax_widget_published ax_widget_published_parent_widget_id_fkey; Type: FK CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_widget_published
    ADD CONSTRAINT ax_widget_published_parent_widget_id_fkey FOREIGN KEY (parent_widget_id) REFERENCES agilespacefresh.ax_widget_saved(widget_id) ON DELETE CASCADE;


--
-- TOC entry 6026 (class 2606 OID 2009741)
-- Name: ax_widget_responsibility ax_widget_responsibility_widget_id_fkey; Type: FK CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_widget_responsibility
    ADD CONSTRAINT ax_widget_responsibility_widget_id_fkey FOREIGN KEY (widget_id) REFERENCES agilespacefresh.ax_widget(widget_id) ON DELETE CASCADE;


--
-- TOC entry 6027 (class 2606 OID 2009746)
-- Name: ax_widget_saved ax_widget_saved_page_id_fkey; Type: FK CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.ax_widget_saved
    ADD CONSTRAINT ax_widget_saved_page_id_fkey FOREIGN KEY (page_id) REFERENCES agilespacefresh.ax_page_saved(page_id) ON DELETE CASCADE;


--
-- TOC entry 6028 (class 2606 OID 2009751)
-- Name: axresponse axresponse_requestid_fkey; Type: FK CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.axresponse
    ADD CONSTRAINT axresponse_requestid_fkey FOREIGN KEY (requestid) REFERENCES agilespacefresh.axrequest(requestid);


--
-- TOC entry 6029 (class 2606 OID 2009756)
-- Name: users_logincontrols fk_user_name_a__uc; Type: FK CONSTRAINT; Schema: agilespacefresh; Owner: agilespace
--

ALTER TABLE ONLY agilespacefresh.users_logincontrols
    ADD CONSTRAINT fk_user_name_a__uc FOREIGN KEY (user_name) REFERENCES agilespacefresh.users_logindetails(users_logindetailsid);


-- Completed on 2025-09-18 19:00:42

--
-- PostgreSQL database dump complete
--

